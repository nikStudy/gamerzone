{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin-routing.module.ts","./src/app/admin/admin.module.ts","./src/app/admin/auth.interceptor.ts","./src/app/admin/edit-user/edit-user.component.ts","./src/app/admin/edit-user/edit-user.component.html","./src/app/admin/management.service.ts","./src/app/admin/management/management.component.ts","./src/app/admin/management/management.component.html","./src/app/admin/permission.guard.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/activation/activation.component.ts","./src/app/auth/activation/activation.component.html","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.interceptor.ts","./src/app/auth/auth.module.ts","./src/app/auth/check-session/check-session.component.ts","./src/app/auth/check-session/check-session.component.html","./src/app/auth/dashboard/dashboard.component.ts","./src/app/auth/dashboard/dashboard.component.html","./src/app/auth/forgot-password/forgot-password.component.ts","./src/app/auth/forgot-password/forgot-password.component.html","./src/app/auth/forgot-username/forgot-username.component.ts","./src/app/auth/forgot-username/forgot-username.component.html","./src/app/auth/logged.guard.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/new-password/new-password.component.ts","./src/app/auth/new-password/new-password.component.html","./src/app/auth/not-logged.guard.ts","./src/app/auth/registration/registration.component.ts","./src/app/auth/registration/registration.component.html","./src/app/auth/resend-activation-link/resend-activation-link.component.ts","./src/app/auth/resend-activation-link/resend-activation-link.component.html","./src/app/auth/social-error/social-error.component.ts","./src/app/auth/social-error/social-error.component.html","./src/app/auth/social/social.component.ts","./src/app/auth/social/social.component.html","./src/app/auth/user.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/products/checkout/checkout.component.ts","./src/app/products/checkout/checkout.component.html","./src/app/products/logged.guard.ts","./src/app/products/products-list/products-list.component.ts","./src/app/products/products-list/products-list.component.html","./src/app/products/products-routing.module.ts","./src/app/products/products.module.ts","./src/app/products/products.service.ts","./src/app/products/shopping-cart/shopping-cart.component.ts","./src/app/products/shopping-cart/shopping-cart.component.html","./src/app/services/cart.store.ts","./src/app/services/products.store.ts","./src/app/static-pages/about-us/about-us.component.ts","./src/app/static-pages/about-us/about-us.component.html","./src/app/static-pages/static-pages-routing.module.ts","./src/app/static-pages/static-pages.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACiB;AACnB;AACe;;;AAGpE,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,oFAAmB,EAAE,WAAW,EAAE,CAAC,iEAAe,CAAC,EAAC;IACpF,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,gFAAiB,EAAE,WAAW,EAAE,CAAC,iEAAe,CAAC,EAAC;CACjF,CAAC;AAMK,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,kBAAkB,uFAFnB,4DAAY;6FAEX,kBAAkB;cAJ9B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEa;AACY;AACG;AACtB;AACI;AACJ;AACa;AACE;;AAoB7D,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,mBARX,CAAC,qEAAiB,EAAE,iEAAe;QAC5C;YACE,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,iEAAe;YACzB,KAAK,EAAE,IAAI;SACZ;KACF,YAbQ;YACP,4DAAY;YACZ,qEAAgB;YAChB,0DAAW;YACX,kEAAmB;YACnB,wEAAkB;SACnB;mIASU,WAAW,mBAhBP,oFAAmB,EAAE,gFAAiB,aAEnD,4DAAY;QACZ,qEAAgB;QAChB,0DAAW;QACX,kEAAmB;QACnB,wEAAkB;6FAUT,WAAW;cAjBvB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,oFAAmB,EAAE,gFAAiB,CAAC;gBACtD,OAAO,EAAE;oBACP,4DAAY;oBACZ,qEAAgB;oBAChB,0DAAW;oBACX,kEAAmB;oBACnB,wEAAkB;iBACnB;gBACD,SAAS,EAAE,CAAC,qEAAiB,EAAE,iEAAe;oBAC5C;wBACE,OAAO,EAAE,sEAAiB;wBAC1B,QAAQ,EAAE,iEAAe;wBACzB,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAA2C;;AAKpC,MAAM,eAAe;IAExB,SAAS,CAAG,GAAqB,EACrB,IAAiB;QAEzB,MAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,OAAO,EAAE;YACT,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC;gBACrB,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EACxC,SAAS,GAAG,OAAO,CAAC;aACvB,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC9B;aAAM;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC3B;IACL,CAAC;;8EAfQ,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;ICI5D,0EAAmD;IAAA,uDAAa;IAAA,4DAAM;;;IAAnB,0DAAa;IAAb,+EAAa;;;IAK9D,2EAAwH;IAAA,2EAAgB;IAAA,4DAAO;;;IAC/I,2EAAkF;IAAA,uJAA4F;IAAA,4DAAO;;;IAMrL,2EAAgI;IAAA,+EAAoB;IAAA,4DAAO;;;IAC3J,2EAAsF;IAAA,sHAA2D;IAAA,4DAAO;;;IAMxJ,2EAA0H;IAAA,oFAAyB;IAAA,4DAAO;;;IAC1J,2EAAmF;IAAA,mHAAwD;IAAA,4DAAO;;ADfrJ,MAAM,iBAAiB;IAQ5B,YAAoB,WAAwB,EAAU,iBAAoC,EAAU,KAAqB;QAArG,gBAAW,GAAX,WAAW,CAAa;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,UAAK,GAAL,KAAK,CAAgB;QANzH,cAAS,GAAY,KAAK,CAAC;QAC3B,YAAO,GAAW,EAAE,CAAC;QAErB,mBAAc,GAAG,EAAE,CAAC;IAGyG,CAAC;IAE9H,QAAQ;QAEN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,8CAA8C;QAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC5C,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACtD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,UAAU,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,IAAI,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;YAChG,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;YACnG,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,EAAE,yDAAU,CAAC,OAAO,CAAC,qEAAqE,CAAC,CAAC,CAAC,CAAC;YACrK,UAAU,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC,CAAC,CAAC;SACjI,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,EAAE;QACR,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAClD,qBAAqB;YACrB,IAAG,IAAI,CAAC,OAAO,EAAE;gBACf,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC3C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;oBACvB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI;oBACpB,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;oBAC5B,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;oBACtB,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU;iBACjC,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,aAAa;QAC5B,uCAAuC;QACvC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;YACvB,UAAU,EAAE,aAAa;SAC1B,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC/B,qBAAqB;QAErB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACvD,CAAC;IAED,UAAU,CAAC,IAAI,EAAE,EAAE;QACjB,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC3D,qBAAqB;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YACpB,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,IAAG,IAAI,CAAC,OAAO,EAAE;gBACf,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;kFAlFU,iBAAiB;iGAAjB,iBAAiB;QCV9B,yEACI;QAAA,yEACE;QAAA,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAAA,gEAElB;QAAA,0EACE;QAAA,6GAAmD;QAEnD,yEACE;QAAA,2EAAmC;QAAA,mEAAQ;QAAA,4DAAQ;QACnD,uEACA;QAAA,iHAAwH;QACxH,iHAAkF;QACpF,4DAAM;QAEN,0EACE;QAAA,4EAAuC;QAAA,wEAAY;QAAA,4DAAQ;QAC3D,uEACA;QAAA,iHAAgI;QAChI,iHAAsF;QACxF,4DAAM;QAEN,0EACE;QAAA,6EAAoC;QAAA,wEAAY;QAAA,4DAAQ;QACxD,wEACA;QAAA,iHAA0H;QAC1H,iHAAmF;QACrF,4DAAM;QAEN,0EACE;QAAA,6EAAmD;QAAA,0EAAc;QAAA,4DAAQ;QACzE,2EACE;QAAA,8EAAqK;QAAnC,0IAAS,qBAAiB,MAAM,CAAC,IAAC;QAAC,gEAAI;QAAA,4DAAS;QAClL,8EAA+K;QAAxC,0IAAS,qBAAiB,WAAW,CAAC,IAAC;QAAC,qEAAS;QAAA,4DAAS;QACjM,8EAA8N;QAApC,0IAAS,qBAAiB,OAAO,CAAC,IAAC;QAAC,iEAAK;QAAA,4DAAS;QAC9O,4DAAM;QACN,uEAA8B;QAC9B,4EAAwD;QAAA,wDAAwC;QAAA,4DAAO;QACzG,4DAAM;QAEN,2EACI;QAAA,8EAAmG;QAAvB,0IAAS,gBAAY,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAClH,8EAAyG;QAAA,mEAAO;QAAA,4DAAS;QAC7H,4DAAM;QACR,4DAAO;QACT,4DAAM;QACJ,iEACJ;QAAA,4DAAM;;QA1CI,0DAAsB;QAAtB,mFAAsB;QACrB,0DAAiB;QAAjB,+EAAiB;QAKM,0DAA6F;QAA7F,6JAA6F;QAC7F,0DAAuD;QAAvD,mHAAuD;QAMvD,0DAAqG;QAArG,qKAAqG;QACrG,0DAA2D;QAA3D,uHAA2D;QAM3D,0DAA+F;QAA/F,+JAA+F;QAC/F,0DAAwD;QAAxD,oHAAwD;QAMQ,0DAAyC;QAAzC,iGAAyC;QACzC,0DAA8C;QAA9C,sGAA8C;QAC9C,0DAA0C;QAA1C,kGAA0C;QAG5E,0DAAwC;QAAxC,kHAAwC;QAIhD,0DAA6B;QAA7B,0FAA6B;;6FD9B1E,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,iBAAiB;IAE5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,aAAa;QACX,uDAAuD;QACvD,MAAM,GAAG,GAAG,kBAAkB,CAAC;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,WAAW;QACT,uDAAuD;QACvD,MAAM,GAAG,GAAG,kBAAkB,CAAC;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,UAAU,CAAC,QAAgB;QACzB,uDAAuD;QACvD,MAAM,GAAG,GAAG,kBAAkB,CAAC;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,GAAG,GAAG,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAED,OAAO,CAAC,EAAE;QACR,iDAAiD;QACjD,MAAM,GAAG,GAAG,YAAY,CAAC;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,GAAG,EAAE,CAAC,CAAC;IACtC,CAAC;IAED,UAAU,CAAC,IAAI,EAAE,EAAE;QACjB,iDAAiD;QACjD,MAAM,GAAG,GAAG,YAAY,CAAC;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,GAAG;QACD,6CAA6C;QAC7C,MAAM,GAAG,GAAG,YAAY,CAAC;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,CAAC,CAAC;IACjC,CAAC;;kFAtCU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICU9C,0EAAmD;IAAA,uDAAa;IAAA,4DAAM;;;IAAnB,0DAAa;IAAb,+EAAa;;;IAsBxD,6EAA8H;IAAA,+DAAI;IAAA,4DAAS;;;IAA1E,6GAAiC;;;;IAClG,6EAA2G;IAApC,2aAAmC;IAAC,iEAAM;IAAA,4DAAS;;;IAP9H,qEACE;IAAA,qEAAI;IAAA,uDAAW;IAAA,4DAAK;IACpB,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IACzB,qEACE;IAAA,8HAA8H;IAC9H,8HAA2G;IAC7G,4DAAK;IAEP,4DAAK;;;;;IATC,0DAAW;IAAX,yEAAW;IACX,0DAAe;IAAf,6EAAe;IACf,0DAAmB;IAAnB,iFAAmB;IACnB,0DAAgB;IAAhB,8EAAgB;IAE4B,0DAAkB;IAAlB,mFAAkB;IACd,0DAAoB;IAApB,qFAAoB;;ADzB3E,MAAM,mBAAmB;IAW9B,YAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QARxD,iBAAY,GAAG,IAAI,CAAC;QACpB,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,EAAE,CAAC;QACb,eAAU,GAAG,KAAK,CAAC;QACnB,iBAAY,GAAG,KAAK,CAAC;IAIuC,CAAC;IAE7D,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpD,qBAAqB;YACrB,IAAG,IAAI,CAAC,OAAO,EAAE;gBACf,IAAI,IAAI,CAAC,UAAU,KAAK,OAAO,IAAI,IAAI,CAAC,UAAU,KAAK,WAAW,EAAE;oBAClE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAC1B,IAAI,IAAI,CAAC,UAAU,KAAK,WAAW,EAAE;wBACnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;qBACxB;yBAAM,IAAI,IAAI,CAAC,UAAU,KAAK,OAAO,EAAE;wBACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;qBAC1B;iBACF;qBAAM;oBACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;iBAC7B;aACF;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;YACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;SAChC;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,6BAA6B,CAAC;YAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;IACH,CAAC;IAED,OAAO;QACL,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAED,UAAU,CAAC,QAAgB;QACzB,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACzD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;QACL,CAAC,CAAC,CAAC;IACL,CAAC;;sFAxEU,mBAAmB;mGAAnB,mBAAmB;QCRhC,yEACI;QAAA,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QAAA,gEAAI;QAAA,gEAE5B;QAAA,sEACE;QAAA,gFACA;QAAA,2EACA;QADmB,6LAA0B;QAA7C,4DACA;QAAA,4EAA2E;QAAxB,2IAAS,iBAAa,IAAC;QAAC,uEAAY;QAAA,4DAAS;QAChG,6EAAuE;QAApB,4IAAS,aAAS,IAAC;QAAC,oEAAQ;QAAA,4DAAS;QAC1F,4DAAM;QAAA,iEAEN;QAAA,iHAAmD;QAEnD,4EACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEAAgB;QAAA,yEAAmC;QAAA,2EAAe;QAAA,4DAAK;QAAA,4DAAK;QAC9E,4DAAK;QACL,sEACE;QAAA,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACjB,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,gHACE;;QAUJ,4DAAQ;QACV,4DAAQ;QAEZ,4DAAM;;QAnCmB,0DAA0B;QAA1B,qFAA0B;QAK1C,0DAAiB;QAAjB,+EAAiB;QAgBd,2DAA8D;QAA9D,8JAA8D;;6FDlB7D,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AASpC,MAAM,eAAe;IAE1B,YAAoB,MAAc,EAAU,iBAAoC;QAA5D,WAAM,GAAN,MAAM,CAAQ;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;IAAG,CAAC;IAEpF,WAAW,CACT,IAA4B,EAC5B,KAA0B;QAC1B,IAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC;YAE9B,OAAO,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACpE,IAAG,IAAI,CAAC,UAAU,KAAK,OAAO,IAAI,IAAI,CAAC,UAAU,KAAK,WAAW,EAAE;oBACjE,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,KAAK,CAAC,uEAAuE,CAAC,CAAC;oBAC/E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC5B,OAAO,KAAK,CAAC;iBACd;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACH,KAAK,CAAC,uEAAuE,CAAC,CAAC;YAC/E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5B,OAAO,KAAK,CAAC;SAChB;IACH,CAAC;;8EAvBU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAGvD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAC;CACtD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;AAQnC,MAAM,YAAY;IAGvB,YAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAFxD,UAAK,GAAG,eAAe,CAAC;IAEmC,CAAC;IAE5D,QAAQ;QACN,oDAAoD;IACtD,CAAC;;wEAPU,YAAY;4FAAZ,YAAY;QCRzB,sEACE;QAAA,wEAAyB;QAEzB,2EAA+B;QACjC,4DAAM;;6FDIO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACa;AACZ;AACuB;AACpB;AAC2B;AAC3B;AACY;AACH;AACmB;;AAoBxE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,gEAAa,EAAE,4EAAiB,CAAC,YAVpC;YACP,uEAAa;YACb,4DAAU;YACV,+DAAW;YACX,yEAAc;YACd,mFAAiB;YACjB,qEAAgB;YAChB,oEAAgB;YAChB,6FAAuB;SACxB;mIAIU,SAAS,mBAhBlB,2DAAY;QACZ,wEAAe,aAGf,uEAAa;QACb,4DAAU;QACV,+DAAW;QACX,yEAAc;QACd,mFAAiB;QACjB,qEAAgB;QAChB,oEAAgB;QAChB,6FAAuB;6FAKd,SAAS;cAlBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wEAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4DAAU;oBACV,+DAAW;oBACX,yEAAc;oBACd,mFAAiB;oBACjB,qEAAgB;oBAChB,oEAAgB;oBAChB,6FAAuB;iBACxB;gBACD,SAAS,EAAE,CAAC,gEAAa,EAAE,4EAAiB,CAAC;gBAC7C,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICE9C,yEAAmD;IAAA,uDAA2C;IAAA,4DAAM;;;IAAjD,0DAA2C;IAA3C,sHAA2C;;;IAC9F,yEACI;IAAA,uDACA;IAAA,4EAAqF;IAAA,iFAAsB;IAAA,4DAAS;IACxH,4DAAM;;;IAFF,0DACA;IADA,0FACA;;ADID,MAAM,mBAAmB;IAK9B,YAAoB,KAAqB,EAAU,WAAwB,EAAU,MAAc;QAA/E,UAAK,GAAL,KAAK,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAHnG,YAAO,GAAW,EAAE,CAAC;QACrB,cAAS,GAAG,KAAK,CAAC;IAEqF,CAAC;IAExG,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAC1E,IAAI,CAAC,EAAE;YACP,qBAAqB;YACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;QAEH,CAAC,CAAC,CAAC;IAEL,CAAC;;sFAvBU,mBAAmB;mGAAnB,mBAAmB;QCThC,yEACI;QAAA,qEAAI;QAAA,6EAAkB;QAAA,4DAAK;QAC3B,+GAAmD;QACnD,+GACI;QAGR,4DAAM;;QALG,0DAAiB;QAAjB,+EAAiB;QACjB,0DAAkB;QAAlB,gFAAkB;;6FDMd,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACE;AACqB;AACT;AACT;AACY;AACkC;AAC7B;AACS;AACA;AACT;AAChC;AACO;;;AAGpD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,0FAAqB,EAAE,WAAW,EAAE,CAAC,iEAAc,CAAC,EAAC;IACvF,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE,WAAW,EAAE,CAAC,iEAAc,CAAC,EAAC;IACzE,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAE,WAAW,EAAE,CAAC,0DAAW,CAAC,EAAC;IAC9E,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,wEAAe,EAAE,WAAW,EAAE,CAAC,0DAAW,CAAC,EAAC;IAC/E,EAAC,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,oFAAmB,EAAE,WAAW,EAAE,CAAC,iEAAc,CAAC,EAAC;IACxF,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,sHAA6B,EAAE,WAAW,EAAE,CAAC,iEAAc,CAAC,EAAC;IACzF,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,yFAAoB,EAAE,WAAW,EAAE,CAAC,iEAAc,CAAC,EAAC;IACtF,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,kGAAuB,EAAE,WAAW,EAAE,CAAC,iEAAc,CAAC,EAAC;IAC3F,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,mGAAuB,EAAE,WAAW,EAAE,CAAC,iEAAc,CAAC,EAAC;IAC3F,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,0FAAoB,EAAE,WAAW,EAAE,CAAC,iEAAc,CAAC,EAAC;CACvF,CAAC;AAMK,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAHnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,iBAAiB,uFAFlB,4DAAY;6FAEX,iBAAiB;cAJ7B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC/BD;AAAA;AAAA;AAA2C;;AAKpC,MAAM,eAAe;IAExB,SAAS,CAAG,GAAqB,EACrB,IAAiB;QAEzB,MAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,OAAO,EAAE;YACT,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC;gBACrB,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EACxC,SAAS,GAAG,OAAO,CAAC;aACvB,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC9B;aAAM;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC3B;IACL,CAAC;;8EAfQ,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEW;AACoB;AACrB;AACJ;AAC4C;AAC5B;AACxB;AACe;AAC0B;AAClC;AACoB;AACkC;AAC7B;AACS;AACA;AACT;AACG;AACnC;AACO;AACC;;;AAyB9C,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,mBAPV,CAAC,yDAAW,EAAE,0DAAW,EAAE,iEAAc;QAClD;YACE,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,kEAAe;YACzB,KAAK,EAAE,IAAI;SACZ,CAAC,YAlBK;YACP,4DAAY;YACZ,kEAAmB;YACnB,qEAAgB;YAChB,yEAAoB,CAAC,WAAW,CAAC;gBAC/B,UAAU,EAAE,YAAY;gBACxB,UAAU,EAAE,cAAc;aAC3B,CAAC;YACF,6DAAe;YACf,kEAAoB;YACpB,sEAAiB;SAClB;mIASU,UAAU,mBArBN,0FAAqB,EAAE,qEAAc,EAAE,iFAAkB,EAAE,wEAAe,EAAE,qFAAmB,EAAE,uHAA6B,EAAE,0FAAoB,EAAE,mGAAuB,EAAE,mGAAuB,EAAE,0FAAoB,EAAE,6FAAqB,aAEhQ,4DAAY;QACZ,kEAAmB;QACnB,qEAAgB,6EAKhB,6DAAe;QACf,kEAAoB;QACpB,sEAAiB,aAET,6FAAqB;6FAQpB,UAAU;cAtBtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,0FAAqB,EAAE,qEAAc,EAAE,iFAAkB,EAAE,wEAAe,EAAE,qFAAmB,EAAE,uHAA6B,EAAE,0FAAoB,EAAE,mGAAuB,EAAE,mGAAuB,EAAE,0FAAoB,EAAE,6FAAqB,CAAC;gBACnQ,OAAO,EAAE;oBACP,4DAAY;oBACZ,kEAAmB;oBACnB,qEAAgB;oBAChB,yEAAoB,CAAC,WAAW,CAAC;wBAC/B,UAAU,EAAE,YAAY;wBACxB,UAAU,EAAE,cAAc;qBAC3B,CAAC;oBACF,6DAAe;oBACf,kEAAoB;oBACpB,sEAAiB;iBAClB;gBACD,OAAO,EAAE,CAAC,6FAAqB,CAAC;gBAChC,SAAS,EAAE,CAAC,yDAAW,EAAE,0DAAW,EAAE,iEAAc;oBAClD;wBACE,OAAO,EAAE,sEAAiB;wBAC1B,QAAQ,EAAE,kEAAe;wBACzB,KAAK,EAAE,IAAI;qBACZ,CAAC;aACL;;;;;;;;;;;;;;AC9CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;ICoB7C,0EACI;IAAA,qEAA0B;IAC1B,qEAA0B;IAC1B,qEAA0B;IAC9B,4DAAM;;;;IAKN,6EAAgH;IAA7C,uUAAwB;IAAqB,8DAAG;IAAA,4DAAS;;;;IAC5H,6EAA6G;IAA3C,qUAAsB;IAAqB,6DAAE;IAAA,4DAAS;;;IAF1H,0EACE;IAAA,+HAAgH;IAChH,+HAA6G;IAC/G,4DAAM;;;IAFwF,0DAAmB;IAAnB,oFAAmB;IACtB,0DAAmB;IAAnB,oFAAmB;;ADlBjH,MAAM,qBAAqB;IAShC,YAAoB,MAAc,EAAU,WAAwB,EAAU,IAAgB;QAA1E,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;QAH9F,gBAAW,GAAY,KAAK,CAAC;QAoF7B,2CAA2C;QAC3C,YAAO,GAAG,YAAY,CAAC;IAlF2E,CAAC;IAEnG,WAAW;QACT,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACnB;IACH,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;QAC7C,CAAC,CAAC,CAAC;QAEH,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,EAAE;YAC7B,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACzC,IAAI,KAAK,KAAK,IAAI,EAAE;gBAClB,uBAAuB;gBACvB,aAAa,CAAC,KAAK,CAAC,CAAC;aACtB;iBAAM;gBACL,IAAI,cAAc,GAAG,UAAS,KAAK;oBACjC,IAAI,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpC,IAAI,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;oBAC3D,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACzC,CAAC,CAAC;gBACF,IAAI,UAAU,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;gBACvC,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;gBAC9C,IAAI,SAAS,GAAG,UAAU,CAAC,GAAG,GAAG,SAAS,CAAC;gBAC3C,+BAA+B;gBAC/B,0BAA0B;gBAC1B,0CAA0C;gBAC1C,IAAG,SAAS,IAAI,EAAE,EAAE;oBAClB,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;oBAC/C,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAClB,aAAa,CAAC,KAAK,CAAC,CAAC;iBACtB;qBAAM;oBACL,wCAAwC;iBACzC;aACF;YACD,KAAK,GAAG,IAAI,CAAC;QACf,CAAC,EAAE,IAAI,CAAC,CAAC;IAEX,CAAC;IAED,SAAS,CAAC,MAAM;QACd,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,IAAI,MAAM,KAAK,CAAC,EAAE;YAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;YACrC,IAAI,CAAC,SAAS,GAAG,8EAA8E,CAAC;YAChG,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC;YAC1C,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;oBAC3C,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;oBAC7B,qBAAqB;oBACrB,IAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,IAAI,CAAC,SAAS,EAAE,CAAC;iBAChB;YACH,CAAC,EAAE,KAAK,CAAC,CAAC;SACX;aAAM,IAAI,MAAM,KAAK,CAAC,EAAE;YACvB,qBAAqB;YACrB,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;YACjC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC;YAE1C,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,EAAE,CAAC;YAEpB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACpB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;oBAC7B,IAAI,CAAC,SAAS,EAAE,CAAC;iBAClB;YACH,CAAC,EAAE,IAAI,CAAC,CAAC;SACV;IAEH,CAAC;IAAA,CAAC;IAIF,YAAY;QACV,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS;QACP,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACjC,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,YAAY;QACV,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAGD,OAAO;QACL,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CACxC,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1B,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;gBAC1B,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC7B,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACzD,MAAM,CAAC,EAAE;oBACP,IAAG,MAAM,CAAC,OAAO,EAAC;wBAChB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC3D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;wBACpC,UAAU,CAAC,GAAG,EAAE;4BACd,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;wBAC3B,CAAC,EAAE,CAAC,CAAC,CAAC;qBACP;yBAAM;wBACL,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC;qBACjC;gBACH,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACL,CAAC;;0FA7IU,qBAAqB;qGAArB,qBAAqB;QCZlC,yEACI;QAMA,yEACE;QAAA,yEACE;QAAA,yEAEE;QACA,yEACE;QAAA,wEAAwB;QAAA,uDAAiB;QAAA,4DAAK;QAC9C,4EAAgF;QAAvB,6IAAS,gBAAY,IAAC;QAAC,iEAAO;QAAA,4DAAS;QAClG,4DAAM;QAGN,yEACE;QAAA,wDACA;QAAA,mHACI;QAIN,4DAAM;QAGN,mHACE;QAIJ,4DAAM;QACR,4DAAM;QACR,4DAAM;QAER,4DAAM;;QAxB4B,0DAAiB;QAAjB,gFAAiB;QAMzC,0DACA;QADA,yFACA;QAA4B,0DAAoB;QAApB,kFAAoB;QAQxB,0DAAmB;QAAnB,iFAAmB;;6FDhB1C,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;kBASE,mDAAK;;;;;;;;;;;;;;AEpBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICUlC,wEACI;IAAA,wEACI;IAAA,uEAAM;IAAA,uDAAkD;IAAA,4DAAO;IAC/D,2EAAqD;IAAA,uDAAoB;IAAA,4DAAO;IACpF,4DAAK;IACT,4DAAK;;;IAHS,0DAAkD;IAAlD,4HAAkD;IACH,0DAAoB;IAApB,2FAAoB;;;IAP7F,yEACI;IAAA,yEACI;IAAA,yEAAiD;IAAA,uDAAiB;IAAA,4DAAM;IACxE,yEACI;IAAA,kHACI;IAKR,4DAAM;IACN,yEACI;IAAA,yEAAQ;IAAA,uDAAyC;IAAA,4DAAS;IAC9D,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;;IAbmD,0DAAiB;IAAjB,0FAAiB;IAEjC,0DAAiD;IAAjD,wGAAiD;IAQtE,0DAAyC;IAAzC,gHAAyC;;ADR1D,MAAM,kBAAkB;IAI7B,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEzE,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CACxC,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,6BAA6B;YAC7B,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;gBAC1B,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;iBAAM;gBACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;aAC3B;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,KAAa;QACnB,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClD,CAAC;;oFA3BU,kBAAkB;kGAAlB,kBAAkB;QCV/B,yEACI;QAAA,gEAAI;QAAA,gEACJ;QAAA,qEAAI;QAAA,uDAAmC;QAAA,4DAAK;QAC5C,gEAEA;QAAA,qEAAI;QAAA,yEAAQ;QAAA,oEAAS;QAAA,4DAAS;QAAA,4DAAK;QACnC,8GACI;QAeR,4DAAM;;QApBE,0DAAmC;QAAnC,2GAAmC;QAIjB,0DAA2C;QAA3C,+EAA2C;;6FDIxD,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;ICI5D,0EAAmD;IAAA,uDAAa;IAAA,4DAAM;;;IAAnB,0DAAa;IAAb,+EAAa;;;IAK9D,2EAA0H;IAAA,oFAAyB;IAAA,4DAAO;;;IAC1J,2EAAiF;IAAA,2FAAgC;IAAA,4DAAO;;ADD3H,MAAM,uBAAuB;IAQlC,YAAoB,WAAwB,EAAU,WAAwB,EAAU,MAAc;QAAlF,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QANtG,mBAAc,GAAG,KAAK,CAAC;QAEvB,cAAS,GAAY,KAAK,CAAC;QAC3B,YAAO,GAAW,EAAE,CAAC;IAGqF,CAAC;IAE3G,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC,CAAC;SAC3E,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,sDAAsD;QAEtD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,YAAY,CAAC,IAAS;QACpB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAC/C,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,6BAA6B;YAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAE5B,IAAG,IAAI,CAAC,OAAO,EAAE;gBACf,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;aAC5B;QACL,CAAC,CAAC,CAAC;IACL,CAAC;;8FA1CU,uBAAuB;uGAAvB,uBAAuB;QCVpC,yEACI;QAAA,yEACE;QAAA,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QAAA,gEAExB;QAAA,0EACE;QAAA,mHAAmD;QAEnD,yEACE;QAAA,2EAAoC;QAAA,uEAAY;QAAA,4DAAQ;QACxD,uEACA;QAAA,uHAA0H;QAC1H,uHAAiF;QACnF,4DAAM;QAEN,0EACI;QAAA,6EAAqH;QAAvB,gJAAS,gBAAY,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACxI,4DAAM;QACR,4DAAO;QACT,4DAAM;QACJ,iEACN;QAAA,4DAAM;;QAhBM,0DAAsB;QAAtB,mFAAsB;QACrB,0DAAiB;QAAjB,+EAAiB;QAKM,0DAA+F;QAA/F,+JAA+F;QAC/F,0DAAsD;QAAtD,kHAAsD;QAIhC,0DAA+C;QAA/C,gHAA+C;;6FDL5F,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;ICI5D,0EAAmD;IAAA,uDAAa;IAAA,4DAAM;;;IAAnB,0DAAa;IAAb,+EAAa;;;IAK9D,2EAA0H;IAAA,oFAAyB;IAAA,4DAAO;;;IAC1J,2EAAiF;IAAA,2FAAgC;IAAA,4DAAO;;ADD3H,MAAM,uBAAuB;IAQlC,YAAoB,WAAwB,EAAU,WAAwB,EAAU,MAAc;QAAlF,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QANtG,mBAAc,GAAG,KAAK,CAAC;QAEvB,cAAS,GAAY,KAAK,CAAC;QAC3B,YAAO,GAAW,EAAE,CAAC;IAGqF,CAAC;IAE3G,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC,CAAC;SAC3E,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC;QAEnD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,IAAS;QACb,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,CAC5C,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,6BAA6B;YAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAE5B,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC,EAAE,IAAI,CAAC,CAAC;YAET,IAAG,IAAI,CAAC,OAAO,EAAE;gBACf,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;aAC5B;QACL,CAAC,CAAC,CAAC;IACL,CAAC;;8FA9CU,uBAAuB;uGAAvB,uBAAuB;QCVpC,yEACI;QAAA,yEACE;QAAA,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QAAA,gEAExB;QAAA,0EACE;QAAA,mHAAmD;QAEnD,yEACE;QAAA,2EAAoC;QAAA,uEAAY;QAAA,4DAAQ;QACxD,uEACA;QAAA,uHAA0H;QAC1H,uHAAiF;QACnF,4DAAM;QAEN,0EACI;QAAA,6EAAqH;QAAvB,gJAAS,gBAAY,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACxI,4DAAM;QACR,4DAAO;QACT,4DAAM;QACJ,iEACJ;QAAA,4DAAM;;QAhBI,0DAAsB;QAAtB,mFAAsB;QACrB,0DAAiB;QAAjB,+EAAiB;QAKM,0DAA+F;QAA/F,+JAA+F;QAC/F,0DAAsD;QAAtD,kHAAsD;QAIhC,0DAA+C;QAA/C,gHAA+C;;6FDL5F,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,WAAW;IAEtB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEtC,WAAW,CACT,IAA4B,EAC5B,KAA0B;QAC1B,IAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC;YAC5B,OAAO,IAAI,CAAC;SACf;aAAM;YACH,KAAK,CAAC,wEAAwE,CAAC,CAAC;YAChF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,OAAO,KAAK,CAAC;SAChB;IACH,CAAC;;sEAdU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;;;;;;;;ACNiD;AACkB;;;;;;;;ICM1D,6EAA0G;IAAA,iFAAsB;IAAA,4DAAS;;;IAF3I,0EACE;IAAA,uDAAa;IAAA,gEACb;IAAA,uHAA0G;IAC5G,4DAAM;;;IAFJ,0DAAa;IAAb,yFAAa;IACL,0DAAoB;IAApB,qFAAoB;;;IAM5B,2EAA4H;IAAA,oFAAyB;IAAA,4DAAO;;;IAC5J,2EAAkF;IAAA,2FAAgC;IAAA,4DAAO;;ADH5H,MAAM,cAAc;IAYzB,YAAoB,WAAwB,EAAU,WAAwB,EAAU,MAAc;QAAlF,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAVtG,kBAAa,GAAG,KAAK,CAAC;QACtB,iBAAY,GAAG,KAAK,CAAC;QACrB,kBAAa,GAAG,KAAK,CAAC;QAEtB,cAAS,GAAY,KAAK,CAAC;QAC3B,YAAO,GAAW,EAAE,CAAC;IAKqF,CAAC;IAE3G,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,oDAAoD;QACpD,qCAAqC;QACrC,iCAAiC;QACjC,yBAAyB;QACzB,MAAM;IACR,CAAC;IAED,YAAY;QACV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1E,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,iBAAiB,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,KAAK,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC7C,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QAChC,qBAAqB;QAErB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACnB,CAAC;IAED,KAAK,CAAC,IAAU;QACd,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAC/C,IAAI,CAAC,EAAE;YACL,qBAAqB;YACrB,6BAA6B;YAC7B,2BAA2B;YAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,0BAA0B;YAC1B,IAAG,IAAI,CAAC,KAAK,EAAC;gBACZ,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACzD,IAAI,IAAI,CAAC,OAAO,KAAK,4CAA4C,EAAE;oBACjE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;iBACpC;qBAAM;oBACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;iBACrC;gBACD,UAAU,CAAC,GAAG,EAAE;oBACd,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAC3B,CAAC,EAAE,CAAC,CAAC,CAAC;aACP;YAED,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAG,IAAI,CAAC,OAAO,EAAE;gBACf,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC5B,CAAC,EAAE,KAAK,CAAC,CAAC;aACX;iBAAM;gBACL,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC5B;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wDAAwD;IAClD,QAAQ,CAAC,eAAuB;;YACpC,8DAA8D;YAC9D,MAAM,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC,CAAC,0DAA0D;YACjH,kHAAkH;QACpH,CAAC;KAAA;IAED,+CAA+C;IAC/C,yBAAyB,CAAC,GAAG;QAC3B,0DAA0D;QAC1D,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,SAAS,CAC9C,IAAI,CAAC,EAAE;YACL,oBAAoB;YACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC;QACtD,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,EACD,GAAG,EAAE,GAAE,CAAC,CACT,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;YACxB,KAAK,EAAE,2BAA2B;YAClC,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;;4EA5GU,cAAc;8FAAd,cAAc;QCX3B,yEACI;QAAA,yEAAgB;QAAA,gEACd;QAAA,qEAAI;QAAA,qEAAU;QAAA,4DAAK;QAAA,gEAEnB;QAAA,0EACE;QAAA,0GACE;QAIF,yEACE;QAAA,2EAAoC;QAAA,wEAAY;QAAA,4DAAQ;QACxD,uEACA;QAAA,8GAA4H;QAC5H,8GAAkF;QACpF,4DAAM;QAEN,0EACE;QAAA,4EAAmC;QAAA,wEAAY;QAAA,4DAAQ;QACvD,wEACF;QAAA,4DAAM;QAEN,0EACE;QAAA,kFAA8I;QAAlI,uJAAY,oBAAgB,IAAC;QAAwF,4DAAa;QAChJ,4DAAM;QAIN,2EACI;QAAA,8EAAyI;QAAvB,uIAAS,gBAAY,IAAC;QAAC,iEAAK;QAAA,4DAAS;QACvJ,yEAA6C;QAAA,8EAA+E;QAAA,mEAAO;QAAA,4DAAS;QAAA,4DAAI;QAClJ,yEAA6C;QAAA,8EAA6E;QAAA,kEAAM;QAAA,4DAAS;QAAA,4DAAI;QAC/I,4DAAM;QACN,2EACE;QAAA,8EAAsG;QAAA,2EAAe;QAAA,4DAAS;QAC9H,8EAAuG;QAAA,2EAAe;QAAA,4DAAS;QAE/H,8EAAqE;QAArB,uIAAS,cAAU,IAAC;QAAC,qEAAS;QAAA,4DAAS;QAE3F,4DAAM;QAEN,4DAAO;QACP,iEACA;QAAA,2EACE;QAAA,qEAAG;QAAA,mFAAuB;QAAA,yEAAwD;QAAA,4EAAgB;QAAA,4DAAI;QAAA,4DAAI;QAC5G,4DAAM;QACR,4DAAM;QACJ,iEACJ;QAAA,4DAAM;;QA5CI,0DAAuB;QAAvB,oFAAuB;QACtB,0DAAiC;QAAjC,mGAAiC;QAQV,0DAAiG;QAAjG,iKAAiG;QACjG,0DAAuD;QAAvD,mHAAuD;QAejC,0DAAmE;QAAnE,sIAAmE;QAClB,0DAA4B;QAA5B,yFAA4B;QAChC,0DAA4B;QAA5B,yFAA4B;;6FDpBtH,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;ICG9D,yEAA8F;IAAA,uDAAa;IAAA,4DAAM;;;IAAnB,0DAAa;IAAb,+EAAa;;;IAEzG,0EAAmD;IAAA,uDAAa;IAAA,4DAAM;;;IAAnB,0DAAa;IAAb,+EAAa;;;IAK9D,2EAAkI;IAAA,+EAAoB;IAAA,4DAAO;;;IAC7J,2EAAuF;IAAA,uLAA4H;IAAA,4DAAO;;;IAUlN,mEAAuC;;;IACvC,mEAA4C;;;IAIpD,2EAAwJ;IAAA,iFAAsB;IAAA,4DAAO;;;;IAtBzL,0EACE;IAAA,uHAAmD;IAEnD,yEACE;IAAA,2EAAmC;IAAA,uEAAY;IAAA,4DAAQ;IACvD,sEACA;IAAA,0HAAkI;IAClI,0HAAuF;IACzF,4DAAM;IAEN,0EACE;IAAA,4EAA0C;IAAA,gFAAoB;IAAA,4DAAQ;IACtE,2EACE;IAAA,wEACA;IAAA,2EACE;IAAA,2EACE;IAAA,8EACE;IADoB,2TAAsB;IAC1C,sHAAmC;IACnC,sHAAwC;IAC1C,4DAAS;IAAA,4DAAM;IACnB,4DAAM;IACR,4DAAM;IACN,4HAAwJ;IAC1J,4DAAM;IAEN,2EACI;IAAA,8EAAmH;IAArB,2TAAoB;IAAC,0EAAc;IAAA,4DAAS;IAC9I,4DAAM;IACR,4DAAO;;;IA5BD,uFAAuB;IACtB,0DAAiB;IAAjB,kFAAiB;IAKM,0DAAuG;IAAvG,6KAAuG;IACvG,0DAA4D;IAA5D,2HAA4D;IAM7E,0DAAmC;IAAnC,mGAAmC;IAIjC,0DAAa;IAAb,8EAAa;IACb,0DAAY;IAAZ,6EAAY;IAIG,0DAA6H;IAA7H,oPAA6H;IAIvG,0DAA+C;IAA/C,sHAA+C;;ADrBlG,MAAM,oBAAoB;IAU/B,YAAoB,WAAwB,EAAU,WAAwB,EAAU,KAAqB,EAAU,MAAc;QAAjH,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QARrI,SAAI,GAAY,KAAK,CAAC;QACtB,aAAQ,GAAY,KAAK,CAAC;QAC1B,kBAAa,GAAG,KAAK,CAAC;QAEtB,cAAS,GAAY,KAAK,CAAC;QAC3B,YAAO,GAAW,EAAE,CAAC;IAGoH,CAAC;IAE1I,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAE/D,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACpB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC,CAAC,CAAC;YAC5G,eAAe,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC7C,EAAE,EAAC,SAAS,EAAE,IAAI,CAAC,sBAAsB,EAAC,CAAC,CAAC;IAC/C,CAAC;IAED,sBAAsB,CAAC,GAAc;QACnC,OAAO,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,IAAI,EAAC,CAAC;IAC/G,CAAC;IAED,uBAAuB,CAAC,KAAK;QAC3B,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,SAAS,CACnD,IAAI,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,OAAO,GAAG,6BAA6B,CAAC;gBAC7C,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;oBACxB,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;iBACvB,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAElB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,SAAS,CAAC,IAAS;QACjB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,CAC5C,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,qBAAqB;YACrB,4BAA4B;YAC5B,YAAY;YAEZ,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,iCAAiC,CAAC;gBAChE,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC,EAAE,KAAK,CAAC,CAAC;aACX;iBAAM;gBACL,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC5B;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IACzB,CAAC;;wFAnFU,oBAAoB;oGAApB,oBAAoB;QCVjC,yEACI;QAAA,yEACE;QAAA,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QAAA,gEAEvB;QAAA,gHAA8F;QAC9F,mHACE;QA4BJ,4DAAM;QACJ,gEACJ;QAAA,4DAAM;;QAhCG,0DAA8B;QAA9B,gGAA8B;QACL,0DAAgB;QAAhB,8EAAgB;;6FDKvC,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,cAAc;IAEzB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEtC,WAAW,CACT,IAA4B,EAC5B,KAA0B;QACxB,IAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC;YAC9B,KAAK,CAAC,4EAA4E,CAAC,CAAC;YACpF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACpC,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACL,CAAC;;4EAdU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;;;;;;;ACNiD;AACkB;;;;;;;ICI5D,0EAAmD;IAAA,uDAAa;IAAA,4DAAM;;;IAAnB,0DAAa;IAAb,+EAAa;;;IAK9D,2EAAsH;IAAA,2EAAgB;IAAA,4DAAO;;;IAC7I,2EAAiF;IAAA,uJAA4F;IAAA,4DAAO;;;IAMpL,2EAA8H;IAAA,+EAAoB;IAAA,4DAAO;;;IACzJ,2EAAqF;IAAA,sHAA2D;IAAA,4DAAO;;;IAMvJ,2EAAwH;IAAA,oFAAyB;IAAA,4DAAO;;;IACxJ,2EAAkF;IAAA,mHAAwD;IAAA,4DAAO;;;IAMjJ,2EAA8H;IAAA,+EAAoB;IAAA,4DAAO;;;IACzJ,2EAAqF;IAAA,uLAA4H;IAAA,4DAAO;;;IAUhN,mEAAuC;;;IACvC,mEAA4C;;;IAIpD,2EAAkJ;IAAA,iFAAsB;IAAA,4DAAO;;ADrClL,MAAM,qBAAqB;IAUhC,YAAoB,WAAwB,EAAU,WAAwB;QAA1D,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAR9E,SAAI,GAAY,KAAK,CAAC;QACtB,kBAAa,GAAG,KAAK,CAAC;QACtB,qBAAgB,GAAG,KAAK,CAAC;QAEzB,cAAS,GAAY,KAAK,CAAC;QAC3B,YAAO,GAAW,EAAE,CAAC;IAG6D,CAAC;IAEnF,QAAQ;QACN,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,IAAI,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;YAChG,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;YACnG,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,EAAE,yDAAU,CAAC,OAAO,CAAC,qEAAqE,CAAC,CAAC,CAAC,CAAC;YACrK,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC,CAAC,CAAC;YAC5G,eAAe,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5C,iBAAiB,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC/C,EAAE,EAAC,SAAS,EAAE,IAAI,CAAC,sBAAsB,EAAC,CAAC,CAAC;IAC/C,CAAC;IAED,sBAAsB,CAAC,GAAc;QACnC,OAAO,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,IAAI,EAAC,CAAC;IAC/G,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,qBAAqB;QAErB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,aAAa,CAAC,IAAU;QACtB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CACzC,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC,EAAE,IAAI,CAAC,CAAC;YAET,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC7B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;aACtB;iBAAM;gBACL,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;aAC/B;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IACzB,CAAC;IAED,wDAAwD;IAClD,QAAQ,CAAC,eAAuB;;YACpC,8DAA8D;YAC9D,MAAM,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC,CAAC,0DAA0D;YACjH,kHAAkH;QACpH,CAAC;KAAA;IAED,+CAA+C;IAC/C,yBAAyB,CAAC,GAAG;QAC3B,0DAA0D;QAC1D,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,SAAS,CAC9C,IAAI,CAAC,EAAE;YACL,oBAAoB;YACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC;QACtD,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,EACD,GAAG,EAAE,GAAE,CAAC,CACT,CAAC;IACJ,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,IAAI,EAAE,cAAc;YACpB,QAAQ,EAAE,UAAU;YACpB,KAAK,EAAE,eAAe;YACtB,QAAQ,EAAE,QAAQ;YAClB,eAAe,EAAE,QAAQ;YACzB,iBAAiB,EAAE,IAAI;SACxB,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;;0FAnGU,qBAAqB;qGAArB,qBAAqB;QCVlC,yEACI;QAAA,yEAAmB;QAAA,gEAAI;QAAA,gEACrB;QAAA,qEAAI;QAAA,4EAAiB;QAAA,4DAAK;QAAA,gEAE1B;QAAA,0EACE;QAAA,iHAAmD;QAEnD,yEACE;QAAA,4EAAmC;QAAA,oEAAQ;QAAA,4DAAQ;QACnD,uEACA;QAAA,qHAAsH;QACtH,qHAAiF;QACnF,4DAAM;QAEN,0EACE;QAAA,4EAAuC;QAAA,wEAAY;QAAA,4DAAQ;QAC3D,uEACA;QAAA,qHAA8H;QAC9H,qHAAqF;QACvF,4DAAM;QAEN,0EACE;QAAA,6EAAoC;QAAA,wEAAY;QAAA,4DAAQ;QACxD,wEACA;QAAA,qHAAwH;QACxH,qHAAkF;QACpF,4DAAM;QAEN,0EACE;QAAA,6EAAmC;QAAA,wEAAY;QAAA,4DAAQ;QACvD,wEACA;QAAA,qHAA8H;QAC9H,qHAAqF;QACvF,4DAAM;QAEN,2EACE;QAAA,6EAA0C;QAAA,gFAAoB;QAAA,4DAAQ;QACtE,2EACE;QAAA,wEACA;QAAA,2EACE;QAAA,2EACE;QAAA,8EACE;QADoB,8IAAS,gBAAY,IAAC;QAC1C,gHAAmC;QACnC,gHAAwC;QAC1C,4DAAS;QAAA,4DAAM;QACnB,4DAAM;QACR,4DAAM;QACN,qHAAkJ;QACpJ,4DAAM;QAEN,0EACE;QAAA,kFAA8I;QAAlI,8JAAY,oBAAgB,IAAC;QAAwF,4DAAa;QAChJ,4DAAM;QAEN,2EACI;QAAA,8EAAiJ;QAArB,8IAAS,cAAU,IAAC;QAAC,oEAAQ;QAAA,4DAAS;QAElK,8EAAqE;QAArB,8IAAS,cAAU,IAAC;QAAC,qEAAS;QAAA,4DAAS;QAC3F,4DAAM;QACR,4DAAO;QACT,4DAAM;QACJ,iEACJ;QAAA,4DAAM;;QA1DI,0DAAqB;QAArB,kFAAqB;QACpB,0DAAiB;QAAjB,+EAAiB;QAKM,0DAA2F;QAA3F,2JAA2F;QAC3F,0DAAsD;QAAtD,kHAAsD;QAMtD,0DAAmG;QAAnG,mKAAmG;QACnG,0DAA0D;QAA1D,sHAA0D;QAM1D,0DAA6F;QAA7F,6JAA6F;QAC7F,0DAAuD;QAAvD,mHAAuD;QAMvD,0DAAmG;QAAnG,mKAAmG;QACnG,0DAA0D;QAA1D,sHAA0D;QAM3E,0DAAmC;QAAnC,gGAAmC;QAIjC,0DAAa;QAAb,2EAAa;QACb,0DAAY;QAAZ,0EAAY;QAIG,0DAAuH;QAAvH,gOAAuH;QAQjG,0DAA6E;QAA7E,oGAA6E;;6FD7C1H,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;ICI5D,0EAAmD;IAAA,uDAAa;IAAA,4DAAM;;;IAAnB,0DAAa;IAAb,+EAAa;;;IAM9D,2EAA8H;IAAA,oFAAyB;IAAA,4DAAO;;;IAC9J,2EAAqF;IAAA,mHAAwD;IAAA,4DAAO;;;IAMpJ,2EAAoI;IAAA,+EAAoB;IAAA,4DAAO;;ADNlK,MAAM,6BAA6B;IAUxC,YAAoB,WAAwB,EAAU,WAAwB,EAAU,MAAc;QAAlF,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QARtG,qBAAgB,GAAG,KAAK,CAAC;QACzB,oBAAe,GAAG,EAAE,CAAC;QACrB,mBAAc,GAAG,KAAK,CAAC;QAEvB,cAAS,GAAY,KAAK,CAAC;QAC3B,YAAO,GAAW,EAAE,CAAC;IAGqF,CAAC;IAE3G,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,YAAY;QACV,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,EAAE,yDAAU,CAAC,OAAO,CAAC,qEAAqE,CAAC,CAAC,CAAC,CAAC;YACrK,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAElB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAGpB,CAAC;IAGD,MAAM,CAAC,IAAU;QACb,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,SAAS,CACnD,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1B,2BAA2B;YAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC,EAAE,IAAI,CAAC,CAAC;YAET,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC7B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;aACnC;YAED,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACzB,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CACpE,MAAM,CAAC,EAAE;oBACP,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBAEpB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;oBAC9B,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;oBACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,UAAU,CAAC,GAAG,EAAE;wBACd,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACxB,CAAC,EAAE,IAAI,CAAC,CAAC;oBACT,UAAU,CAAC,GAAG,EAAE;wBACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACzB,CAAC,EAAE,IAAI,CAAC,CAAC;oBAET,IAAI,MAAM,CAAC,OAAO,EAAE;wBAClB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;qBAC5B;yBAAM;wBACL,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;qBAC7B;gBACH,CAAC,CACF,CAAC;aACH;QACL,CAAC,CAAC,CAAC;IACL,CAAC;;0GA9EQ,6BAA6B;6GAA7B,6BAA6B;QCZ1C,yEACI;QAAA,yEACE;QAAA,qEAAI;QAAA,iFAAsB;QAAA,4DAAK;QAAA,gEAE/B;QAAA,0EACE;QAAA,yHAAmD;QAGnD,yEACE;QAAA,2EAAoC;QAAA,uEAAY;QAAA,4DAAQ;QACxD,uEACA;QAAA,6HAA8H;QAC9H,6HAAqF;QACvF,4DAAM;QAEN,0EACE;QAAA,4EAAmC;QAAA,wEAAY;QAAA,4DAAQ;QACvD,wEACA;QAAA,6HAAoI;QACtI,4DAAM;QAEN,2EACI;QAAA,8EAAuH;QAAvB,sJAAS,gBAAY,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC1I,4DAAM;QAER,4DAAO;QACT,4DAAM;QACJ,iEACJ;QAAA,4DAAM;;QAxBI,0DAAwB;QAAxB,qFAAwB;QACvB,0DAAiB;QAAjB,+EAAiB;QAMM,0DAAmG;QAAnG,mKAAmG;QACnG,0DAA0D;QAA1D,sHAA0D;QAM1D,0DAAyG;QAAzG,yKAAyG;QAInF,0DAAiD;QAAjD,kHAAiD;;6FDV9F,6BAA6B;cALzC,uDAAS;eAAC;gBACT,QAAQ,EAAE,4BAA4B;gBACtC,WAAW,EAAE,yCAAyC;gBACtD,SAAS,EAAE,CAAC,wCAAwC,CAAC;aACtD;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,oBAAoB;IAE/B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;wFALU,oBAAoB;oGAApB,oBAAoB;QCPjC,yEACI;QAAA,qEAAI;QAAA,6EAAkB;QAAA,4DAAK;QAC3B,qEAAI;QAAA,0IAA+E;QAAA,4DAAK;QAC5F,4DAAM;;6FDIO,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICC9C,qEAAsB;IAAA,uDAAmC;IAAA,4DAAK;;;IAAxC,0DAAmC;IAAnC,8GAAmC;;ADQtD,MAAM,eAAe;IAK1B,YAAoB,KAAqB,EAAU,WAAwB,EAAU,MAAc;QAA/E,UAAK,GAAL,KAAK,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFnG,cAAS,GAAG,KAAK,CAAC;IAEqF,CAAC;IAExG,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAC;YAClC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SAChF;QAGD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CACxC,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1B,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;gBAC1B,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;YACD,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;gBACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;QAEL,CAAC,CAAC,CAAC;IACL,CAAC;;8EAjCU,eAAe;+FAAf,eAAe;QCT5B,yEACI;QAAA,yGAAsB;QAC1B,4DAAM;;QADE,0DAAiB;QAAjB,+EAAiB;;6FDQZ,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAA2C;AACoB;;;AAOxD,MAAM,WAAW;IAKtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,2CAA2C;QAC3C,YAAO,GAAG,YAAY,CAAC;QAoCvB,iDAAiD;QACjD,eAAU,GAAG,eAAe,CAAC;QAW7B,yCAAyC;QACzC,eAAU,GAAG,OAAO,CAAC;IA/CmB,CAAC;IAEzC,UAAU,CAAC,IAAU;QACnB,IAAI,UAAU,GAAE,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,IAAI,OAAO,GAAG;YACZ,OAAO,EAAE,UAAU;SACpB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,GAAG,WAAW,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACzE,CAAC;IAED,SAAS,CAAC,IAAU;QAClB,IAAI,UAAU,GAAE,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,IAAI,OAAO,GAAG;YACZ,OAAO,EAAE,UAAU;SACpB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,OAAO,GAAG,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACrE,CAAC;IAED,oBAAoB,CAAC,IAAU;QAC7B,IAAI,UAAU,GAAE,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,IAAI,OAAO,GAAG;YACZ,OAAO,EAAE,UAAU;SACpB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,OAAO,GAAG,SAAS,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACtE,CAAC;IAED,qBAAqB,CAAC,KAAK;QACzB,IAAI,UAAU,GAAE,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,IAAI,OAAO,GAAG;YACZ,OAAO,EAAE,UAAU;SACpB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,OAAO,GAAG,SAAS,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,EAAE,OAAO,CAAC,CAAC;IAC/E,CAAC;IAKD,aAAa;QACX,0HAA0H;QAC1H,sGAAsG;QACtG,kBAAkB;QAClB,0BAA0B;QAC1B,IAAI;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;IAID,gBAAgB,CAAC,KAAK;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,UAAU,GAAG,iBAAiB,EAAE,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC;IACrF,CAAC;IAED,eAAe,CAAC,KAAK;QACnB,IAAI,UAAU,GAAE,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,IAAI,OAAO,GAAG;YACZ,OAAO,EAAE,UAAU;SACpB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,OAAO,GAAG,WAAW,GAAG,KAAK,EAAE,OAAO,CAAC,CAAC;IACzE,CAAC;IAED,aAAa,CAAC,KAAa;QACzB,IAAI,UAAU,GAAE,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,IAAI,OAAO,GAAG;YACZ,OAAO,EAAE,UAAU;SACpB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,OAAO,GAAG,gBAAgB,GAAG,KAAK,EAAE,OAAO,CAAC,CAAC;IAC9E,CAAC;IAED,gBAAgB,CAAC,IAAS;QACxB,IAAI,UAAU,GAAE,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,IAAI,OAAO,GAAG;YACZ,OAAO,EAAE,UAAU;SACpB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,OAAO,GAAG,gBAAgB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IAC5E,CAAC;IAED,mBAAmB,CAAC,KAAU;QAC5B,IAAI,UAAU,GAAE,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,IAAI,OAAO,GAAG;YACZ,OAAO,EAAE,UAAU;SACpB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,OAAO,GAAG,gBAAgB,GAAG,KAAK,EAAE,OAAO,CAAC,CAAC;IAC9E,CAAC;IAED,aAAa,CAAC,IAAS;QACrB,IAAI,UAAU,GAAE,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,IAAI,OAAO,GAAG;YACZ,OAAO,EAAE,UAAU;SACpB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IAC9E,CAAC;IAED,eAAe,CAAC,KAAU;QACxB,IAAI,UAAU,GAAE,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,IAAI,OAAO,GAAG;YACZ,OAAO,EAAE,UAAU;SACpB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,OAAO,GAAG,aAAa,GAAG,KAAK,EAAE,OAAO,CAAC,CAAC;IAC3E,CAAC;IAED,GAAG;QACD,6CAA6C;QAC7C,MAAM,GAAG,GAAG,YAAY,CAAC;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,CAAC,CAAC;IACjC,CAAC;;sEA7GU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;ICoBtC,2EAA8D;IAAA,uDAAkB;IAAA,4DAAO;;;IAAzB,0DAAkB;IAAlB,oFAAkB;;;IAQhF,wEAAqF;IAAA,gEAAK;IAAA,4DAAI;;;IAC9F,wEAA4F;IAAA,mEAAQ;IAAA,4DAAI;;;IACxG,wEAAwF;IAAA,oEAAS;IAAA,4DAAI;;;IACrG,wEAAuG;IAAA,qEAAU;IAAA,4DAAI;;;;IACrH,wEAAkF;IAAhC,0SAAkB;IAAc,iEAAM;IAAA,4DAAI;;;ADpBjG,MAAM,eAAe;IAS1B,YACU,IAAgB,EAChB,iBAAoC,EACpC,SAAoB;QAFpB,SAAI,GAAJ,IAAI,CAAY;QAChB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,cAAS,GAAT,SAAS,CAAW;QAT9B,kBAAa,GAAG,KAAK,CAAC;QACtB,eAAU,GAAG,KAAK,CAAC;QAEnB,cAAS,GAAG,KAAK,CAAC;QA2BlB,2CAA2C;QAC3C,YAAO,GAAG,YAAY,CAAC;IAtBW,CAAC;IAEnC,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,WAAW,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACzC,8BAA8B;IAChC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,mCAAmC;QACnC,uBAAuB;IACzB,CAAC;IAID,YAAY;QACV,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC7D,IAAG,IAAI,CAAC,UAAU,KAAK,OAAO,IAAI,IAAI,CAAC,UAAU,KAAK,WAAW,EAAE;gBACjE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0BAA0B;IAC1B,4CAA4C;IAC5C,gDAAgD;IAChD,4BAA4B;IAC5B,8BAA8B;IAC9B,6BAA6B;IAC7B,yBAAyB;IACzB,+BAA+B;IAC/B,+CAA+C;IAC/C,QAAQ;IACR,qCAAqC;IACrC,gCAAgC;IAChC,QAAQ;IACR,QAAQ;IACR,IAAI;IAEJ,mBAAmB;QACjB,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,YAAY,KAAK,CAAC,EAAE;YAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;IACH,CAAC;;8EA3EU,eAAe;+FAAf,eAAe;QCZ5B,yEACI;QAAA,uEAAgC;QAAA,oEAAS;QAAA,4DAAI;QAC7C,4EACE;QAAA,qEAAyC;QAC3C,4DAAS;QAET,yEACE;QAAA,wEACE;QAAA,wEACE;QAAA,uEAAuG;QAAA,gEAAK;QAAA,2EAAsB;QAAA,qEAAS;QAAA,4DAAO;QAAA,4DAAI;QACxJ,4DAAK;QACL,yEACE;QAAA,wEAAwE;QAAA,oEAAQ;QAAA,4DAAI;QACtF,4DAAK;QACP,4DAAK;QAEL,0EACE;QAAA,yEACE;QAAA,yEACE;QAAA,oEAAoC;QAAC,2EACrC;QAAA,gHAA8D;QAChE,4DAAI;QACN,4DAAK;QACL,0EACE;QAAA,yEACE;QAAA,oEAA2B;QAAC,6EAC9B;QAAA,4DAAI;QACJ,2EACE;QAAA,0GAAqF;QACrF,0GAA4F;QAC5F,0GAAwF;QACxF,0GAAuG;QACvG,0GAAkF;QACpF,4DAAM;QACR,4DAAK;QAgBP,4DAAK;QACP,4DAAM;QACR,4DAAM;QACN,oFAA4E;;QA5CxB,0DAAyC;QAAzC,0JAAyC;QAWvC,2DAAiB;QAAjB,+EAAiB;QAQU,0DAAa;QAAb,2EAAa;QACN,0DAAa;QAAb,2EAAa;QAChB,0DAAY;QAAZ,0EAAY;QACX,0DAA0B;QAA1B,4FAA0B;QACjC,0DAAY;QAAZ,0EAAY;QAqBxE,0DAAoC;QAApC,iGAAoC;;6FDzC5C,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACO;;;;;;;;;ICChE,0EAAmD;IAAA,uDAAa;IAAA,gEAAU;IAA1E,4DAAmD;;;IAAA,0DAAa;IAAb,+EAAa;;;IAQpD,2EAA4H;IAAA,2EAAgB;IAAA,4DAAO;;;IAMnJ,2EAAkI;IAAA,8EAAmB;IAAA,4DAAO;;;IAM5J,2EAAgJ;IAAA,uFAA4B;IAAA,4DAAO;;ADN5L,MAAM,iBAAiB;IAqB5B,YACU,MAAc,EACd,cAA+B,EAC/B,EAAe,EACf,aAA4B,EAC5B,SAAoB;QAJpB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAiB;QAC/B,OAAE,GAAF,EAAE,CAAa;QACf,kBAAa,GAAb,aAAa,CAAe;QAC5B,cAAS,GAAT,SAAS,CAAW;QAhB9B,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,EAAE,CAAC;QACb,oBAAe,GAAG,KAAK,CAAC;QAExB,sBAAsB;QACtB,oBAAe,GAAoB;YACjC,MAAM,EAAE,MAAM;SACf,CAAC;IAS+B,CAAC;IAElC,QAAQ;QACN,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpC,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC5C,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC;aAC9C,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,wCAAwC;YACxC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE;oBACvC,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,SAAS,EAAE,SAAS;4BACpB,KAAK,EAAE,SAAS;4BAChB,UAAU,EAAE,GAAG;4BACf,UAAU,EAAE,yCAAyC;4BACrD,QAAQ,EAAE,MAAM;4BAChB,aAAa,EAAE,aAAa;4BAC5B,eAAe,EAAE;gCACf,KAAK,EAAE,SAAS;gCAChB,UAAU,EAAE,GAAG;6BAChB;yBACF;qBACF;iBACF,CAAC,CAAC;gBACH,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,GAAG;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;QAC/C,IAAI,CAAC,aAAa;aACf,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC;aAChC,SAAS,CAAC,MAAM,CAAC,EAAE;YAClB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,iDAAiD;gBACjD,kCAAkC;gBAClC,6BAA6B;gBAC7B,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;gBACnD,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;gBAC7C,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBACzE,qBAAqB;oBACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC5B,IAAI,IAAI,CAAC,KAAK,KAAK,UAAU,EAAE;wBAC7B,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBAC9B,CAAC,EAAE,IAAI,CAAC,CAAC;qBACV;oBACD,IAAI,IAAI,CAAC,OAAO,EAAE;wBAChB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;wBAC5B,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;wBACxB,UAAU,CAAC,GAAG,EAAE;4BACd,iCAAiC;4BACjC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;4BAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;wBACzB,CAAC,EAAE,IAAI,CAAC,CAAC;qBACV;oBAED,UAAU,CAAC,GAAG,EAAE;wBACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACzB,CAAC,EAAE,IAAI,CAAC,CAAC;gBACb,CAAC,CAAC,CAAC;aACJ;iBAAM,IAAI,MAAM,CAAC,KAAK,EAAE;gBACvB,2BAA2B;gBAC3B,qCAAqC;gBACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO;gBACnC,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACzB,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sBAAsB;IACtB,2DAA2D;IAC3D,4BAA4B;IAC5B,0BAA0B;IAC1B,uCAAuC;IACvC,2CAA2C;IAC3C,eAAe;IACf,qCAAqC;IACrC,QAAQ;IACR,QAAQ;IACR,IAAI;IAEJ,eAAe;QACb,gDAAgD;QAChD,oDAAoD;QACpD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CACjC,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,KAAK,EAAE;gBACV,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;gBAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;aAClD;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7B;QACH,CAAC,CACF,CAAC;IAEJ,CAAC;;kFAxIU,iBAAiB;iGAAjB,iBAAiB;QChB9B,yEACI;QAAA,gEAAI;QAAA,gEACJ;QAAA,6GAAmD;QACnD,yEACI;QAAA,0EACI;QADa,6IAAY,SAAK,IAAC;QAC/B,wEAAwB;QAAA,mEAAQ;QAAA,4DAAK;QACrC,gEACA;QAAA,yEACI;QAAA,4EAAmC;QAAA,kEAAM;QAAA,4DAAQ;QACjD,uEACA;QAAA,iHAA4H;QAChI,4DAAM;QAEN,0EACI;QAAA,4EAAsC;QAAA,qEAAS;QAAA,4DAAQ;QACvD,wEACA;QAAA,iHAAkI;QACtI,4DAAM;QAEN,2EACI;QAAA,6EAA6C;QAAA,8EAAkB;QAAA,4DAAQ;QACvE,wEACA;QAAA,iHAAgJ;QACpJ,4DAAM;QACN,iEAEA;QAAA,sEAAqD;QACrD,iEAEA;QAAA,8EACA;QAAA,wDACA;;QAAA,4DAAS;QACb,4DAAO;QACX,4DAAM;QACV,4DAAM;;QAhCG,0DAAiB;QAAjB,+EAAiB;QAEkB,0DAAwB;QAAxB,qFAAwB;QAM1B,0DAAiG;QAAjG,iKAAiG;QAMjG,0DAAuG;QAAvG,uKAAuG;QAMvG,0DAAqH;QAArH,qLAAqH;QAOhG,0DAAkD;QAAlD,mHAAkD;QACrG,0DACA;QADA,iKACA;;6FDfC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEfD;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,WAAW;IAEtB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEtC,WAAW,CACT,IAA4B,EAC5B,KAA0B;QAC1B,IAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC;YAC5B,OAAO,IAAI,CAAC;SACf;aAAM;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,OAAO,KAAK,CAAC;SAChB;IACH,CAAC;;sEAbU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICG1C,yEACI;IAAA,yEACI;IAAA,yEACI;IAAA,oEACJ;IAAA,4DAAM;IACN,yEACI;IAAA,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,uEAAmC;IAAA,uDAA2B;IAAA,4DAAI;IACtE,4DAAM;IACN,yEACI;IAAA,sEAAI;IAAA,wDAAoB;IAAA,4DAAK;IAC7B,8EAAmE;IAAjC,0WAAgC;IAAC,uEAAW;IAAA,4DAAS;IAC3F,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAXW,0DAAuD;IAAvD,gMAAuD;IAAC,4FAAyB;IAGlF,0DAAmB;IAAnB,iFAAmB;IACY,0DAA2B;IAA3B,yFAA2B;IAG1D,0DAAoB;IAApB,2FAAoB;;ADFrC,MAAM,qBAAqB;IAOhC,YACU,cAA+B,EAC/B,YAA2B,EAC3B,SAAoB;QAFpB,mBAAc,GAAd,cAAc,CAAiB;QAC/B,iBAAY,GAAZ,YAAY,CAAe;QAC3B,cAAS,GAAT,SAAS,CAAW;QAN9B,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,EAAE,CAAC;IAKqB,CAAC;IAEnC,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;IAClD,CAAC;IAED,qBAAqB;IACrB,0DAA0D;IAC1D,4BAA4B;IAC5B,0BAA0B;IAC1B,+BAA+B;IAC/B,qCAAqC;IACrC,uCAAuC;IACvC,QAAQ;IACR,QAAQ;IACR,IAAI;IAEJ,SAAS,CAAC,SAAS;QACjB,mEAAmE;QACnE,0BAA0B;QAC1B,MAAM;QACN,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACvD,qBAAqB;YACrB,mCAAmC;YACnC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;;0FAtCU,qBAAqB;qGAArB,qBAAqB;QCXlC,yEACI;QAAA,gEAAI;QAAA,gEACJ;QAAA,yEACI;QAAA,kHACI;;QAeR,4DAAM;QAEV,4DAAM;QACN,gEACA;;QApB4C,0DAA2D;QAA3D,sJAA2D;;6FDQ1F,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACyB;AACA;AACd;AACrB;;;AAG7C,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,4FAAqB,EAAE;IACrD,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,4FAAqB,EAAE;IACzD,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE,WAAW,EAAE,CAAC,yDAAW,CAAC,EAAC;CAC7E,CAAC;AAMK,MAAM,qBAAqB;;oGAArB,qBAAqB;oKAArB,qBAAqB,kBAHvB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,qBAAqB,uFAFtB,4DAAY;6FAEX,qBAAqB;cAJjC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEmB;AACc;AAC3B;AAC2B;AACd;AACA;AACrB;AACA;AACc;AACH;AACL;;;AAc5C,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,mBAFd,CAAC,iEAAe,EAAE,yDAAW,EAAE,uEAAa,EAAE,+DAAS,CAAC,YAR1D;YACP,4DAAY;YACZ,sEAAgB;YAChB,0DAAW;YACX,kEAAmB;YACnB,0DAAe,CAAC,OAAO,CAAC,4CAA4C,CAAC;YACrE,8EAAqB;SACtB;mIAGU,cAAc,mBAXV,4FAAqB,EAAE,4FAAqB,EAAE,8EAAiB,aAE5E,4DAAY;QACZ,sEAAgB;QAChB,0DAAW;QACX,kEAAmB,8DAEnB,8EAAqB;6FAIZ,cAAc;cAZ1B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,4FAAqB,EAAE,4FAAqB,EAAE,8EAAiB,CAAE;gBAChF,OAAO,EAAE;oBACP,4DAAY;oBACZ,sEAAgB;oBAChB,0DAAW;oBACX,kEAAmB;oBACnB,0DAAe,CAAC,OAAO,CAAC,4CAA4C,CAAC;oBACrE,8EAAqB;iBACtB;gBACD,SAAS,EAAE,CAAC,iEAAe,EAAE,yDAAW,EAAE,uEAAa,EAAE,+DAAS,CAAC;aACpE;;;;;;;;;;;;;;AC1BD;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,eAAe;IAE1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,kCAAkC;IAClC,yCAAyC;IACzC,2CAA2C;IAC3C,IAAI;IAEJ,sCAAsC;IACtC,qCAAqC;IACrC,yCAAyC;IACzC,IAAI;IAEJ,WAAW,CAAC,EAAE;QACZ,MAAM,GAAG,GAAG,cAAc,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,GAAG,EAAE,CAAC,CAAC;IACtC,CAAC;IAED,aAAa,CAAC,EAAE;QACd,MAAM,GAAG,GAAG,cAAc,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,GAAG,EAAE,CAAC,CAAC;IACtC,CAAC;IAED,mCAAmC;IACnC,uCAAuC;IACvC,oCAAoC;IACpC,IAAI;IAEJ,QAAQ;QACN,MAAM,GAAG,GAAG,gBAAgB,CAAC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,OAAO,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI;QACvB,MAAM,GAAG,GAAG,aAAa,CAAC;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,EAAE,EAAC,WAAW,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;IACnF,CAAC;;8EArCU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICItC,wEACI;IAAA,yEAAQ;IAAA,uDAAwB;IAAA,4DAAS;IACzC,0EAAuC;IAAA,uDAAoB;IAAA,4DAAO;IAClE,yEACI;IAAA,6EACI;IAAA,mEACJ;IAAA,4DAAS;IACT,0EACI;IAAA,wEAA4D;IAAnC,4WAAkC;IAAC,uEAAW;IAAA,4DAAI;IAC3E,yEAA4D;IAAnC,6WAAkC;IAAC,sEAAU;IAAA,4DAAI;IAC9E,4DAAM;IACV,4DAAM;IACN,4EAAqD;IAAA,wDAAiB;IAAA,4DAAO;IACjF,4DAAK;;;IAZO,0DAAwB;IAAxB,sFAAwB;IACO,0DAAoB;IAApB,2FAAoB;IAUN,2DAAiB;IAAjB,+EAAiB;;;;IAhBtF,yEACI;IAAA,gEAAI;IAAA,gEACJ;IAAA,yEACI;IAAA,wEACI;IAAA,sHACI;;IAaR,4DAAK;IACT,4DAAM;IACN,gEAAI;IAAA,gEACJ;IAAA,yEACI;IAAA,0EAAQ;IAAA,wDAAgC;;IAAA,4DAAS;IACrD,4DAAM;IACN,iEAEA;IAAA,0EACI;IAAA,6EAAmE;IAArB,yTAAoB;IAAC,oEAAQ;IAAA,4DAAS;IACxF,4DAAM;IACV,4DAAM;;;IAzB4D,0DAAoF;IAApF,qJAAoF;IAkBtI,0DAAgC;IAAhC,qKAAgC;;;IAShD,0EACI;IAAA,gEAAI;IAAA,gEACJ;IAAA,yEACI;IAAA,qEAAI;IAAA,0EAAe;IAAA,4DAAK;IAC5B,4DAAM;IACV,4DAAM;;ADzBC,MAAM,qBAAqB;IAQhC,YACU,cAA+B,EAC/B,MAAc,EACd,SAAoB;QAFpB,mBAAc,GAAd,cAAc,CAAiB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAW;QAL9B,cAAS,GAAG,KAAK,CAAC;IAKgB,CAAC;IAEnC,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,sBAAsB;IACtB,2DAA2D;IAC3D,4BAA4B;IAC5B,0BAA0B;IAC1B,uCAAuC;IACvC,2CAA2C;IAC3C,+BAA+B;IAC/B,qCAAqC;IACrC,kCAAkC;IAClC,UAAU;IACV,QAAQ;IACR,QAAQ;IACR,IAAI;IAEJ,eAAe;QACb,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;QACjD,mDAAmD;QACnD,0BAA0B;QAC1B,MAAM;QAEN,qDAAqD;QACrD,4BAA4B;QAC5B,MAAM;QACN,yBAAyB;QACzB,+BAA+B;QAC/B,4BAA4B;QAC5B,IAAI;IAEN,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9C,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,EAAE;QACP,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACnD,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;gBAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,EAAE;QACP,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACrD,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;gBAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,EAAU,EAAE,OAAY;QACvC,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;IAC1B,CAAC;;0FA7EU,qBAAqB;qGAArB,qBAAqB;QCXlC,kHACI;;QA8BJ,iHACI;;;QAhCmC,uJAAkC;QA+BlC,0DAAkC;QAAlC,uJAAkC;;6FDpB5D,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACoB;AAE0D;;;AAKlH,MAAM,SAAS;IAalB,YAAqB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAZ7B,wBAAmB,GAAG,IAAI,oDAAe,CAAS,CAAC,CAAC,CAAC;QAC7D,sBAAiB,GAAwB,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;QAEzE,wBAAmB,GAAG,IAAI,oDAAe,CAAK,EAAE,CAAC,CAAC;QAC1D,kBAAa,GAAoB,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;QAEjE,sBAAiB,GAAG,IAAI,oDAAe,CAAS,CAAC,CAAC,CAAC;QAC3D,oBAAe,GAAwB,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;QAErE,qBAAgB,GAAG,IAAI,oDAAe,CAAU,KAAK,CAAC,CAAC;QAC/D,eAAU,GAAyB,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;QAGpE,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,YAAY;QACR,MAAM,GAAG,GAAG,qBAAqB,CAAC;QAClC,MAAM,aAAa,GAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,CAAC;aAC7C,IAAI,CACD,0DAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EACzB,iEAAU,CAAC,GAAG,CAAC,EAAE;YACb,MAAM,QAAQ,GAAG,qBAAqB,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAClC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjC,OAAO,uDAAU,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC,EACF,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,SAAS,CAAC,EAAE;gBACrB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;gBACxD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;gBACpD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACrC;iBAAM;gBACH,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAClC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACpC;QAEL,CAAC,CAAC,EACF,kEAAW,EAAE,CAChB,CAAC;QACF,aAAa,CAAC,SAAS,EAAE,CAAC;IAC9B,CAAC;IAED,aAAa,CAAC,EAAE;QACZ,MAAM,GAAG,GAAG,mBAAmB,CAAC;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,GAAG,EAAE,CAAC;aAClC,IAAI,CACD,0DAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EACzB,0DAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EACtE,kEAAW,EAAE,CAChB,CAAC;IACN,CAAC;;kEA1DQ,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;6FAEP,SAAS;cAHrB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACoB;AAEI;;;AAK5D,MAAM,aAAa;IAKtB,YACY,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QALpB,YAAO,GAAG,IAAI,oDAAe,CAAK,EAAE,CAAC,CAAC;QAE9C,cAAS,GAAoB,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAKrD,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAEO,cAAc;QAClB,MAAM,UAAU,GAAG,gBAAgB,CAAC;QACpC,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAK,UAAU,CAAC;aAC9C,IAAI,CACD,0DAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EACrC,iEAAU,CAAC,GAAG,CAAC,EAAE;YACb,MAAM,QAAQ,GAAG,yBAAyB,CAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;YAC3B,OAAO,uDAAU,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC,EACF,0DAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAC5C,kEAAW,EAAE,CAChB,CAAC;QACN,aAAa,CAAC,SAAS,EAAE,CAAC;IAC9B,CAAC;;0EAzBQ,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,sEACI;QAAA,gEAAI;QAAA,gEAAI;QAAA,gEACR;QAAA,oEACJ;QAAA,4DAAM;QACN,gEAAI;;6FDGS,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACU;;;AAGjE,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,6EAAgB,EAAC;CACjD,CAAC;AAMK,MAAM,wBAAwB;;uGAAxB,wBAAwB;0KAAxB,wBAAwB,kBAH1B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,wBAAwB,uFAFzB,4DAAY;6FAEX,wBAAwB;cAJpC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAE0B;AACR;;AAU1D,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBALnB;YACP,4DAAY;YACZ,qFAAwB;SACzB;mIAEU,iBAAiB,mBANb,6EAAgB,aAE7B,4DAAY;QACZ,qFAAwB;6FAGf,iBAAiB;cAP7B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,6EAAgB,CAAC;gBAChC,OAAO,EAAE;oBACP,4DAAY;oBACZ,qFAAwB;iBACzB;aACF;;;;;;;;;;;;;;ACbD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ManagementComponent } from './management/management.component';\nimport { PermissionGuard } from './permission.guard';\nimport { EditUserComponent } from './edit-user/edit-user.component';\n\n\nconst routes: Routes = [\n  {path: 'management', component: ManagementComponent, canActivate: [PermissionGuard]},\n  {path: 'edit/:id', component: EditUserComponent, canActivate: [PermissionGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { ManagementComponent } from './management/management.component';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { ManagementService } from './management.service';\nimport { PermissionGuard } from './permission.guard';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EditUserComponent } from './edit-user/edit-user.component';\n\n\n@NgModule({\n  declarations: [ManagementComponent, EditUserComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AdminRoutingModule\n  ],\n  providers: [ManagementService, PermissionGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ]\n})\nexport class AdminModule { }\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    intercept(  req: HttpRequest<any>, \n                next: HttpHandler): Observable<HttpEvent<any>> {\n                    \n        const idToken = localStorage.getItem(\"User\");\n        if (idToken) {\n            const cloned = req.clone({\n                headers: req.headers.set(\"authorization\", \n                \"Bearer \" + idToken)\n            });\n            return next.handle(cloned);\n        } else {\n            return next.handle(req);\n        }\n    }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ManagementService } from '../management.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n\n  datasaved: boolean = false;\n  message: string = '';\n  editForm: FormGroup;\n  currPermission = '';\n  managementPermission: string;\n\n  constructor(private formbuilder: FormBuilder, private managementservice: ManagementService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    \n    this.datasaved = false;\n    this.message = '';\n    // console.log(this.route.snapshot.params.id);\n    this.getUser(this.route.snapshot.params.id);\n    this.getManagerPermission();\n    this.setFormState();\n  }\n\n  getManagerPermission() {\n    this.managementservice.getPermission().subscribe(data => {\n      this.managementPermission = data.permission;\n    });\n  }\n\n  setFormState():void {\n    this.editForm = this.formbuilder.group({\n      name: [null, Validators.compose([Validators.required, Validators.pattern(/^[a-z\\. ]{1,50}$/i)])],\n      username: [null, Validators.compose([Validators.required, Validators.pattern(/^[a-z\\d]{5,12}$/i)])],\n      email: [null, Validators.compose([Validators.required, Validators.email, Validators.pattern(/^([a-z\\d\\.-]{1,20})@([a-z\\d-]{1,20})\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/i)])],\n      permission: [this.currPermission, Validators.compose([Validators.required, Validators.pattern(/^(user)|(moderator)|(admin)$/)])]\n    });\n  }\n\n  getUser(id) {\n    this.managementservice.getUser(id).subscribe(data => {\n      // console.log(data);\n      if(data.success) {\n        this.currPermission = data.user.permission;\n        this.editForm.patchValue({\n          name: data.user.name,\n          username: data.user.username,\n          email: data.user.email,\n          permission: data.user.permission\n        });\n      } else {\n        this.datasaved = true;\n        this.message = data.message;\n      }\n    });\n  }\n\n  updatePermission(newPermission) {\n    // this.currPermission = newPermission;\n    this.editForm.patchValue({\n      permission: newPermission\n    });\n  }\n\n  updatedata() {\n    let user = this.editForm.value;\n    // console.log(user);\n\n    this.datasaved = false;\n    this.message = '';\n    this.updateUser(user, this.route.snapshot.params.id);\n  }\n\n  updateUser(user, id) {\n    this.managementservice.updateUser(user, id).subscribe(data => {\n      // console.log(data);\n      this.datasaved = true;\n      this.message = data.message;\n      setTimeout(() => {\n        this.datasaved = false;\n        this.message = '';\n      }, 3000);\n      if(data.success) {\n        window.location.reload();  \n      }\n    });\n  }\n\n}\n","<div class=\"container-fluid mt-5\">\n    <div id=\"edit\">\n      <h2>Edit User</h2><br>\n    \n      <form [formGroup]='editForm'>\n        <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }}</div>\n  \n        <div class=\"form-group row\">\n          <label for=\"name\" class=\"col-sm-3\">Name: * </label>\n          <input type=\"text\" class=\"form-control col-sm-9\" placeholder=\"Name\" formControlName=\"name\" id=\"name\">\n          <span class=\"font-italic\" *ngIf = \"editForm.controls['name'].touched && editForm.controls['name'].hasError('required')\">Name is required</span>\n          <span class=\"font-italic\" *ngIf = \"editForm.controls['name'].hasError('pattern')\">Name must be alphabets (. and space are also allowed) and must be maximum 50 characters long</span>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"username\" class=\"col-sm-3\">Username: * </label>\n          <input type=\"text\" class=\"form-control col-sm-9\" placeholder=\"Username\" formControlName=\"username\" id=\"username\">\n          <span class=\"font-italic\" *ngIf = \"editForm.controls['username'].touched && editForm.controls['username'].hasError('required')\">Username is required</span>\n          <span class=\"font-italic\" *ngIf = \"editForm.controls['username'].hasError('pattern')\">Username must be alphanumeric and contain 5 - 12 characters</span>\n        </div>\n    \n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-sm-3\">Email ID: * </label>\n          <input type=\"email\" class=\"form-control col-sm-9\" placeholder=\"Email ID\" formControlName=\"email\" id=\"email\">\n          <span class=\"font-italic\" *ngIf = \"editForm.controls['email'].touched && editForm.controls['email'].hasError('required')\">Email address is required</span>\n          <span class=\"font-italic\" *ngIf = \"editForm.controls['email'].hasError('pattern')\">Please enter a valid email address, e.g. me@mydomain.com</span>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"permission\" class=\"col-sm-3 mb-0 pb-0\">Permission: * </label>\n          <div class=\"btn-group col-sm-9 m-0 p-0\">\n            <button type=\"button\" class=\"form-control btn btn-outline-primary mb-0\" id=\"permission\" [class.active]=\"currPermission == 'user'\" (click)=\"updatePermission('user')\">User</button>\n            <button type=\"button\" class=\"form-control btn btn-outline-primary mb-0\" id=\"permission\" [class.active]=\"currPermission == 'moderator'\" (click)=\"updatePermission('moderator')\">Moderator</button>\n            <button type=\"button\" class=\"form-control btn btn-outline-primary mb-0\" id=\"permission\" [class.active]=\"currPermission == 'admin'\" [class.disabled]=\"managementPermission == 'moderator'\" (click)=\"updatePermission('admin')\">Admin</button>\n          </div>\n          <span class=\"col-sm-3\"></span>\n          <span class=\"font-italic col-sm-9 m-0 p-0 text-primary\">Current Permission is {{currPermission}}</span>\n        </div>\n  \n        <div class=\"row\">\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"editForm.invalid\" (click)=\"updatedata()\">Update</button>\n            <button type=\"submit\" class=\"btn btn-secondary ml-3\" routerLink=\"/management\" routerLinkActive=\"active\" >Go Back</button>\n        </div>\n      </form>\n    </div>\n      <br>\n  </div>\n    ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManagementService {\n\n  constructor(private http: HttpClient) { }\n\n  getPermission(): Observable<any>{\n    // const url = 'http://localhost:4000/api/permission/';\n    const url = '/api/permission/';\n    return this.http.get<any>(url);\n  }\n\n  getAllUsers(): Observable<any>{\n    // const url = 'http://localhost:4000/api/management/';\n    const url = '/api/management/';\n    return this.http.get<any>(url);\n  }\n\n  deleteUser(username: string): Observable<any>{\n    // const url = 'http://localhost:4000/api/management/';\n    const url = '/api/management/';\n    return this.http.delete<any>(url + username);\n  }\n\n  getUser(id): Observable<any>{\n    // const url = 'http://localhost:4000/api/edit/';\n    const url = '/api/edit/';\n    return this.http.get<any>(url + id);\n  }\n\n  updateUser(user, id): Observable<any>{\n    // const url = 'http://localhost:4000/api/edit/';\n    const url = '/api/edit/';\n    return this.http.put<any>(url, { user: user, id: id });\n  }\n\n  get(): Observable<any>{\n    // const url = 'http://localhost:4000/auth/';\n    const url = '/api/auth/';\n    return this.http.get<any>(url);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ManagementService } from '../management.service';\n\n@Component({\n  selector: 'app-management',\n  templateUrl: './management.component.html',\n  styleUrls: ['./management.component.css']\n})\nexport class ManagementComponent implements OnInit {\n\n  users: [];\n  accessDenied = true;\n  datasaved = false;\n  message = '';\n  editAccess = false;\n  deleteAccess = false;\n  limitEntered: number;\n  limit: number;\n\n  constructor(private managementservice: ManagementService) { }\n  \n  ngOnInit(): void {\n    this.datasaved = false;\n    this.message = '';\n    this.editAccess = false;\n    this.deleteAccess = false;\n    this.getUsers();\n  }\n\n  getUsers() {\n    this.managementservice.getAllUsers().subscribe(data => {\n      // console.log(data);\n      if(data.success) {\n        if (data.permission === 'admin' || data.permission === 'moderator') {\n          this.users = data.users;\n          this.accessDenied = false;\n          if (data.permission === 'moderator') {\n            this.editAccess = true;\n          } else if (data.permission === 'admin') {\n            this.editAccess = true;\n            this.deleteAccess = true;\n          }\n        } else {\n          this.datasaved = true;\n          this.message = data.message;\n        }\n      } else {\n        this.datasaved = true;\n        this.message = data.message;\n      }\n    });\n  }\n\n  showLimited() {\n    this.datasaved = false;\n    this.message = '';\n    if (this.limitEntered > 0) {\n      this.limit = this.limitEntered;\n    } else {\n      this.datasaved = true;\n      this.message = 'Please enter a valid number';\n      this.limitEntered = null;\n    }\n  }\n\n  showAll() {\n    this.limit = undefined;\n    this.datasaved = false;\n    this.message = '';\n  }\n\n  deleteUser(username: string) {\n    this.managementservice.deleteUser(username).subscribe(data => {\n        console.log(data);\n        this.datasaved = true;\n        this.message = data.message;\n        if (data.success) {\n          this.getUsers();\n        }\n    });\n  }\n\n}\n","<div class=\"container-fluid mt-5\">\n    <h2>User Management</h2><br><br>\n\n    <div>\n      Results to display: \n      <input type=\"text\" [(ngModel)]='limitEntered'>\n      <button type=\"button\" class=\"btn btn-success ml-3\" (click)=\"showLimited()\">Apply Filter</button>\n      <button type=\"button\" class=\"btn btn-warning ml-3\" (click)=\"showAll()\">Show All</button>\n    </div><br>\n\n    <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }}</div>\n\n    <table class=\"table table-striped\">\n      <thead>\n        <tr class=\"bg-primary\">\n          <th colspan=\"5\"><h6 class=\"text-nowrap text-white\">User Management</h6></th>\n        </tr>\n        <tr>\n          <th>User #</th>\n          <th>Name</th>\n          <th>Username</th>\n          <th>Email</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor = \"let user of users | slice: 0: limit; let i = index;\">\n          <td>{{ i + 1 }}</td>\n          <td>{{ user.name }}</td>\n          <td>{{ user.username }}</td>\n          <td>{{ user.email }}</td>\n          <td>\n            <button type=\"button\" class=\"btn btn-primary\" *ngIf=\"editAccess\" routerLink=\"/edit/{{ user._id }}\" routerLinkActive=\"active\" >Edit</button>\n            <button type=\"button\" class=\"btn btn-danger ml-2\" *ngIf=\"deleteAccess\" (click)=\"deleteUser(user.username)\">Delete</button>\n          </td>\n          \n        </tr>\n      </tbody>\n    </table>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ManagementService } from './management.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PermissionGuard implements CanActivate {\n  \n  constructor(private router: Router, private managementservice: ManagementService) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot) {\n    if(localStorage.getItem(\"User\")){\n\n      return this.managementservice.getPermission().toPromise().then(data => {\n        if(data.permission === 'admin' || data.permission === 'moderator') {\n          return true;\n        } else {\n          alert('You do not have the permission to view this page, redirecting to Home');\n          this.router.navigate(['/']);\n          return false;\n        }\n      });\n    } else {\n        alert('You do not have the permission to view this page, redirecting to Home');\n        this.router.navigate(['/']);\n        return false;\n    }\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'products', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { ManagementService } from './admin/management.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Shopping Cart';\n\n  constructor(private managementservice: ManagementService) {}\n\n  ngOnInit(): void {\n    // this.managementservice.get().subscribe(() => {});\n  }\n}\n","<div>\n  <app-header></app-header>\n  <!-- <app-check-session></app-check-session> -->\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AuthModule } from './auth/auth.module';\nimport { StaticPagesModule } from './static-pages/static-pages.module';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\nimport { AdminModule } from './admin/admin.module';\nimport { ManagementService } from './admin/management.service';\nimport { ProductsModule } from './products/products.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AuthModule,\n    AdminModule,\n    ProductsModule,\n    StaticPagesModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  providers: [CookieService, ManagementService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html',\n  styleUrls: ['./activation.component.css']\n})\nexport class ActivationComponent implements OnInit {\n\n  message: String = '';\n  datasaved = false;\n\n  constructor(private route: ActivatedRoute, private userservice: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.datasaved = false;\n    console.log(this.route.snapshot.params.token);\n    this.userservice.activateAccount(this.route.snapshot.params.token).subscribe(\n      data =>{\n      // console.log(data);\n      this.message = data.message;\n      if (data.success) {\n        this.datasaved = true;\n        setTimeout(() => {\n          this.router.navigate(['login']);\n        }, 5000); \n      } \n\n    });\n    \n  }\n\n\n\n}\n","<div class=\"container-fluid mt-5\">\n    <h1>Account Activation</h1>\n    <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }} ....Redirecting to Login Page</div>\n    <div *ngIf=\"!datasaved\" class=\"alert alert-warning\">\n        {{ message }}\n        <button class=\"btn btn-warning ml-3\" routerLink=\"/resend\" routerLinkActive=\"active\" >Resend Activation Link</button>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SocialComponent } from './social/social.component';\nimport { ActivationComponent } from './activation/activation.component';\nimport { ResendActivationLinkComponent } from './resend-activation-link/resend-activation-link.component';\nimport { SocialErrorComponent } from './social-error/social-error.component';\nimport { ForgotUsernameComponent } from './forgot-username/forgot-username.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { NewPasswordComponent } from './new-password/new-password.component';\nimport { LoggedGuard } from './logged.guard';\nimport { NotLoggedGuard } from './not-logged.guard';\n\n\nconst routes: Routes = [\n  {path: 'registration', component: RegistrationComponent, canActivate: [NotLoggedGuard]},\n  {path: 'login', component: LoginComponent, canActivate: [NotLoggedGuard]},\n  {path: 'dashboard', component: DashboardComponent, canActivate: [LoggedGuard]},\n  {path: 'social/:token', component: SocialComponent, canActivate: [LoggedGuard]},\n  {path: 'activate/:token', component: ActivationComponent, canActivate: [NotLoggedGuard]},\n  {path: 'resend', component: ResendActivationLinkComponent, canActivate: [NotLoggedGuard]},\n  {path: 'social-error', component: SocialErrorComponent, canActivate: [NotLoggedGuard]},\n  {path: 'forgotusername', component: ForgotUsernameComponent, canActivate: [NotLoggedGuard]},\n  {path: 'forgotpassword', component: ForgotPasswordComponent, canActivate: [NotLoggedGuard]},\n  {path: 'reset/:token', component: NewPasswordComponent, canActivate: [NotLoggedGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    intercept(  req: HttpRequest<any>, \n                next: HttpHandler): Observable<HttpEvent<any>> {\n                    \n        const idToken = localStorage.getItem(\"User\");\n        if (idToken) {\n            const cloned = req.clone({\n                headers: req.headers.set(\"authorization\", \n                \"Bearer \" + idToken)\n            });\n            return next.handle(cloned);\n        } else {\n            return next.handle(req);\n        }\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS, HttpClientXsrfModule } from '@angular/common/http';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { UserService } from './user.service';\nimport { SocialComponent } from './social/social.component';\nimport { RecaptchaModule, RECAPTCHA_SETTINGS, RecaptchaSettings } from 'ng-recaptcha';\nimport { RecaptchaFormsModule } from 'ng-recaptcha';\nimport { ActivationComponent } from './activation/activation.component';\nimport { ResendActivationLinkComponent } from './resend-activation-link/resend-activation-link.component';\nimport { SocialErrorComponent } from './social-error/social-error.component';\nimport { ForgotUsernameComponent } from './forgot-username/forgot-username.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { NewPasswordComponent } from './new-password/new-password.component';\nimport { CheckSessionComponent } from './check-session/check-session.component';\nimport { LoggedGuard } from './logged.guard';\nimport { NotLoggedGuard } from './not-logged.guard';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { HttpXsrfInterceptor } from './http.interceptor';\n\n@NgModule({\n  declarations: [RegistrationComponent, LoginComponent, DashboardComponent, SocialComponent, ActivationComponent, ResendActivationLinkComponent, SocialErrorComponent, ForgotUsernameComponent, ForgotPasswordComponent, NewPasswordComponent, CheckSessionComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'XSRF-TOKEN',\n      headerName: 'X-XSRF-TOKEN',\n    }),\n    RecaptchaModule,\n    RecaptchaFormsModule,\n    AuthRoutingModule\n  ],\n  exports: [CheckSessionComponent],\n  providers: [UserService, LoggedGuard, NotLoggedGuard, \n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }]\n})\nexport class AuthModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { HttpClient } from '@angular/common/http';\n// import * as $ from \"jquery\";\ndeclare var $: any;\n\n@Component({\n  selector: 'app-check-session',\n  templateUrl: './check-session.component.html',\n  styleUrls: ['./check-session.component.css']\n})\nexport class CheckSessionComponent implements OnInit {\n\n  modalHeader: any;\n  modalBody: any;\n  choiceMade: boolean;\n  choiceMade2: boolean;\n  hideButtons: boolean = false;\n\n  @Input() childlogoutPressed: boolean;\n  constructor(private router: Router, private userservice: UserService, private http: HttpClient) { }\n\n  ngOnChanges(): void {\n    if (this.childlogoutPressed) {\n      this.showModal(2);\n    }\n  }\n\n  ngOnInit(): void {\n\n    this.userservice.get().toPromise().then(() => {\n    });\n\n    const inter = setInterval(() => {\n      let token = localStorage.getItem(\"User\");\n      if (token === null) {  \n        // console.log('test');\n        clearInterval(inter);\n      } else {\n        let jwtToTimestamp = function(token) {\n          let base64Url = token.split('.')[1];\n          let base64 = base64Url.replace('-', '+').replace('_', '/');\n          return JSON.parse(window.atob(base64));\n        };   \n        let expireTime = jwtToTimestamp(token);\n        let timeStamp = Math.floor(Date.now() / 1000);\n        let timeCheck = expireTime.exp - timeStamp;\n        // console.log(expireTime.exp);\n        // console.log(timeStamp);\n        // console.log('timecheck: ' + timeCheck);\n        if(timeCheck <= 25) {\n          console.log('Token will expire in 25 seconds');\n          this.showModal(1);\n          clearInterval(inter);\n        } else {\n          // console.log('Token not yet expired');\n        }\n      }\n      token = null;\n    }, 2000);\n    \n  }\n\n  showModal(option) {\n    this.hideButtons = false;\n    this.choiceMade = false;\n    this.modalHeader = undefined;\n    this.modalBody = undefined;\n\n    if (option === 1) {\n      this.hideButtons = true;\n      this.modalHeader = 'Timeout Warning';\n      this.modalBody = 'Your session will expire in 5 minutes. Would you like to renew your session?';\n      $(\"#myModal\").modal({backdrop: \"static\"});\n      setTimeout(() => {\n        if (!this.choiceMade && !this.choiceMade2) {\n        console.log('LOGGED OUT!!!');\n        // this.showModal(2);\n        this.endSession();\n        this.hideModal();\n        }\n      }, 10000);\n    } else if (option === 2) {\n      // logout portion    \n      this.modalHeader = 'Logging Out';\n      $(\"#myModal\").modal({backdrop: \"static\"});\n\n      localStorage.removeItem(\"User\");\n      this.sessionClear();\n\n      setTimeout(() => {\n        this.router.navigate(['login']);\n        if (!this.choiceMade) {\n          console.log('LOGGED OUT!!!');\n          this.hideModal();\n        }\n      }, 5000);\n    }\n    \n  };\n\n  // userUrl = 'http://localhost:4000/auth/';\n  userUrl = '/api/auth/';\n  sessionClear(): void{\n    this.http.get(this.userUrl + 'logout/').subscribe(() => {\n    });\n  }\n\n  hideModal() {\n    $(\"#myModal\").modal(\"hide\");\n  }\n\n  endSession() {\n    this.hideModal();\n    this.choiceMade2 = true;\n    console.log('Session has ended');\n    setTimeout(() => {\n      this.showModal(2);\n    }, 1000);\n  }\n\n  renewSession() {\n    this.choiceMade2 = true;\n    console.log('Session has renewed');\n    this.getUser();\n  }\n\n  \n  getUser(){\n    this.userservice.getLoggedUser().subscribe(\n      data =>{\n        console.log(data);\n        console.log(data.success);\n        if (data.success === false) {\n          localStorage.removeItem(\"User\");\n          this.router.navigate(['login']);\n        } else {\n          console.log(data.user.email);\n          this.userservice.renewLoginToken(data.user.email).subscribe(\n            result => {\n              if(result.success){\n                localStorage.setItem(\"User\", JSON.stringify(result.token));\n                this.router.navigate(['dashboard']);\n                setTimeout(() => {\n                  window.location.reload();\n                }, 1);\n              } else {\n                this.modalBody = result.message;\n              }\n            });\n        }\n    });\n  }\n\n\n}\n","<div class=\"container\">\n    <!-- Button to Open the Modal -->\n    <!-- <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal\">\n      Open modal\n    </button> -->\n  \n    <!-- The Modal -->\n    <div class=\"modal fade\" id=\"myModal\">\n      <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n        \n          <!-- Modal Header -->\n          <div class=\"modal-header\">\n            <h4 class=\"modal-title\">{{ modalHeader }}</h4>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"endSession()\">&times;</button>\n          </div>\n          \n          <!-- Modal body -->\n          <div class=\"modal-body\">\n            {{ modalBody }}\n            <div class=\"container anim\" *ngIf=\"!hideButtons\">\n                <div class=\"circle\"></div>\n                <div class=\"circle\"></div>\n                <div class=\"circle\"></div>\n            </div>\n          </div>\n          \n          <!-- Modal footer -->\n          <div class=\"modal-footer\" *ngIf=\"hideButtons\">\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"renewSession()\" *ngIf=\"hideButtons\">Yes</button>\n            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"endSession()\" *ngIf=\"hideButtons\">No</button>\n          </div>\n          \n        </div>\n      </div>\n    </div>\n    \n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  name: string;\n  orders: [];\n  constructor(private userservice: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.getUser();\n  }\n\n  getUser(){\n    this.userservice.getLoggedUser().subscribe(\n      data =>{\n        console.log(data);\n        // console.log(data.success);\n        if (data.success === false) {\n          localStorage.removeItem(\"User\");\n          this.router.navigate(['login']);\n        } else {\n          this.name = data.user.name;\n          this.orders = data.orders;\n        }\n    });\n  }\n\n  toArray(items: object) {\n    return Object.keys(items).map(key => items[key])\n  }\n\n}\n","<div class=\"container-fluid mt-5 w-75\">\n    <br><br>\n    <h2>Welcome to your profile, {{ name }}</h2>\n    <hr>\n\n    <h3><strong>My Orders</strong></h3>\n    <div class=\"row mx-0\" *ngFor=\"let order of orders; let i = index\">\n        <div class=\"card w-100 mb-4\">\n            <div class=\"card-header bg-secondary text-white\">Order # {{ i+1 }}</div>\n            <div class=\"card-body\">\n                <ul class=\"list-group w-100\" *ngFor=\"let product of toArray(order.cart.items)\">\n                    <li class=\"list-group-item d-flex align-items-center\" >\n                        <span>{{ product.item.title }} | {{ product.qty }} Units</span>\n                        <span class=\"badge badge-primary badge-pill ml-auto\">${{ product.price }}</span>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"card-footer\">\n                <strong>Total Price: ${{ order.cart.totalPrice }}</strong>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  submitDisabled = false;\n\n  datasaved: boolean = false;\n  message: string = '';\n  userForm: FormGroup;\n\n  constructor(private userservice: UserService, private formbuilder: FormBuilder, private router: Router) { }\n\n  ngOnInit(): void {\n    this.setFormState();\n  }\n\n  setFormState():void {\n    this.userForm = this.formbuilder.group({\n      email: [null, Validators.compose([Validators.required, Validators.email])]\n    });\n  }\n\n  submitData() {\n    let user = this.userForm.value;\n    console.log(user);\n    // console.log(this.userForm.controls['email'].value);\n\n    this.message = '';\n    this.sendPassLink(user);\n  }\n\n  sendPassLink(user: any){\n    this.userservice.sendPasswordLink(user).subscribe(\n      data =>{\n        console.log(data);\n        // console.log(data.message);\n        this.datasaved = true;\n        this.message = data.message;\n        this.submitDisabled = false;\n\n        if(data.success) {\n          this.submitDisabled = true;\n        } \n    });\n  }\n\n\n\n\n}\n","<div class=\"container-fluid mt-5\">\n    <div id=\"login\">\n      <h2>Forgot Password</h2><br>\n    \n      <form [formGroup]='userForm'>\n        <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }}</div>\n  \n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-sm-3\">Email ID: * </label>\n          <input type=\"email\" class=\"form-control col-sm-9\" placeholder=\"Email ID\" formControlName=\"email\" id=\"email\">\n          <span class=\"font-italic\" *ngIf = \"userForm.controls['email'].touched && userForm.controls['email'].hasError('required')\">Email address is required</span>\n          <span class=\"font-italic\" *ngIf = \"userForm.controls['email'].hasError('email')\">Please enter valid email address</span>\n        </div>\n\n        <div class=\"row\">\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"userForm.invalid || submitDisabled\" (click)=\"submitData()\">Submit</button>\n        </div>\n      </form>\n    </div>\n      <br>\n</div>\n    \n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot-username',\n  templateUrl: './forgot-username.component.html',\n  styleUrls: ['./forgot-username.component.css']\n})\nexport class ForgotUsernameComponent implements OnInit {\n\n  submitDisabled = false;\n\n  datasaved: boolean = false;\n  message: string = '';\n  userForm: FormGroup;\n\n  constructor(private userservice: UserService, private formbuilder: FormBuilder, private router: Router) { }\n\n  ngOnInit(): void {\n    this.setFormState();\n  }\n\n  setFormState():void {\n    this.userForm = this.formbuilder.group({\n      email: [null, Validators.compose([Validators.required, Validators.email])]\n    });\n  }\n\n  submitData() {\n    let user = this.userForm.value;\n    console.log(user);\n    console.log(this.userForm.controls['email'].value);\n\n    this.message = '';\n    this.reset(this.userForm.controls['email'].value);\n  }\n\n  reset(user: any){\n    this.userservice.resetUsername(user).subscribe(\n      data =>{\n        console.log(data);\n        // console.log(data.message);\n        this.datasaved = true;\n        this.message = data.message;\n        this.submitDisabled = false;\n\n        setTimeout(() => {\n          this.datasaved = false;\n        }, 3000);\n        \n        if(data.success) {\n          this.submitDisabled = true;\n        } \n    });\n  }\n\n\n\n\n}\n","<div class=\"container-fluid mt-5\">\n    <div id=\"login\">\n      <h2>Forgot Username</h2><br>\n    \n      <form [formGroup]='userForm'>\n        <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }}</div>\n  \n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-sm-3\">Email ID: * </label>\n          <input type=\"email\" class=\"form-control col-sm-9\" placeholder=\"Email ID\" formControlName=\"email\" id=\"email\">\n          <span class=\"font-italic\" *ngIf = \"userForm.controls['email'].touched && userForm.controls['email'].hasError('required')\">Email address is required</span>\n          <span class=\"font-italic\" *ngIf = \"userForm.controls['email'].hasError('email')\">Please enter valid email address</span>\n        </div>\n\n        <div class=\"row\">\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"userForm.invalid || submitDisabled\" (click)=\"submitData()\">Submit</button>\n        </div>\n      </form>\n    </div>\n      <br>\n  </div>\n    ","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggedGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if(localStorage.getItem(\"User\")){\n        return true;\n    } else {\n        alert('You do not have the permission to view this page, redirecting to Login');\n        this.router.navigate(['login']);\n        return false;\n    }\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  captchaPassed = false;\n  resendButton = false;\n  loginDisabled = false;\n\n  datasaved: boolean = false;\n  message: string = '';\n  loginForm: FormGroup;\n\n  csrfToken: any;\n\n  constructor(private userservice: UserService, private formbuilder: FormBuilder, private router: Router) { }\n\n  ngOnInit(): void {\n    this.setFormState();\n    this.captchaPassed = false;\n    // this.userservice.get().toPromise().then(data => {\n    //   this.csrfToken = data.csrfToken;\n    //   console.log(this.csrfToken);\n    //   this.setFormState();\n    // });\n  }\n\n  setFormState():void {\n    this.loginForm = this.formbuilder.group({\n      email: [null, Validators.compose([Validators.required, Validators.email])],\n      password: [null, Validators.required],\n      recaptchaReactive: [null, Validators.required],\n      _csrf: [this.csrfToken, Validators.required],\n    });\n  }\n\n  submitData() {\n    let user = this.loginForm.value;\n    // console.log(user);\n\n    this.message = '';\n    this.login(user);\n  }\n\n  login(user: User){\n    this.userservice.loginUser(user).toPromise().then(\n      data =>{\n        // console.log(data);\n        // console.log(data.message);\n        // console.log(data.token);\n        this.datasaved = true;\n        this.message = data.message;\n        setTimeout(() => {\n          this.datasaved = false;\n        }, 3000);\n        // this.loginForm.reset();\n        if(data.token){\n          this.loginForm.reset();\n          localStorage.setItem(\"User\", JSON.stringify(data.token));\n          if (data.message === 'Auth successful... Redirecting to Checkout') {\n            this.router.navigate(['checkout']);\n          } else {\n            this.router.navigate(['dashboard']);\n          }\n          setTimeout(() => {\n            window.location.reload();  \n          }, 1);\n        }\n\n        this.resendButton = false;\n        if(data.expired) {\n          this.loginDisabled = true;\n          this.resendButton = true;\n          setTimeout(() => {\n            this.resendButton = false;\n          }, 10000);\n        } else {\n          this.loginDisabled = false;\n        }\n    });\n  }\n\n  //function to resolve the reCaptcha and retrieve a token\n  async resolved(captchaResponse: string) {\n    // console.log(`Resolved response token: ${captchaResponse}`);\n    await this.sendCaptchaTokenToBackend(captchaResponse); //declaring the token send function with a token parameter\n    // await this.sendTokenToBackend(`${captchaResponse}`); //declaring the token send function with a token parameter\n  }\n\n  //function to send the token to the node server\n  sendCaptchaTokenToBackend(tok){\n    //calling the service and passing the token to the service\n    this.userservice.sendCaptchaToken(tok).subscribe(\n      data => {\n        // console.log(data)\n        this.captchaPassed = data.success;\n        console.log('captcha passed: ' + this.captchaPassed)\n      },\n      err => {\n        console.log(err)\n      },\n      () => {}\n    );\n  }\n\n  filldata() {\n    this.loginForm.patchValue({\n      email: 'nikhil.mittal60@gmail.com',\n      password: '123123'\n    });\n    this.captchaPassed = true;\n  }\n\n\n\n}\n","<div class=\"container-fluid mt-5\">\n    <div id=\"login\"><br>\n      <h2>User Login</h2><br>\n    \n      <form [formGroup]='loginForm'>\n        <div *ngIf=\"datasaved || resendButton\" class=\"alert alert-success\">\n          {{ message }}<br>\n          <button *ngIf=\"resendButton\" class=\"btn btn-success mt-2\" routerLink=\"/resend\" routerLinkActive=\"active\" >Resend Activation Link</button>\n        </div>\n  \n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-sm-3\">Email ID: * </label>\n          <input type=\"email\" class=\"form-control col-sm-9\" placeholder=\"Email ID\" formControlName=\"email\" id=\"email\">\n          <span class=\"font-italic\" *ngIf = \"loginForm.controls['email'].touched && loginForm.controls['email'].hasError('required')\">Email address is required</span>\n          <span class=\"font-italic\" *ngIf = \"loginForm.controls['email'].hasError('email')\">Please enter valid email address</span>\n        </div>\n  \n        <div class=\"form-group row mb-3\">\n          <label for=\"pass\" class=\"col-sm-3\">Password: * </label>\n          <input type=\"password\" class=\"form-control col-sm-9\" placeholder=\"Password\" formControlName=\"password\" id=\"pass\">\n        </div>\n\n        <div class=\"form-group row\">\n          <re-captcha (resolved)=\"resolved($event)\" formControlName=\"recaptchaReactive\" siteKey=\"6Lc2sPUUAAAAADhSYFaD9tFsYoBz8p77uxPfiUNj\"></re-captcha>\n        </div>\n\n        <!-- <input type=\"hidden\" name=\"_csrf\" formControlName=\"_csrf\" value=\"{{csrfToken}}\"> -->\n        \n        <div class=\"row\">\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"(loginForm.invalid && !captchaPassed) || loginDisabled\" (click)=\"submitData()\">Login</button>\n            <a href=\"http://localhost:4000/auth/google/\"><button type=\"button\" class=\"btn btn-danger ml-3\" [disabled]=\"loginForm.valid\">Google+</button></a>\n          <a href=\"http://localhost:4000/auth/github/\"><button type=\"button\" class=\"btn btn-dark ml-3\" [disabled]=\"loginForm.valid\">Github</button></a>\n        </div>\n        <div class=\"row mt-3\">\n          <button type=\"button\" class=\"btn btn-warning\" routerLink=\"/forgotusername\" routerLinkActive=\"active\" >Forgot Username</button>\n          <button type=\"button\" class=\"btn btn-info ml-3\" routerLink=\"/forgotpassword\" routerLinkActive=\"active\">Forgot Password</button>\n\n          <button type=\"button\" class=\"btn btn-info ml-3\" (click)=\"filldata()\">Fill data</button>\n          \n      </div>\n      \n      </form>\n      <br>\n      <div class=\"row\">\n        <p>Don't have an account? <a routerLink=\"/registration\" routerLinkActive=\"active\">Sign up instead!</a></p>\n      </div>\n    </div>\n      <br>\n  </div>\n    ","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-new-password',\n  templateUrl: './new-password.component.html',\n  styleUrls: ['./new-password.component.css']\n})\nexport class NewPasswordComponent implements OnInit {\n\n  show: boolean = false;\n  showForm: boolean = false;\n  resetDisabled = false;\n\n  datasaved: boolean = false;\n  message: string = '';\n  resetForm: FormGroup;\n\n  constructor(private userservice: UserService, private formbuilder: FormBuilder, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.datasaved = false;\n    this.showForm = false;\n    console.log(this.route.snapshot.params.token);\n    this.getResetPasswordProfile(this.route.snapshot.params.token);\n\n    this.setFormState();\n    this.show = false;\n  }\n\n  setFormState():void {\n    this.resetForm = this.formbuilder.group({\n      email: [null, Validators.required],\n      password: [null, Validators.compose([Validators.required, Validators.pattern(/^(?=.*[-@_])[\\w@-]{6,20}$/)])],\n      confirmPassword: [null, Validators.required]\n    }, {validator: this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(frm: FormGroup) {\n    return frm.controls['password'].value === frm.controls['confirmPassword'].value ? null : { 'mismatch': true};\n  }\n\n  getResetPasswordProfile(token) {\n    this.userservice.getResetPassProfile(token).subscribe(\n      data =>{\n      console.log(data);\n      this.datasaved = true;\n      this.message = data.message;\n      if (data.success) {\n        this.showForm = true;\n        this.message = 'Please enter a new password';\n        this.resetForm.patchValue({\n          email: data.user.email\n        });\n      } \n    });\n  }\n\n  postdata() {\n    let user = this.resetForm.value;\n    console.log(user);\n\n    this.message = '';\n    this.resetPass(user);\n  }\n\n  resetPass(user: any){\n    this.userservice.resetPassword(user).subscribe(\n      data =>{\n        console.log(data.message);\n        this.datasaved = true;\n        this.message = data.message;\n        // setTimeout(() => {\n        //   this.datasaved = false;\n        // }, 5000);\n        \n        if (data.success) {\n          this.resetDisabled = true;\n          this.resetForm.reset();\n          this.message = data.message + '......Redirecting to Login Page';\n          setTimeout(() => {\n            this.router.navigate(['login']);\n          }, 10000);\n        } else {\n          this.resetDisabled = false;\n        }\n    });\n  }\n\n  revealPass() {\n    this.show = !this.show;\n  }\n\n  \n\n\n}\n","<div class=\"container-fluid mt-2\">\n    <div id=\"reset\">\n      <h2>Reset Password</h2><br>\n        \n      <div *ngIf=\"datasaved && !showForm\" style=\"margin-bottom: 400px;\" class=\"alert alert-success\">{{ message }}</div>\n      <form [formGroup]='resetForm' *ngIf=\"showForm\">\n        <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }}</div>\n        \n        <div class=\"form-group row\">\n          <label for=\"pass\" class=\"col-sm-3\">Password: * </label>\n          <input type=\"password\" class=\"form-control col-sm-9\" placeholder=\"Password\" formControlName=\"password\" id=\"pass\">\n          <span class=\"font-italic\" *ngIf = \"resetForm.controls['password'].touched && resetForm.controls['password'].hasError('required')\">Password is required</span>\n          <span class=\"font-italic\" *ngIf = \"resetForm.controls['password'].hasError('pattern')\">Password must be alphanumeric, must have atleat one special character (@, _ and - are allowed) and must be 6 - 20 characters</span>\n        </div>\n\n        <div class=\"form-group row mb-3\">\n          <label for=\"confirmPass\" class=\"col-sm-3\">Confirm Password: * </label>\n          <div class=\"input-group col-sm-9 p-0 mt-2\">\n            <input [type]=\"show ? 'text' : 'password'\" class=\"form-control\" placeholder=\"Confirm Password\" formControlName=\"confirmPassword\" id=\"confirmPass\" />\n            <div class=\"input-group-append\">\n              <div class=\"input-group-addon\">\n                <button type=\"button\" (click)=\"revealPass()\" class=\"btn btn-success pass\">\n                  <i *ngIf=\"!show\" class=\"fa fa-eye\"></i>\n                  <i *ngIf=\"show\" class=\"fa fa-eye-slash\"></i>\n                </button></div>\n            </div>\n          </div>\n          <span class=\"font-italic\" *ngIf = \"resetForm.errors?.mismatch && resetForm.controls['confirmPassword'].touched && resetForm.controls['password'].dirty\">Passwords do not match</span>\n        </div>\n\n        <div class=\"row\">\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"resetForm.invalid || resetDisabled\" (click)=\"postdata()\">Reset Password</button>\n        </div>\n      </form>\n    </div>\n      <br>\n  </div>\n    ","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotLoggedGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if(localStorage.getItem(\"User\")){\n        alert('You do not have the permission to view this page, redirecting to Dashboard');\n        this.router.navigate(['dashboard']);\n        return false;\n      } else {\n        return true;\n      }\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  show: boolean = false;\n  captchaPassed = false;\n  registerDisabled = false;\n\n  datasaved: boolean = false;\n  message: string = '';\n  regForm: FormGroup;\n\n  constructor(private userservice: UserService, private formbuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.registerDisabled = false;\n    this.setFormState();\n    this.show = false;\n    this.captchaPassed = false;\n  }\n\n  setFormState():void {\n    this.regForm = this.formbuilder.group({\n      name: [null, Validators.compose([Validators.required, Validators.pattern(/^[a-z\\. ]{1,50}$/i)])],\n      username: [null, Validators.compose([Validators.required, Validators.pattern(/^[a-z\\d]{5,12}$/i)])],\n      email: [null, Validators.compose([Validators.required, Validators.email, Validators.pattern(/^([a-z\\d\\.-]{1,30})@([a-z\\d-]{1,20})\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/i)])],\n      password: [null, Validators.compose([Validators.required, Validators.pattern(/^(?=.*[-@_])[\\w@-]{6,20}$/)])],\n      confirmPassword: [null, Validators.required],\n      recaptchaReactive: [null, Validators.required]\n    }, {validator: this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(frm: FormGroup) {\n    return frm.controls['password'].value === frm.controls['confirmPassword'].value ? null : { 'mismatch': true};\n  }\n\n  postdata() {\n    let user = this.regForm.value;\n    // console.log(user);\n\n    this.message = '';\n    this.createNewUser(user);\n  }\n\n  createNewUser(user: User){\n    this.userservice.createUser(user).subscribe(\n      data =>{\n        console.log(data.message);\n        this.datasaved = true;\n        this.message = data.message;\n        setTimeout(() => {\n          this.datasaved = false;\n        }, 4000);\n        \n        if (data.success) {\n          this.registerDisabled = true;\n          this.regForm.reset();\n        } else {\n          this.registerDisabled = false;\n        }\n    });\n  }\n\n  revealPass() {\n    this.show = !this.show;\n  }\n\n  //function to resolve the reCaptcha and retrieve a token\n  async resolved(captchaResponse: string) {\n    // console.log(`Resolved response token: ${captchaResponse}`);\n    await this.sendCaptchaTokenToBackend(captchaResponse); //declaring the token send function with a token parameter\n    // await this.sendTokenToBackend(`${captchaResponse}`); //declaring the token send function with a token parameter\n  }\n\n  //function to send the token to the node server\n  sendCaptchaTokenToBackend(tok){\n    //calling the service and passing the token to the service\n    this.userservice.sendCaptchaToken(tok).subscribe(\n      data => {\n        // console.log(data)\n        this.captchaPassed = data.success;\n        console.log('captcha passed: ' + this.captchaPassed)\n      },\n      err => {\n        console.log(err)\n      },\n      () => {}\n    );\n  }\n\n\n  filldata() {\n    this.regForm.patchValue({\n      name: 'BoGGDJ WJDLO',\n      username: 'tokomoko',\n      email: 'abc@abc.co.in',\n      password: '123123',\n      confirmPassword: '123123',\n      recaptchaReactive: true\n    });\n    this.captchaPassed = true;\n  }\n\n\n\n}\n","<div class=\"container-fluid mt-2\">\n    <div id=\"register\"><br><br>\n      <h2>User Registration</h2><br>\n    \n      <form [formGroup]='regForm'>\n        <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }}</div>\n  \n        <div class=\"form-group row\">\n          <label for=\"name\" class=\"col-sm-3\">Name: * </label>\n          <input type=\"text\" class=\"form-control col-sm-9\" placeholder=\"Name\" formControlName=\"name\" id=\"name\">\n          <span class=\"font-italic\" *ngIf = \"regForm.controls['name'].touched && regForm.controls['name'].hasError('required')\">Name is required</span>\n          <span class=\"font-italic\" *ngIf = \"regForm.controls['name'].hasError('pattern')\">Name must be alphabets (. and space are also allowed) and must be maximum 50 characters long</span>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"username\" class=\"col-sm-3\">Username: * </label>\n          <input type=\"text\" class=\"form-control col-sm-9\" placeholder=\"Username\" formControlName=\"username\" id=\"username\">\n          <span class=\"font-italic\" *ngIf = \"regForm.controls['username'].touched && regForm.controls['username'].hasError('required')\">Username is required</span>\n          <span class=\"font-italic\" *ngIf = \"regForm.controls['username'].hasError('pattern')\">Username must be alphanumeric and contain 5 - 12 characters</span>\n        </div>\n    \n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-sm-3\">Email ID: * </label>\n          <input type=\"email\" class=\"form-control col-sm-9\" placeholder=\"Email ID\" formControlName=\"email\" id=\"email\">\n          <span class=\"font-italic\" *ngIf = \"regForm.controls['email'].touched && regForm.controls['email'].hasError('required')\">Email address is required</span>\n          <span class=\"font-italic\" *ngIf = \"regForm.controls['email'].hasError('pattern')\">Please enter a valid email address, e.g. me@mydomain.com</span>\n        </div>\n  \n        <div class=\"form-group row\">\n          <label for=\"pass\" class=\"col-sm-3\">Password: * </label>\n          <input type=\"password\" class=\"form-control col-sm-9\" placeholder=\"Password\" formControlName=\"password\" id=\"pass\">\n          <span class=\"font-italic\" *ngIf = \"regForm.controls['password'].touched && regForm.controls['password'].hasError('required')\">Password is required</span>\n          <span class=\"font-italic\" *ngIf = \"regForm.controls['password'].hasError('pattern')\">Password must be alphanumeric, must have atleat one special character (@, _ and - are allowed) and must be 6 - 20 characters</span>\n        </div>\n\n        <div class=\"form-group row mb-3\">\n          <label for=\"confirmPass\" class=\"col-sm-3\">Confirm Password: * </label>\n          <div class=\"input-group col-sm-9 p-0 mt-2\">\n            <input [type]=\"show ? 'text' : 'password'\" class=\"form-control\" placeholder=\"Confirm Password\" formControlName=\"confirmPassword\" id=\"confirmPass\" />\n            <div class=\"input-group-append\">\n              <div class=\"input-group-addon\">\n                <button type=\"button\" (click)=\"revealPass()\" class=\"btn btn-success pass\">\n                  <i *ngIf=\"!show\" class=\"fa fa-eye\"></i>\n                  <i *ngIf=\"show\" class=\"fa fa-eye-slash\"></i>\n                </button></div>\n            </div>\n          </div>\n          <span class=\"font-italic\" *ngIf = \"regForm.errors?.mismatch && regForm.controls['confirmPassword'].touched && regForm.controls['password'].dirty\">Passwords do not match</span>\n        </div>\n\n        <div class=\"form-group row\">\n          <re-captcha (resolved)=\"resolved($event)\" formControlName=\"recaptchaReactive\" siteKey=\"6Lc2sPUUAAAAADhSYFaD9tFsYoBz8p77uxPfiUNj\"></re-captcha>\n        </div>\n        \n        <div class=\"row\">\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"false && (regForm.invalid || !captchaPassed) || registerDisabled\" (click)=\"postdata()\">Register</button>\n\n            <button type=\"button\" class=\"btn btn-info ml-3\" (click)=\"filldata()\">Fill data</button>\n        </div>\n      </form>\n    </div>\n      <br>\n  </div>\n    ","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\nimport { Router } from '@angular/router';\nimport { concatMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-resend-activation-link',\n  templateUrl: './resend-activation-link.component.html',\n  styleUrls: ['./resend-activation-link.component.css']\n})\nexport class ResendActivationLinkComponent implements OnInit {\n\n  credentialsCheck = false;\n  emailAfterCheck = '';\n  submitDisabled = false;\n\n  datasaved: boolean = false;\n  message: string = '';\n  resendForm: FormGroup;\n\n  constructor(private userservice: UserService, private formbuilder: FormBuilder, private router: Router) { }\n\n  ngOnInit(): void {\n    this.setFormState();\n    this.credentialsCheck = false;\n  }\n\n  setFormState():void {\n    this.resendForm = this.formbuilder.group({\n      email: [null, Validators.compose([Validators.required, Validators.email, Validators.pattern(/^([a-z\\d\\.-]{1,20})@([a-z\\d-]{1,20})\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/i)])],\n      password: [null, Validators.required]\n    });\n  }\n\n  submitData() {\n    let user = this.resendForm.value;\n    console.log(user);\n    \n    this.credentialsCheck = false;\n    this.message = '';\n    this.resend(user);\n\n    \n  }\n\n\n  resend(user: User){\n      this.userservice.resendActivationLink(user).subscribe(\n        data => {\n          console.log(data);\n          console.log(data.message);\n          console.log(data.success);\n          // console.log(data.token);\n          this.datasaved = true;\n          this.message = data.message;\n          setTimeout(() => {\n            this.datasaved = false;\n          }, 3000);\n  \n          if (data.success) {\n            this.credentialsCheck = true;\n            this.emailAfterCheck = data.email;\n          }    \n  \n          if (this.credentialsCheck) {\n            this.userservice.resendActivationLink2(this.emailAfterCheck).subscribe(\n              result => {\n                console.log(result);\n                \n                this.message = result.message;\n                this.resendForm.reset();\n                this.datasaved = true;\n                setTimeout(() => {\n                  this.datasaved = true;\n                }, 3000);\n                setTimeout(() => {\n                  this.datasaved = false;\n                }, 8000);\n\n                if (result.success) {\n                  this.submitDisabled = true;\n                } else {\n                  this.submitDisabled = false;\n                }\n              }\n            );\n          }\n      });\n    }\n\n  \n\n  // resend(user: User){\n  //   this.userservice.resendActivationLink(user).subscribe(\n  //     data => {\n  //       console.log(data);\n  //       console.log(data.message);\n  //       console.log(data.success);\n  //       // console.log(data.token);\n  //       this.datasaved = true;\n  //       this.message = data.message;\n  //       setTimeout(() => {\n  //         this.datasaved = false;\n  //       }, 3000);\n\n  //       if (data.success) {\n  //         this.credentialsCheck = true;\n  //         this.emailAfterCheck = data.email;\n  //       }    \n\n  //       if (this.credentialsCheck) {\n  //         this.userservice.resendActivationLink2(this.emailAfterCheck).subscribe(\n  //           result => {\n  //             console.log(result);\n  //             this.message = result.message;\n  //             this.resendForm.reset();\n  //             this.datasaved = true;\n  //             setTimeout(() => {\n  //               this.datasaved = true;\n  //             }, 3000);\n  //           }\n  //         );\n  //       }\n  //   });\n  // }\n\n  \n\n\n}\n","<div class=\"container-fluid mt-5\">\n    <div id=\"resend\">\n      <h2>Resend Activation Link</h2><br>\n    \n      <form [formGroup]='resendForm'>\n        <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }}</div>\n        <!-- <div *ngIf=\"credentialsCheck\" class=\"alert alert-primary\">{{ message }}</div> -->\n  \n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-sm-3\">Email ID: * </label>\n          <input type=\"email\" class=\"form-control col-sm-9\" placeholder=\"Email ID\" formControlName=\"email\" id=\"email\">\n          <span class=\"font-italic\" *ngIf = \"resendForm.controls['email'].touched && resendForm.controls['email'].hasError('required')\">Email address is required</span>\n          <span class=\"font-italic\" *ngIf = \"resendForm.controls['email'].hasError('pattern')\">Please enter a valid email address, e.g. me@mydomain.com</span>\n        </div>\n  \n        <div class=\"form-group row mb-3\">\n          <label for=\"pass\" class=\"col-sm-3\">Password: * </label>\n          <input type=\"password\" class=\"form-control col-sm-9\" placeholder=\"Password\" formControlName=\"password\" id=\"pass\">\n          <span class=\"font-italic\" *ngIf = \"resendForm.controls['password'].touched && resendForm.controls['password'].hasError('required')\">Password is required</span>\n        </div>\n        \n        <div class=\"row\">\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"resendForm.invalid || submitDisabled\" (click)=\"submitData()\">Submit</button>\n        </div>\n\n      </form>\n    </div>\n      <br>\n  </div>\n    ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-social-error',\n  templateUrl: './social-error.component.html',\n  styleUrls: ['./social-error.component.css']\n})\nexport class SocialErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid mt-5\">\n    <h1>Account Activation</h1>\n    <h3>Your account is not yet activated. Please check your e-mail for activation link</h3>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-social',\n  templateUrl: './social.component.html',\n  styleUrls: ['./social.component.css']\n})\nexport class SocialComponent implements OnInit {\n\n  name: string;\n  datasaved = false;\n\n  constructor(private route: ActivatedRoute, private userservice: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    console.log(this.route.snapshot.params.token);\n    if(this.route.snapshot.params.token){\n      localStorage.setItem(\"User\", JSON.stringify(this.route.snapshot.params.token));\n    }\n\n\n    this.datasaved = false;\n    this.getUser();  \n  }\n\n  getUser(){\n    this.userservice.getLoggedUser().subscribe(\n      data =>{\n        console.log(data);\n        console.log(data.success);\n        if (data.success === false) {\n          localStorage.removeItem(\"User\");\n          this.router.navigate(['login']);\n        } \n        if (data.success === true) {\n          this.name = data.user.name;\n          this.datasaved = true;\n        }\n        \n    });\n  }\n\n}\n","<div class=\"container-fluid mt-5\">\n    <h3 *ngIf=\"datasaved\">Welcome to your profile, {{ name }}</h3>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from './user';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  // userUrl = 'http://localhost:4000/auth/';\n  userUrl = '/api/auth/';\n\n  constructor(private http: HttpClient) { }\n\n  createUser(user: User): Observable<User>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.post<User>(this.userUrl + 'register/', user, options);\n  }\n\n  loginUser(user: User): Observable<any>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.post<any>(this.userUrl + 'login/', user, options);\n  }\n\n  resendActivationLink(user: User): Observable<any>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.post<any>(this.userUrl + 'resend/', user, options);\n  }\n\n  resendActivationLink2(email): Observable<any>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.put<any>(this.userUrl + 'resend/', {email: email}, options);\n  }\n\n  // getUserUrl = 'http://localhost:4000/profile/';\n  getUserUrl = '/api/profile/';\n\n  getLoggedUser(): Observable<any>{\n    // let httpheaders = new HttpHeaders({'Content-Type': 'Application/Json', \"authorization\": localStorage.getItem(\"User\")});\n    // let httpheaders = new HttpHeaders().set(\"authorization\", \"Bearer \" + localStorage.getItem(\"User\"));\n    // let options = {\n    //   headers: httpheaders,\n    // }\n    return this.http.get<any>(this.getUserUrl);\n  }\n\n  // backendUrl = 'http://localhost:4000/';\n  backendUrl = '/api/';\n  sendCaptchaToken(token) {\n    return this.http.post<any>(this.backendUrl + \"token_validate/\", {recaptcha: token})\n  }\n\n  activateAccount(token) {\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.put<any>(this.userUrl + 'activate/' + token, options);\n  }\n\n  resetUsername(email: string): Observable<any>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.get<any>(this.userUrl + 'resetusername/' + email, options);\n  }\n\n  sendPasswordLink(user: any): Observable<any>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.put<any>(this.userUrl + 'resetpassword/', user, options);\n  }\n\n  getResetPassProfile(token: any): Observable<any>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.get<any>(this.userUrl + 'resetpassword/' + token, options);\n  }\n\n  resetPassword(user: any): Observable<any>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.put<any>(this.userUrl + 'savenewpassword/', user, options);\n  }\n\n  renewLoginToken(email: any): Observable<any>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.get<any>(this.userUrl + 'renewToken/' + email, options);\n  }\n\n  get(): Observable<any>{\n    // const url = 'http://localhost:4000/auth/';\n    const url = '/api/auth/';\n    return this.http.get<any>(url);\n  }\n\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ManagementService } from '../admin/management.service';\nimport { CartStore } from '../services/cart.store';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  sess: any;\n  logoutPressed = false;\n  permission = false;\n\n  datasaved = false;\n  totalQtyCart: Number;\n\n  constructor(\n    private http: HttpClient, \n    private managementservice: ManagementService, \n    private cartstore: CartStore) { }\n\n  ngOnInit(): void {\n    this.permission = false;\n    this.userPermission();\n    setInterval(() => {\n      this.getCartTotalRecords();  \n    }, 3000);\n  }\n\n  ngAfterContentChecked(): void {\n    this.sess = localStorage.getItem(\"User\");\n    // this.getCartTotalRecords();\n  }\n\n  logout() {\n    this.logoutPressed = true;\n    // localStorage.removeItem(\"User\");\n    // this.sessionClear();\n  }\n\n  // userUrl = 'http://localhost:4000/auth/';\n  userUrl = '/api/auth/';\n  sessionClear(): void{\n    this.http.get(this.userUrl + 'logout/').subscribe(() => {\n    });\n  }\n\n  userPermission() {\n    this.managementservice.getPermission().toPromise().then(data => {\n      if(data.permission === 'admin' || data.permission === 'moderator') {\n        this.permission = true;\n      } else {\n        this.permission = false;\n      }\n    });\n  }\n\n  // getCartTotalRecords() {\n  //   const url = '/api/cart-total-records/';\n  //   this.http.get<any>(url).subscribe(data => {\n  //     // console.log(data);\n  //     this.datasaved = false;\n  //     this.totalQtyCart = 0;\n  //     if(data.success) {\n  //       this.datasaved = true;\n  //       this.totalQtyCart = data.totalRecords;\n  //     }\n  //     if (this.totalQtyCart === 0) {\n  //       this.datasaved = false;\n  //     }\n  //   });\n  // }\n\n  getCartTotalRecords() {\n    this.cartstore.cartTotalRecords$.subscribe(data => {\n      this.totalQtyCart = data;\n    });\n    if (this.totalQtyCart === 0) {\n      this.datasaved = false;\n    } else {\n      this.datasaved = true;\n    }\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary fixed-top\">\n    <a class=\"navbar-brand\" href=\"\">GAMERZONE</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\">\n          <a routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" class=\"nav-link\">Home <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item\">\n          <a routerLink=\"/pages/about\" routerLinkActive=\"active\" class=\"nav-link\">About Us</a>\n        </li>\n      </ul>\n\n      <ul class=\"navbar-nav mr-4\">\n        <li class=\"nav-item\" >\n          <a routerLink=\"/shoppingCart\" routerLinkActive=\"active\" class=\"nav-link\">\n            <i class=\"fas fa-shopping-cart\"></i> Shopping Cart\n            <span class=\"badge badge-pill badge-danger\" *ngIf=\"datasaved\">{{ totalQtyCart }}</span>\n          </a>\n        </li>\n        <li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbardrop\" data-toggle=\"dropdown\">\n            <i class=\"fas fa-user\"></i> User Management\n          </a>\n          <div class=\"dropdown-menu\">\n            <a class=\"dropdown-item\" routerLink=\"/login\" routerLinkActive=\"active\" *ngIf=\"!sess\">Login</a>\n            <a class=\"dropdown-item\" routerLink=\"/registration\" routerLinkActive=\"active\" *ngIf=\"!sess\">Register</a>\n            <a class=\"dropdown-item\" routerLink=\"/dashboard\" routerLinkActive=\"active\" *ngIf=\"sess\">Dashboard</a>\n            <a class=\"dropdown-item\" routerLink=\"/management\" routerLinkActive=\"active\" *ngIf=\"sess && permission\">Management</a>\n            <a class=\"dropdown-item\" style=\"cursor: pointer;\" (click)=\"logout()\" *ngIf=\"sess\">Logout</a>\n          </div>\n        </li>\n        <!-- <li class=\"nav-item\" *ngIf=\"!sess\">\n          <a routerLink=\"/login\" routerLinkActive=\"active\" class=\"nav-link\">Login</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"sess\">\n          <a routerLink=\"/dashboard\" routerLinkActive=\"active\" class=\"nav-link\">Dashboard</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"!sess\">\n          <a routerLink=\"/registration\" routerLinkActive=\"active\" class=\"nav-link\">Register</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"sess && permission\">\n          <a routerLink=\"/management\" routerLinkActive=\"active\" class=\"nav-link\">Management</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"sess\">\n          <a style=\"cursor: pointer;\" class=\"nav-link\" (click)=\"logout()\">Logout</a>\n        </li> -->\n      </ul>\n    </div>\n  </nav>\n  <app-check-session [childlogoutPressed]=\"logoutPressed\"></app-check-session>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n \nimport { StripeService, Elements, Element as StripeElement, ElementsOptions } from \"ngx-stripe\";\nimport { ProductsService } from '../products.service';\nimport { Router } from '@angular/router';\nimport { CartStore } from 'src/app/services/cart.store';\nimport { Observable } from 'rxjs';\nimport { async } from '@angular/core/testing';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n\n  elements: Elements;\n  card: StripeElement;\n\n  // products: [];\n  // totalPrice: Number;\n  products: Observable<[]>;\n  totalPrice: Observable<Number>;\n  \n  datasaved = false;\n  message = '';\n  paymentDisabled = false;\n\n  // optional parameters\n  elementsOptions: ElementsOptions = {\n    locale: 'auto'\n  };\n \n  stripeTest: FormGroup;\n \n  constructor(\n    private router: Router,\n    private productservice: ProductsService,\n    private fb: FormBuilder,\n    private stripeService: StripeService,\n    private cartstore: CartStore) {}\n \n  ngOnInit() {\n    this.paymentDisabled = false;\n    this.datasaved = false;\n    this.message = '';\n    this.getShoppingCart();\n    this.stripeTest = this.fb.group({\n      name: ['', [Validators.required]],\n      address: ['', [Validators.required]],\n      cardholdername: ['', [Validators.required]]\n    });\n    this.stripeService.elements(this.elementsOptions)\n      .subscribe(elements => {\n        this.elements = elements;\n        // Only mount the element the first time\n        if (!this.card) {\n          this.card = this.elements.create('card', {\n            style: {\n              base: {\n                iconColor: '#666EE8',\n                color: '#000000',\n                fontWeight: 600,\n                fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n                fontSize: '18px',\n                fontSmoothing: 'antialiased',\n                '::placeholder': {\n                  color: '#ffffff',\n                  fontWeight: 600,\n                },\n              }\n            }\n          });\n          this.card.mount('#card-element');\n        }\n      });\n  }\n \n  buy() {\n    const name = this.stripeTest.get('name').value;\n    this.stripeService\n      .createToken(this.card, { name })\n      .subscribe(result => {\n        if (result.token) {\n          // Use the token to create a charge or a customer\n          // https://stripe.com/docs/charges\n          // console.log(result.token);\n          let address = this.stripeTest.get('address').value;\n          let name = this.stripeTest.get('name').value;\n          this.productservice.payment(result.token.id, address, name).subscribe(data => {\n              // console.log(data);\n              this.datasaved = true;\n              this.message = data.message;\n              if (data.error === 'redirect') {\n                setTimeout(() => {\n                  this.router.navigate(['/']);  \n                }, 3000);\n              }\n              if (data.success) {\n                this.paymentDisabled = true;\n                this.stripeTest.reset();\n                setTimeout(() => {\n                  // this.router.navigate(['/']);  \n                  this.cartstore.shoppingCart();\n                  this.getShoppingCart();\n                }, 3000);\n              }\n\n              setTimeout(() => {\n                this.datasaved = false;\n              }, 3000);\n          });\n        } else if (result.error) {\n          // Error creating the token\n          // console.log(result.error.message);\n          this.datasaved = true;\n          this.message = result.error.message\n          setTimeout(() => {\n            this.datasaved = false;\n          }, 3000);\n        }\n      });\n  }\n\n  // getShoppingCart() {\n  //   this.productservice.shoppingCart().subscribe(data => {\n  //     // console.log(data);\n  //     if (data.success) {\n  //       this.products = data.products;\n  //       this.totalPrice = data.totalPrice;\n  //     } else {\n  //       this.router.navigate(['/']);\n  //     }\n  //   });\n  // }\n\n  getShoppingCart() {\n    // this.products = this.cartstore.cartProducts$;\n    // this.totalPrice = this.cartstore.cartTotalPrice$;\n    this.cartstore.cartEmpty$.subscribe(\n      empty => {\n        if (!empty) {\n          this.products = this.cartstore.cartProducts$;\n          this.totalPrice = this.cartstore.cartTotalPrice$;\n        } else {\n          this.router.navigate(['/']);\n        }\n      }\n    );\n\n  }\n\n}","<div class=\"container-fluid w-75 mt-5\">\n    <br><br>\n    <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }}<br></div>\n    <div class=\"p-3\" style=\"background-color: lightgrey;\">\n        <form novalidate (ngSubmit)=\"buy()\" [formGroup]=\"stripeTest\">\n            <h1 class=\"text-center\">Checkout</h1>\n            <hr>\n            <div class=\"form-group row px-3\">\n                <label for=\"name\" class=\"col-sm-3\">Name: </label>\n                <input type=\"text\" class=\"form-control col-sm-9\" placeholder=\"Name\" formControlName=\"name\" id=\"name\">\n                <span class=\"font-italic\" *ngIf = \"stripeTest.controls['name'].touched && stripeTest.controls['name'].hasError('required')\">Name is required</span>\n            </div>\n\n            <div class=\"form-group row px-3\">\n                <label for=\"address\" class=\"col-sm-3\">Address: </label>\n                <input type=\"text\" class=\"form-control col-sm-9\" placeholder=\"Address\" formControlName=\"address\" id=\"address\">\n                <span class=\"font-italic\" *ngIf = \"stripeTest.controls['address'].touched && stripeTest.controls['address'].hasError('required')\">Address is required</span>\n            </div>\n\n            <div class=\"form-group row px-3 mb-3\">\n                <label for=\"cardholdername\" class=\"col-sm-3\">Card Holder Name: </label>\n                <input type=\"text\" class=\"form-control col-sm-9\" placeholder=\"Card Holder Name\" formControlName=\"cardholdername\" id=\"cardholdername\">\n                <span class=\"font-italic\" *ngIf = \"stripeTest.controls['cardholdername'].touched && stripeTest.controls['cardholdername'].hasError('required')\">Card Holder Name is required</span>\n            </div>\n            <hr>\n        \n            <div id=\"card-element\" class=\"field px-3 mb-3\"></div>\n            <hr>\n\n            <button type=\"submit\" class=\"btn btn-warning mt-3\" [disabled]=\"stripeTest.invalid || paymentDisabled\">\n            Pay ${{ totalPrice | async }}\n            </button>\n        </form>\n    </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggedGuard implements CanActivate {\n  \n  constructor(private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if(localStorage.getItem(\"User\")){\n        return true;\n    } else {\n        this.router.navigate(['login']);\n        return false;\n    }\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from '../products.service';\nimport { ProductsStore } from 'src/app/services/products.store';\nimport { Observable } from 'rxjs';\nimport { CartStore } from 'src/app/services/cart.store';\n\n@Component({\n  selector: 'app-products-list',\n  templateUrl: './products-list.component.html',\n  styleUrls: ['./products-list.component.css']\n})\nexport class ProductsListComponent implements OnInit {\n\n  products: [];\n  allProducts$: Observable<[]>;\n  datasaved = false;\n  message = '';\n\n  constructor(\n    private productservice: ProductsService, \n    private productstore: ProductsStore,\n    private cartstore: CartStore) { }\n\n  ngOnInit(): void {\n    this.datasaved = false;\n    this.message = '';\n    this.allProducts$ = this.productstore.products$;\n  }\n\n  // getAllProducts() {\n  //   this.productservice.getProducts().subscribe(data => {\n  //     // console.log(data);\n  //     if (data.success) {\n  //       this.datasaved = true;\n  //       this.message = data.message;\n  //       this.products = data.products;\n  //     }\n  //   });\n  // }\n\n  addToCart(productId) {\n    // this.productservice.addItemToCart(productId).subscribe(data => {\n    //   // console.log(data);\n    // });\n    this.cartstore.addItemToCart(productId).subscribe(data => {\n      // console.log(data);\n      // console.log(data.cart.totalQty);\n      this.cartstore.shoppingCart();\n    });\n  }\n\n}\n","<div class=\"container-fluid pt-5 px-5\">\n    <br><br>\n    <div class=\"row\">\n        <div class=\"col-md-4 col-sm-6 mb-5\" *ngFor=\"let product of allProducts$ | async; let i = index\" >\n            <div class=\"card\">\n                <div class=\"card-header p-0\">\n                    <img src=\"http://localhost:4000/uploads/{{ product.image }}\" alt=\"{{ product.image }}\" class=\"w-100 img-fluid img-thumbnail\">      \n                </div>\n                <div class=\"card-body\">\n                    <h3>{{ product.title }}</h3>\n                    <p class=\"text-muted text-justify\">{{ product.short_descrip }}</p>\n                </div>\n                <div class=\"card-footer\">\n                    <h3>${{ product.price }}</h3>\n                    <button type=\"button\" class=\"btn\" (click)=\"addToCart(product._id)\">Add to Cart</button>\n                </div>\n            </div>\n        </div>\n        \n    </div>\n\n</div>\n<br>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductsListComponent } from './products-list/products-list.component';\nimport { ShoppingCartComponent } from './shopping-cart/shopping-cart.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport { LoggedGuard } from './logged.guard';\n\n\nconst routes: Routes = [\n  {path: 'products', component: ProductsListComponent },\n  {path: 'shoppingCart', component: ShoppingCartComponent },\n  {path: 'checkout', component: CheckoutComponent, canActivate: [LoggedGuard]},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProductsRoutingModule } from './products-routing.module';\nimport { ProductsListComponent } from './products-list/products-list.component';\nimport { ProductsService } from './products.service';\nimport { ShoppingCartComponent } from './shopping-cart/shopping-cart.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxStripeModule } from 'ngx-stripe';\nimport { LoggedGuard } from './logged.guard';\nimport { ProductsStore } from '../services/products.store';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CartStore } from '../services/cart.store';\n\n@NgModule({\n  declarations: [ProductsListComponent, ShoppingCartComponent, CheckoutComponent ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxStripeModule.forRoot('pk_test_WjoZqJPM8rCYZ8mNzst6ZaTr00r88kew2O'),\n    ProductsRoutingModule\n  ],\n  providers: [ProductsService, LoggedGuard, ProductsStore, CartStore]\n})\nexport class ProductsModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor(private http: HttpClient) { }\n\n  // getProducts(): Observable<any>{\n  //   const productUrl = '/api/products/';\n  //   return this.http.get<any>(productUrl);\n  // }\n\n  // addItemToCart(id): Observable<any>{\n  //   const url = '/api/add-to-cart/';\n  //   return this.http.get<any>(url + id);\n  // }\n\n  reduceByOne(id): Observable<any>{\n    const url = '/api/reduce/';\n    return this.http.get<any>(url + id);\n  }\n\n  removeProduct(id): Observable<any>{\n    const url = '/api/remove/';\n    return this.http.get<any>(url + id);\n  }\n\n  // shoppingCart(): Observable<any>{\n  //   const url = '/api/shopping-cart/';\n  //   return this.http.get<any>(url);\n  // }\n\n  checkout(): Observable<any>{\n    const url = '/api/checkout/';\n    return this.http.get<any>(url);\n  }\n\n  payment(id, address, name): Observable<any>{\n    const url = '/api/order/';\n    return this.http.post<any>(url, {stripeToken: id, address: address, name: name});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from '../products.service';\nimport { Router } from '@angular/router';\nimport { CartStore } from 'src/app/services/cart.store';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit {\n\n  // products: [];\n  // totalPrice: Number;\n  products: Observable<[]>;\n  totalPrice: Observable<Number>;\n  cartsaved = false;\n\n  constructor(\n    private productservice: ProductsService, \n    private router: Router,\n    private cartstore: CartStore) { }\n\n  ngOnInit(): void {\n    this.cartsaved = false;\n    this.getShoppingCart();\n  }\n\n  // getShoppingCart() {\n  //   this.productservice.shoppingCart().subscribe(data => {\n  //     // console.log(data);\n  //     if (data.success) {\n  //       this.products = data.products;\n  //       this.totalPrice = data.totalPrice;\n  //       this.cartsaved = true;\n  //       if (this.totalPrice === 0) {\n  //         this.cartsaved = false;\n  //       }\n  //     }\n  //   });\n  // }\n\n  getShoppingCart() {\n    this.products = this.cartstore.cartProducts$;\n    this.totalPrice = this.cartstore.cartTotalPrice$;\n    // this.cartstore.cartProducts$.subscribe(data => {\n    //   this.products = data;\n    // });\n\n    // this.cartstore.cartTotalPrice$.subscribe(data => {\n    //   this.totalPrice = data;\n    // });\n    // this.cartsaved = true;\n    // if (this.totalPrice === 0) {\n    //   this.cartsaved = false;\n    // }\n\n  }\n\n  checkout() {\n    this.productservice.checkout().subscribe(data => {\n      if (data.success) {\n        this.router.navigate(['/checkout']);\n      }\n    });\n  }\n\n  reduce(id) {\n    this.productservice.reduceByOne(id).subscribe(data => {\n      if (data.success) {\n        this.cartstore.shoppingCart();\n        this.getShoppingCart();\n      }\n    });\n  }\n\n  remove(id) {\n    this.productservice.removeProduct(id).subscribe(data => {\n      if (data.success) {\n        this.cartstore.shoppingCart();\n        this.getShoppingCart();\n      }\n    });\n  }\n\n  trackByProductId(id: string, product: any) {\n    return product.item._id;\n  }\n\n}\n","<div class=\"container-fluid pt-5 w-75\" *ngIf=\"(totalPrice | async) !== 0\">\n    <br><br>\n    <div class=\"row\">\n        <ul class=\"list-group w-100\">\n            <li class=\"list-group-item d-flex align-items-center\" *ngFor=\"let product of (products | async); let i = index; trackBy: trackByProductId\">\n                <strong>{{ product.item.title }}</strong>\n                <span class=\"badge badge-success mx-2\">${{ product.price }}</span>\n                <div class=\"btn-group\">\n                    <button type=\"button\" class=\"btn btn-sm btn-primary dropdown-toggle\" data-toggle=\"dropdown\">\n                        Action\n                    </button>\n                    <div class=\"dropdown-menu\">\n                        <a class=\"dropdown-item\" (click)=\"reduce(product.item._id)\">Reduce by 1</a>\n                        <a class=\"dropdown-item\" (click)=\"remove(product.item._id)\">Remove All</a>\n                    </div>\n                </div>\n                <span class=\"badge badge-primary badge-pill ml-auto\">{{ product.qty }}</span>\n            </li>\n        </ul>\n    </div>\n    <br><br>\n    <div class=\"row\">\n        <strong>Total: ${{ totalPrice | async }}</strong>\n    </div>\n    <hr>\n\n    <div class=\"row\">\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"checkout()\">CheckOut</button>\n    </div>\n</div>\n\n<div class=\"container-fluid pt-5 w-50\" *ngIf=\"(totalPrice | async) === 0\">\n    <br><br>\n    <div class=\"row\">\n        <h2>No Item in Cart</h2>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map, tap, shareReplay, delay, distinctUntilChanged, auditTime, debounceTime } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartStore {\n    private subjectTotalRecords = new BehaviorSubject<Number>(0);\n    cartTotalRecords$ : Observable<Number> = this.subjectTotalRecords.asObservable();\n\n    private subjectCartProducts = new BehaviorSubject<[]>([]);\n    cartProducts$ : Observable<[]> = this.subjectCartProducts.asObservable();\n\n    private subjectTotalPrice = new BehaviorSubject<Number>(0);\n    cartTotalPrice$ : Observable<Number> = this.subjectTotalPrice.asObservable();\n\n    private subjectCartEmpty = new BehaviorSubject<Boolean>(false);\n    cartEmpty$ : Observable<Boolean> = this.subjectCartEmpty.asObservable();\n\n    constructor( private http: HttpClient ) {\n        this.shoppingCart();\n    }\n\n    shoppingCart(){\n        const url = '/api/shopping-cart/';\n        const shoppingcart$ =  this.http.get<any>(url)\n        .pipe(\n            map(response => response),\n            catchError(err => {\n                const messsage = \"Could not load cart\";\n                console.log(messsage, err);\n                this.subjectTotalRecords.next(0);\n                this.subjectCartProducts.next([]);\n                this.subjectTotalPrice.next(0);\n                this.subjectCartEmpty.next(true);\n                return throwError(err);\n            }),\n            tap(response => {\n                if (response[\"success\"]) {\n                    this.subjectTotalRecords.next(response[\"totalRecords\"]);\n                    this.subjectCartProducts.next(response[\"products\"]);\n                    this.subjectTotalPrice.next(response[\"totalPrice\"]);\n                    this.subjectCartEmpty.next(false);\n                } else {\n                    this.subjectTotalRecords.next(0);\n                    this.subjectCartProducts.next([]);\n                    this.subjectTotalPrice.next(0);\n                    this.subjectCartEmpty.next(true);\n                }\n                \n            }),\n            shareReplay()\n        );\n        shoppingcart$.subscribe();\n    }\n\n    addItemToCart(id): Observable<any>{\n        const url = '/api/add-to-cart/';\n        return this.http.get<any>(url + id)\n        .pipe(\n            map(response => response),\n            tap(response => this.subjectTotalRecords.next(response.cart.totalQty)),\n            shareReplay()\n        );\n    }\n\n\n    \n}","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map, tap, shareReplay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsStore {\n    private subject = new BehaviorSubject<[]>([]);\n\n    products$ : Observable<[]> = this.subject.asObservable();\n\n    constructor(\n        private http: HttpClient\n    ) {\n        this.getAllProducts();\n    }\n\n    private getAllProducts() {\n        const productUrl = '/api/products/';\n        const loadProducts$ = this.http.get<[]>(productUrl)\n            .pipe(\n                map(response => response[\"products\"]),\n                catchError(err => {\n                    const messsage = \"Could not load products\";\n                    console.log(messsage, err);\n                    return throwError(err);\n                }),\n                tap(products => this.subject.next(products)),\n                shareReplay()\n            );\n        loadProducts$.subscribe(); \n    }\n\n    // loadAllProducts(): Observable<[]> {\n    //     // return this.products$.pipe(\n    //     //     map(products => products)\n    //     // );\n    //     return this.subject.asObservable();\n    // }\n\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.css']\n})\nexport class AboutUsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <br><br><br>\n    <img src=\"../../../assets/Images/aboutus.jpg\" alt=\"About Us\" class=\"w-100 img-fluid\">\n</div>\n<br>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AboutUsComponent } from './about-us/about-us.component';\n\n\nconst routes: Routes = [\n  {path: 'pages/:id', component: AboutUsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StaticPagesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StaticPagesRoutingModule } from './static-pages-routing.module';\nimport { AboutUsComponent } from './about-us/about-us.component';\n\n\n@NgModule({\n  declarations: [AboutUsComponent],\n  imports: [\n    CommonModule,\n    StaticPagesRoutingModule\n  ]\n})\nexport class StaticPagesModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}