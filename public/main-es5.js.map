{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin-routing.module.ts","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/auth.interceptor.ts","webpack:///src/app/admin/edit-user/edit-user.component.ts","webpack:///src/app/admin/edit-user/edit-user.component.html","webpack:///src/app/admin/management.service.ts","webpack:///src/app/admin/management/management.component.ts","webpack:///src/app/admin/management/management.component.html","webpack:///src/app/admin/permission.guard.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/activation/activation.component.ts","webpack:///src/app/auth/activation/activation.component.html","webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/check-session/check-session.component.ts","webpack:///src/app/auth/check-session/check-session.component.html","webpack:///src/app/auth/dashboard/dashboard.component.ts","webpack:///src/app/auth/dashboard/dashboard.component.html","webpack:///src/app/auth/forgot-password/forgot-password.component.ts","webpack:///src/app/auth/forgot-password/forgot-password.component.html","webpack:///src/app/auth/forgot-username/forgot-username.component.ts","webpack:///src/app/auth/forgot-username/forgot-username.component.html","webpack:///src/app/auth/logged.guard.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/new-password/new-password.component.ts","webpack:///src/app/auth/new-password/new-password.component.html","webpack:///src/app/auth/not-logged.guard.ts","webpack:///src/app/auth/registration/registration.component.html","webpack:///src/app/auth/registration/registration.component.ts","webpack:///src/app/auth/resend-activation-link/resend-activation-link.component.ts","webpack:///src/app/auth/resend-activation-link/resend-activation-link.component.html","webpack:///src/app/auth/social-error/social-error.component.ts","webpack:///src/app/auth/social-error/social-error.component.html","webpack:///src/app/auth/social/social.component.ts","webpack:///src/app/auth/social/social.component.html","webpack:///src/app/auth/user.service.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/products/checkout/checkout.component.ts","webpack:///src/app/products/checkout/checkout.component.html","webpack:///src/app/products/logged.guard.ts","webpack:///src/app/products/products-list/products-list.component.ts","webpack:///src/app/products/products-list/products-list.component.html","webpack:///src/app/products/products-routing.module.ts","webpack:///src/app/products/products.module.ts","webpack:///src/app/products/products.service.ts","webpack:///src/app/products/shopping-cart/shopping-cart.component.ts","webpack:///src/app/products/shopping-cart/shopping-cart.component.html","webpack:///src/app/services/cart.store.ts","webpack:///src/app/services/products.store.ts","webpack:///src/app/static-pages/about-us/about-us.component.ts","webpack:///src/app/static-pages/about-us/about-us.component.html","webpack:///src/app/static-pages/static-pages-routing.module.ts","webpack:///src/app/static-pages/static-pages.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AdminRoutingModule","forChild","imports","AdminModule","provide","useClass","multi","declarations","providers","AuthInterceptor","next","idToken","localStorage","getItem","cloned","clone","headers","set","handle","EditUserComponent","formbuilder","managementservice","route","datasaved","message","currPermission","getUser","snapshot","params","getManagerPermission","setFormState","getPermission","subscribe","data","managementPermission","permission","editForm","group","name","compose","required","pattern","username","email","success","user","patchValue","newPermission","value","updateUser","setTimeout","window","location","reload","updatePermission","updatedata","selector","templateUrl","styleUrls","ManagementService","http","url","get","put","providedIn","ManagementComponent","accessDenied","editAccess","deleteAccess","getUsers","getAllUsers","users","limitEntered","limit","undefined","deleteUser","console","log","showLimited","showAll","PermissionGuard","router","state","toPromise","alert","navigate","redirectTo","pathMatch","AppRoutingModule","forRoot","AppComponent","title","AppModule","bootstrap","ActivationComponent","userservice","token","activateAccount","AuthRoutingModule","AuthModule","withOptions","cookieName","headerName","CheckSessionComponent","hideButtons","userUrl","childlogoutPressed","showModal","inter","setInterval","clearInterval","jwtToTimestamp","base64Url","split","base64","replace","JSON","parse","atob","expireTime","timeStamp","Math","floor","Date","now","timeCheck","exp","option","choiceMade","modalHeader","modalBody","$","modal","backdrop","choiceMade2","endSession","hideModal","removeItem","sessionClear","getLoggedUser","renewLoginToken","result","setItem","stringify","DashboardComponent","orders","items","Object","map","key","ForgotPasswordComponent","submitDisabled","userForm","sendPassLink","sendPasswordLink","submitData","ForgotUsernameComponent","controls","reset","resetUsername","LoggedGuard","LoginComponent","captchaPassed","resendButton","loginDisabled","loginForm","password","recaptchaReactive","_csrf","csrfToken","login","loginUser","expired","captchaResponse","sendCaptchaTokenToBackend","tok","sendCaptchaToken","err","resolved","filldata","NewPasswordComponent","show","showForm","resetDisabled","getResetPasswordProfile","resetForm","confirmPassword","validator","passwordMatchValidator","frm","getResetPassProfile","resetPass","resetPassword","NotLoggedGuard","RegistrationComponent","registerDisabled","regForm","createNewUser","createUser","revealPass","postdata","ResendActivationLinkComponent","credentialsCheck","emailAfterCheck","resendForm","resend","resendActivationLink","resendActivationLink2","SocialErrorComponent","SocialComponent","UserService","getUserUrl","backendUrl","httpheader","options","post","recaptcha","HeaderComponent","cartstore","logoutPressed","userPermission","getCartTotalRecords","sess","cartTotalRecords$","totalQtyCart","CheckoutComponent","productservice","fb","stripeService","paymentDisabled","elementsOptions","locale","getShoppingCart","stripeTest","address","cardholdername","elements","card","create","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","mount","createToken","payment","error","shoppingCart","cartEmpty$","empty","products","cartProducts$","totalPrice","cartTotalPrice$","buy","ProductsListComponent","productstore","allProducts$","products$","productId","addItemToCart","ProductsRoutingModule","ProductsModule","ProductsService","stripeToken","ShoppingCartComponent","cartsaved","checkout","reduceByOne","removeProduct","product","item","_id","CartStore","subjectTotalRecords","asObservable","subjectCartProducts","subjectTotalPrice","subjectCartEmpty","shoppingcart$","pipe","response","messsage","cart","totalQty","ProductsStore","subject","getAllProducts","productUrl","loadProducts$","AboutUsComponent","StaticPagesRoutingModule","StaticPagesModule","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ManagementComponent } from './management/management.component';\nimport { PermissionGuard } from './permission.guard';\nimport { EditUserComponent } from './edit-user/edit-user.component';\n\n\nconst routes: Routes = [\n  {path: 'management', component: ManagementComponent, canActivate: [PermissionGuard]},\n  {path: 'edit/:id', component: EditUserComponent, canActivate: [PermissionGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { ManagementComponent } from './management/management.component';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { ManagementService } from './management.service';\nimport { PermissionGuard } from './permission.guard';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EditUserComponent } from './edit-user/edit-user.component';\n\n\n@NgModule({\n  declarations: [ManagementComponent, EditUserComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AdminRoutingModule\n  ],\n  providers: [ManagementService, PermissionGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ]\n})\nexport class AdminModule { }\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    intercept(  req: HttpRequest<any>, \n                next: HttpHandler): Observable<HttpEvent<any>> {\n                    \n        const idToken = localStorage.getItem(\"User\");\n        if (idToken) {\n            const cloned = req.clone({\n                headers: req.headers.set(\"authorization\", \n                \"Bearer \" + idToken)\n            });\n            return next.handle(cloned);\n        } else {\n            return next.handle(req);\n        }\n    }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ManagementService } from '../management.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n\n  datasaved: boolean = false;\n  message: string = '';\n  editForm: FormGroup;\n  currPermission = '';\n  managementPermission: string;\n\n  constructor(private formbuilder: FormBuilder, private managementservice: ManagementService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    \n    this.datasaved = false;\n    this.message = '';\n    // console.log(this.route.snapshot.params.id);\n    this.getUser(this.route.snapshot.params.id);\n    this.getManagerPermission();\n    this.setFormState();\n  }\n\n  getManagerPermission() {\n    this.managementservice.getPermission().subscribe(data => {\n      this.managementPermission = data.permission;\n    });\n  }\n\n  setFormState():void {\n    this.editForm = this.formbuilder.group({\n      name: [null, Validators.compose([Validators.required, Validators.pattern(/^[a-z\\. ]{1,50}$/i)])],\n      username: [null, Validators.compose([Validators.required, Validators.pattern(/^[a-z\\d]{5,12}$/i)])],\n      email: [null, Validators.compose([Validators.required, Validators.email, Validators.pattern(/^([a-z\\d\\.-]{1,20})@([a-z\\d-]{1,20})\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/i)])],\n      permission: [this.currPermission, Validators.compose([Validators.required, Validators.pattern(/^(user)|(moderator)|(admin)$/)])]\n    });\n  }\n\n  getUser(id) {\n    this.managementservice.getUser(id).subscribe(data => {\n      // console.log(data);\n      if(data.success) {\n        this.currPermission = data.user.permission;\n        this.editForm.patchValue({\n          name: data.user.name,\n          username: data.user.username,\n          email: data.user.email,\n          permission: data.user.permission\n        });\n      } else {\n        this.datasaved = true;\n        this.message = data.message;\n      }\n    });\n  }\n\n  updatePermission(newPermission) {\n    // this.currPermission = newPermission;\n    this.editForm.patchValue({\n      permission: newPermission\n    });\n  }\n\n  updatedata() {\n    let user = this.editForm.value;\n    // console.log(user);\n\n    this.datasaved = false;\n    this.message = '';\n    this.updateUser(user, this.route.snapshot.params.id);\n  }\n\n  updateUser(user, id) {\n    this.managementservice.updateUser(user, id).subscribe(data => {\n      // console.log(data);\n      this.datasaved = true;\n      this.message = data.message;\n      setTimeout(() => {\n        this.datasaved = false;\n        this.message = '';\n      }, 3000);\n      if(data.success) {\n        window.location.reload();  \n      }\n    });\n  }\n\n}\n","<div class=\"container-fluid mt-5\">\n    <div id=\"edit\">\n      <h2>Edit User</h2><br>\n    \n      <form [formGroup]='editForm'>\n        <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }}</div>\n  \n        <div class=\"form-group row\">\n          <label for=\"name\" class=\"col-sm-3\">Name: * </label>\n          <input type=\"text\" class=\"form-control col-sm-9\" placeholder=\"Name\" formControlName=\"name\" id=\"name\">\n          <span class=\"font-italic\" *ngIf = \"editForm.controls['name'].touched && editForm.controls['name'].hasError('required')\">Name is required</span>\n          <span class=\"font-italic\" *ngIf = \"editForm.controls['name'].hasError('pattern')\">Name must be alphabets (. and space are also allowed) and must be maximum 50 characters long</span>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"username\" class=\"col-sm-3\">Username: * </label>\n          <input type=\"text\" class=\"form-control col-sm-9\" placeholder=\"Username\" formControlName=\"username\" id=\"username\">\n          <span class=\"font-italic\" *ngIf = \"editForm.controls['username'].touched && editForm.controls['username'].hasError('required')\">Username is required</span>\n          <span class=\"font-italic\" *ngIf = \"editForm.controls['username'].hasError('pattern')\">Username must be alphanumeric and contain 5 - 12 characters</span>\n        </div>\n    \n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-sm-3\">Email ID: * </label>\n          <input type=\"email\" class=\"form-control col-sm-9\" placeholder=\"Email ID\" formControlName=\"email\" id=\"email\">\n          <span class=\"font-italic\" *ngIf = \"editForm.controls['email'].touched && editForm.controls['email'].hasError('required')\">Email address is required</span>\n          <span class=\"font-italic\" *ngIf = \"editForm.controls['email'].hasError('pattern')\">Please enter a valid email address, e.g. me@mydomain.com</span>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"permission\" class=\"col-sm-3 mb-0 pb-0\">Permission: * </label>\n          <div class=\"btn-group col-sm-9 m-0 p-0\">\n            <button type=\"button\" class=\"form-control btn btn-outline-primary mb-0\" id=\"permission\" [class.active]=\"currPermission == 'user'\" (click)=\"updatePermission('user')\">User</button>\n            <button type=\"button\" class=\"form-control btn btn-outline-primary mb-0\" id=\"permission\" [class.active]=\"currPermission == 'moderator'\" (click)=\"updatePermission('moderator')\">Moderator</button>\n            <button type=\"button\" class=\"form-control btn btn-outline-primary mb-0\" id=\"permission\" [class.active]=\"currPermission == 'admin'\" [class.disabled]=\"managementPermission == 'moderator'\" (click)=\"updatePermission('admin')\">Admin</button>\n          </div>\n          <span class=\"col-sm-3\"></span>\n          <span class=\"font-italic col-sm-9 m-0 p-0 text-primary\">Current Permission is {{currPermission}}</span>\n        </div>\n  \n        <div class=\"row\">\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"editForm.invalid\" (click)=\"updatedata()\">Update</button>\n            <button type=\"submit\" class=\"btn btn-secondary ml-3\" routerLink=\"/management\" routerLinkActive=\"active\" >Go Back</button>\n        </div>\n      </form>\n    </div>\n      <br>\n  </div>\n    ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManagementService {\n\n  constructor(private http: HttpClient) { }\n\n  getPermission(): Observable<any>{\n    // const url = 'http://localhost:4000/api/permission/';\n    const url = '/api/permission/';\n    return this.http.get<any>(url);\n  }\n\n  getAllUsers(): Observable<any>{\n    // const url = 'http://localhost:4000/api/management/';\n    const url = '/api/management/';\n    return this.http.get<any>(url);\n  }\n\n  deleteUser(username: string): Observable<any>{\n    // const url = 'http://localhost:4000/api/management/';\n    const url = '/api/management/';\n    return this.http.delete<any>(url + username);\n  }\n\n  getUser(id): Observable<any>{\n    // const url = 'http://localhost:4000/api/edit/';\n    const url = '/api/edit/';\n    return this.http.get<any>(url + id);\n  }\n\n  updateUser(user, id): Observable<any>{\n    // const url = 'http://localhost:4000/api/edit/';\n    const url = '/api/edit/';\n    return this.http.put<any>(url, { user: user, id: id });\n  }\n\n  get(): Observable<any>{\n    // const url = 'http://localhost:4000/auth/';\n    const url = '/api/auth/';\n    return this.http.get<any>(url);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ManagementService } from '../management.service';\n\n@Component({\n  selector: 'app-management',\n  templateUrl: './management.component.html',\n  styleUrls: ['./management.component.css']\n})\nexport class ManagementComponent implements OnInit {\n\n  users: [];\n  accessDenied = true;\n  datasaved = false;\n  message = '';\n  editAccess = false;\n  deleteAccess = false;\n  limitEntered: number;\n  limit: number;\n\n  constructor(private managementservice: ManagementService) { }\n  \n  ngOnInit(): void {\n    this.datasaved = false;\n    this.message = '';\n    this.editAccess = false;\n    this.deleteAccess = false;\n    this.getUsers();\n  }\n\n  getUsers() {\n    this.managementservice.getAllUsers().subscribe(data => {\n      // console.log(data);\n      if(data.success) {\n        if (data.permission === 'admin' || data.permission === 'moderator') {\n          this.users = data.users;\n          this.accessDenied = false;\n          if (data.permission === 'moderator') {\n            this.editAccess = true;\n          } else if (data.permission === 'admin') {\n            this.editAccess = true;\n            this.deleteAccess = true;\n          }\n        } else {\n          this.datasaved = true;\n          this.message = data.message;\n        }\n      } else {\n        this.datasaved = true;\n        this.message = data.message;\n      }\n    });\n  }\n\n  showLimited() {\n    this.datasaved = false;\n    this.message = '';\n    if (this.limitEntered > 0) {\n      this.limit = this.limitEntered;\n    } else {\n      this.datasaved = true;\n      this.message = 'Please enter a valid number';\n      this.limitEntered = null;\n    }\n  }\n\n  showAll() {\n    this.limit = undefined;\n    this.datasaved = false;\n    this.message = '';\n  }\n\n  deleteUser(username: string) {\n    this.managementservice.deleteUser(username).subscribe(data => {\n        console.log(data);\n        this.datasaved = true;\n        this.message = data.message;\n        if (data.success) {\n          this.getUsers();\n        }\n    });\n  }\n\n}\n","<div class=\"container-fluid mt-5\">\n    <h2>User Management</h2><br><br>\n\n    <div>\n      Results to display: \n      <input type=\"text\" [(ngModel)]='limitEntered'>\n      <button type=\"button\" class=\"btn btn-success ml-3\" (click)=\"showLimited()\">Apply Filter</button>\n      <button type=\"button\" class=\"btn btn-warning ml-3\" (click)=\"showAll()\">Show All</button>\n    </div><br>\n\n    <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }}</div>\n\n    <table class=\"table table-striped\">\n      <thead>\n        <tr class=\"bg-primary\">\n          <th colspan=\"5\"><h6 class=\"text-nowrap text-white\">User Management</h6></th>\n        </tr>\n        <tr>\n          <th>User #</th>\n          <th>Name</th>\n          <th>Username</th>\n          <th>Email</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor = \"let user of users | slice: 0: limit; let i = index;\">\n          <td>{{ i + 1 }}</td>\n          <td>{{ user.name }}</td>\n          <td>{{ user.username }}</td>\n          <td>{{ user.email }}</td>\n          <td>\n            <button type=\"button\" class=\"btn btn-primary\" *ngIf=\"editAccess\" routerLink=\"/edit/{{ user._id }}\" routerLinkActive=\"active\" >Edit</button>\n            <button type=\"button\" class=\"btn btn-danger ml-2\" *ngIf=\"deleteAccess\" (click)=\"deleteUser(user.username)\">Delete</button>\n          </td>\n          \n        </tr>\n      </tbody>\n    </table>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ManagementService } from './management.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PermissionGuard implements CanActivate {\n  \n  constructor(private router: Router, private managementservice: ManagementService) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot) {\n    if(localStorage.getItem(\"User\")){\n\n      return this.managementservice.getPermission().toPromise().then(data => {\n        if(data.permission === 'admin' || data.permission === 'moderator') {\n          return true;\n        } else {\n          alert('You do not have the permission to view this page, redirecting to Home');\n          this.router.navigate(['/']);\n          return false;\n        }\n      });\n    } else {\n        alert('You do not have the permission to view this page, redirecting to Home');\n        this.router.navigate(['/']);\n        return false;\n    }\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'products', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { ManagementService } from './admin/management.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Shopping Cart';\n\n  constructor(private managementservice: ManagementService) {}\n\n  ngOnInit(): void {\n    // this.managementservice.get().subscribe(() => {});\n  }\n}\n","<div>\n  <app-header></app-header>\n  <!-- <app-check-session></app-check-session> -->\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AuthModule } from './auth/auth.module';\nimport { StaticPagesModule } from './static-pages/static-pages.module';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\nimport { AdminModule } from './admin/admin.module';\nimport { ManagementService } from './admin/management.service';\nimport { ProductsModule } from './products/products.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AuthModule,\n    AdminModule,\n    ProductsModule,\n    StaticPagesModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  providers: [CookieService, ManagementService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html',\n  styleUrls: ['./activation.component.css']\n})\nexport class ActivationComponent implements OnInit {\n\n  message: String = '';\n  datasaved = false;\n\n  constructor(private route: ActivatedRoute, private userservice: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.datasaved = false;\n    console.log(this.route.snapshot.params.token);\n    this.userservice.activateAccount(this.route.snapshot.params.token).subscribe(\n      data =>{\n      // console.log(data);\n      this.message = data.message;\n      if (data.success) {\n        this.datasaved = true;\n        setTimeout(() => {\n          this.router.navigate(['login']);\n        }, 5000); \n      } \n\n    });\n    \n  }\n\n\n\n}\n","<div class=\"container-fluid mt-5\">\n    <h1>Account Activation</h1>\n    <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }} ....Redirecting to Login Page</div>\n    <div *ngIf=\"!datasaved\" class=\"alert alert-warning\">\n        {{ message }}\n        <button class=\"btn btn-warning ml-3\" routerLink=\"/resend\" routerLinkActive=\"active\" >Resend Activation Link</button>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SocialComponent } from './social/social.component';\nimport { ActivationComponent } from './activation/activation.component';\nimport { ResendActivationLinkComponent } from './resend-activation-link/resend-activation-link.component';\nimport { SocialErrorComponent } from './social-error/social-error.component';\nimport { ForgotUsernameComponent } from './forgot-username/forgot-username.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { NewPasswordComponent } from './new-password/new-password.component';\nimport { LoggedGuard } from './logged.guard';\nimport { NotLoggedGuard } from './not-logged.guard';\n\n\nconst routes: Routes = [\n  {path: 'registration', component: RegistrationComponent, canActivate: [NotLoggedGuard]},\n  {path: 'login', component: LoginComponent, canActivate: [NotLoggedGuard]},\n  {path: 'dashboard', component: DashboardComponent, canActivate: [LoggedGuard]},\n  {path: 'social/:token', component: SocialComponent, canActivate: [LoggedGuard]},\n  {path: 'activate/:token', component: ActivationComponent, canActivate: [NotLoggedGuard]},\n  {path: 'resend', component: ResendActivationLinkComponent, canActivate: [NotLoggedGuard]},\n  {path: 'social-error', component: SocialErrorComponent, canActivate: [NotLoggedGuard]},\n  {path: 'forgotusername', component: ForgotUsernameComponent, canActivate: [NotLoggedGuard]},\n  {path: 'forgotpassword', component: ForgotPasswordComponent, canActivate: [NotLoggedGuard]},\n  {path: 'reset/:token', component: NewPasswordComponent, canActivate: [NotLoggedGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    intercept(  req: HttpRequest<any>, \n                next: HttpHandler): Observable<HttpEvent<any>> {\n                    \n        const idToken = localStorage.getItem(\"User\");\n        if (idToken) {\n            const cloned = req.clone({\n                headers: req.headers.set(\"authorization\", \n                \"Bearer \" + idToken)\n            });\n            return next.handle(cloned);\n        } else {\n            return next.handle(req);\n        }\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS, HttpClientXsrfModule } from '@angular/common/http';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { UserService } from './user.service';\nimport { SocialComponent } from './social/social.component';\nimport { RecaptchaModule, RECAPTCHA_SETTINGS, RecaptchaSettings } from 'ng-recaptcha';\nimport { RecaptchaFormsModule } from 'ng-recaptcha';\nimport { ActivationComponent } from './activation/activation.component';\nimport { ResendActivationLinkComponent } from './resend-activation-link/resend-activation-link.component';\nimport { SocialErrorComponent } from './social-error/social-error.component';\nimport { ForgotUsernameComponent } from './forgot-username/forgot-username.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { NewPasswordComponent } from './new-password/new-password.component';\nimport { CheckSessionComponent } from './check-session/check-session.component';\nimport { LoggedGuard } from './logged.guard';\nimport { NotLoggedGuard } from './not-logged.guard';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { HttpXsrfInterceptor } from './http.interceptor';\n\n@NgModule({\n  declarations: [RegistrationComponent, LoginComponent, DashboardComponent, SocialComponent, ActivationComponent, ResendActivationLinkComponent, SocialErrorComponent, ForgotUsernameComponent, ForgotPasswordComponent, NewPasswordComponent, CheckSessionComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'XSRF-TOKEN',\n      headerName: 'X-XSRF-TOKEN',\n    }),\n    RecaptchaModule,\n    RecaptchaFormsModule,\n    AuthRoutingModule\n  ],\n  exports: [CheckSessionComponent],\n  providers: [UserService, LoggedGuard, NotLoggedGuard, \n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }]\n})\nexport class AuthModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { HttpClient } from '@angular/common/http';\n// import * as $ from \"jquery\";\ndeclare var $: any;\n\n@Component({\n  selector: 'app-check-session',\n  templateUrl: './check-session.component.html',\n  styleUrls: ['./check-session.component.css']\n})\nexport class CheckSessionComponent implements OnInit {\n\n  modalHeader: any;\n  modalBody: any;\n  choiceMade: boolean;\n  choiceMade2: boolean;\n  hideButtons: boolean = false;\n\n  @Input() childlogoutPressed: boolean;\n  constructor(private router: Router, private userservice: UserService, private http: HttpClient) { }\n\n  ngOnChanges(): void {\n    if (this.childlogoutPressed) {\n      this.showModal(2);\n    }\n  }\n\n  ngOnInit(): void {\n\n    this.userservice.get().toPromise().then(() => {\n    });\n\n    const inter = setInterval(() => {\n      let token = localStorage.getItem(\"User\");\n      if (token === null) {  \n        // console.log('test');\n        clearInterval(inter);\n      } else {\n        let jwtToTimestamp = function(token) {\n          let base64Url = token.split('.')[1];\n          let base64 = base64Url.replace('-', '+').replace('_', '/');\n          return JSON.parse(window.atob(base64));\n        };   \n        let expireTime = jwtToTimestamp(token);\n        let timeStamp = Math.floor(Date.now() / 1000);\n        let timeCheck = expireTime.exp - timeStamp;\n        // console.log(expireTime.exp);\n        // console.log(timeStamp);\n        // console.log('timecheck: ' + timeCheck);\n        if(timeCheck <= 25) {\n          console.log('Token will expire in 25 seconds');\n          this.showModal(1);\n          clearInterval(inter);\n        } else {\n          // console.log('Token not yet expired');\n        }\n      }\n      token = null;\n    }, 2000);\n    \n  }\n\n  showModal(option) {\n    this.hideButtons = false;\n    this.choiceMade = false;\n    this.modalHeader = undefined;\n    this.modalBody = undefined;\n\n    if (option === 1) {\n      this.hideButtons = true;\n      this.modalHeader = 'Timeout Warning';\n      this.modalBody = 'Your session will expire in 5 minutes. Would you like to renew your session?';\n      $(\"#myModal\").modal({backdrop: \"static\"});\n      setTimeout(() => {\n        if (!this.choiceMade && !this.choiceMade2) {\n        console.log('LOGGED OUT!!!');\n        // this.showModal(2);\n        this.endSession();\n        this.hideModal();\n        }\n      }, 10000);\n    } else if (option === 2) {\n      // logout portion    \n      this.modalHeader = 'Logging Out';\n      $(\"#myModal\").modal({backdrop: \"static\"});\n\n      localStorage.removeItem(\"User\");\n      this.sessionClear();\n\n      setTimeout(() => {\n        this.router.navigate(['login']);\n        if (!this.choiceMade) {\n          console.log('LOGGED OUT!!!');\n          this.hideModal();\n        }\n      }, 5000);\n    }\n    \n  };\n\n  // userUrl = 'http://localhost:4000/auth/';\n  userUrl = '/api/auth/';\n  sessionClear(): void{\n    this.http.get(this.userUrl + 'logout/').subscribe(() => {\n    });\n  }\n\n  hideModal() {\n    $(\"#myModal\").modal(\"hide\");\n  }\n\n  endSession() {\n    this.hideModal();\n    this.choiceMade2 = true;\n    console.log('Session has ended');\n    setTimeout(() => {\n      this.showModal(2);\n    }, 1000);\n  }\n\n  renewSession() {\n    this.choiceMade2 = true;\n    console.log('Session has renewed');\n    this.getUser();\n  }\n\n  \n  getUser(){\n    this.userservice.getLoggedUser().subscribe(\n      data =>{\n        console.log(data);\n        console.log(data.success);\n        if (data.success === false) {\n          localStorage.removeItem(\"User\");\n          this.router.navigate(['login']);\n        } else {\n          console.log(data.user.email);\n          this.userservice.renewLoginToken(data.user.email).subscribe(\n            result => {\n              if(result.success){\n                localStorage.setItem(\"User\", JSON.stringify(result.token));\n                this.router.navigate(['dashboard']);\n                setTimeout(() => {\n                  window.location.reload();\n                }, 1);\n              } else {\n                this.modalBody = result.message;\n              }\n            });\n        }\n    });\n  }\n\n\n}\n","<div class=\"container\">\n    <!-- Button to Open the Modal -->\n    <!-- <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal\">\n      Open modal\n    </button> -->\n  \n    <!-- The Modal -->\n    <div class=\"modal fade\" id=\"myModal\">\n      <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n        \n          <!-- Modal Header -->\n          <div class=\"modal-header\">\n            <h4 class=\"modal-title\">{{ modalHeader }}</h4>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"endSession()\">&times;</button>\n          </div>\n          \n          <!-- Modal body -->\n          <div class=\"modal-body\">\n            {{ modalBody }}\n            <div class=\"container anim\" *ngIf=\"!hideButtons\">\n                <div class=\"circle\"></div>\n                <div class=\"circle\"></div>\n                <div class=\"circle\"></div>\n            </div>\n          </div>\n          \n          <!-- Modal footer -->\n          <div class=\"modal-footer\" *ngIf=\"hideButtons\">\n            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"renewSession()\" *ngIf=\"hideButtons\">Yes</button>\n            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"endSession()\" *ngIf=\"hideButtons\">No</button>\n          </div>\n          \n        </div>\n      </div>\n    </div>\n    \n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  name: string;\n  orders: [];\n  constructor(private userservice: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.getUser();\n  }\n\n  getUser(){\n    this.userservice.getLoggedUser().subscribe(\n      data =>{\n        console.log(data);\n        // console.log(data.success);\n        if (data.success === false) {\n          localStorage.removeItem(\"User\");\n          this.router.navigate(['login']);\n        } else {\n          this.name = data.user.name;\n          this.orders = data.orders;\n        }\n    });\n  }\n\n  toArray(items: object) {\n    return Object.keys(items).map(key => items[key])\n  }\n\n}\n","<div class=\"container-fluid mt-5 w-75\">\n    <br><br>\n    <h2>Welcome to your profile, {{ name }}</h2>\n    <hr>\n\n    <h3><strong>My Orders</strong></h3>\n    <div class=\"row mx-0\" *ngFor=\"let order of orders; let i = index\">\n        <div class=\"card w-100 mb-4\">\n            <div class=\"card-header bg-secondary text-white\">Order # {{ i+1 }}</div>\n            <div class=\"card-body\">\n                <ul class=\"list-group w-100\" *ngFor=\"let product of toArray(order.cart.items)\">\n                    <li class=\"list-group-item d-flex align-items-center\" >\n                        <span>{{ product.item.title }} | {{ product.qty }} Units</span>\n                        <span class=\"badge badge-primary badge-pill ml-auto\">${{ product.price }}</span>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"card-footer\">\n                <strong>Total Price: ${{ order.cart.totalPrice }}</strong>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  submitDisabled = false;\n\n  datasaved: boolean = false;\n  message: string = '';\n  userForm: FormGroup;\n\n  constructor(private userservice: UserService, private formbuilder: FormBuilder, private router: Router) { }\n\n  ngOnInit(): void {\n    this.setFormState();\n  }\n\n  setFormState():void {\n    this.userForm = this.formbuilder.group({\n      email: [null, Validators.compose([Validators.required, Validators.email])]\n    });\n  }\n\n  submitData() {\n    let user = this.userForm.value;\n    console.log(user);\n    // console.log(this.userForm.controls['email'].value);\n\n    this.message = '';\n    this.sendPassLink(user);\n  }\n\n  sendPassLink(user: any){\n    this.userservice.sendPasswordLink(user).subscribe(\n      data =>{\n        console.log(data);\n        // console.log(data.message);\n        this.datasaved = true;\n        this.message = data.message;\n        this.submitDisabled = false;\n\n        if(data.success) {\n          this.submitDisabled = true;\n        } \n    });\n  }\n\n\n\n\n}\n","<div class=\"container-fluid mt-5\">\n    <div id=\"login\">\n      <h2>Forgot Password</h2><br>\n    \n      <form [formGroup]='userForm'>\n        <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }}</div>\n  \n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-sm-3\">Email ID: * </label>\n          <input type=\"email\" class=\"form-control col-sm-9\" placeholder=\"Email ID\" formControlName=\"email\" id=\"email\">\n          <span class=\"font-italic\" *ngIf = \"userForm.controls['email'].touched && userForm.controls['email'].hasError('required')\">Email address is required</span>\n          <span class=\"font-italic\" *ngIf = \"userForm.controls['email'].hasError('email')\">Please enter valid email address</span>\n        </div>\n\n        <div class=\"row\">\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"userForm.invalid || submitDisabled\" (click)=\"submitData()\">Submit</button>\n        </div>\n      </form>\n    </div>\n      <br>\n</div>\n    \n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot-username',\n  templateUrl: './forgot-username.component.html',\n  styleUrls: ['./forgot-username.component.css']\n})\nexport class ForgotUsernameComponent implements OnInit {\n\n  submitDisabled = false;\n\n  datasaved: boolean = false;\n  message: string = '';\n  userForm: FormGroup;\n\n  constructor(private userservice: UserService, private formbuilder: FormBuilder, private router: Router) { }\n\n  ngOnInit(): void {\n    this.setFormState();\n  }\n\n  setFormState():void {\n    this.userForm = this.formbuilder.group({\n      email: [null, Validators.compose([Validators.required, Validators.email])]\n    });\n  }\n\n  submitData() {\n    let user = this.userForm.value;\n    console.log(user);\n    console.log(this.userForm.controls['email'].value);\n\n    this.message = '';\n    this.reset(this.userForm.controls['email'].value);\n  }\n\n  reset(user: any){\n    this.userservice.resetUsername(user).subscribe(\n      data =>{\n        console.log(data);\n        // console.log(data.message);\n        this.datasaved = true;\n        this.message = data.message;\n        this.submitDisabled = false;\n\n        setTimeout(() => {\n          this.datasaved = false;\n        }, 3000);\n        \n        if(data.success) {\n          this.submitDisabled = true;\n        } \n    });\n  }\n\n\n\n\n}\n","<div class=\"container-fluid mt-5\">\n    <div id=\"login\">\n      <h2>Forgot Username</h2><br>\n    \n      <form [formGroup]='userForm'>\n        <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }}</div>\n  \n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-sm-3\">Email ID: * </label>\n          <input type=\"email\" class=\"form-control col-sm-9\" placeholder=\"Email ID\" formControlName=\"email\" id=\"email\">\n          <span class=\"font-italic\" *ngIf = \"userForm.controls['email'].touched && userForm.controls['email'].hasError('required')\">Email address is required</span>\n          <span class=\"font-italic\" *ngIf = \"userForm.controls['email'].hasError('email')\">Please enter valid email address</span>\n        </div>\n\n        <div class=\"row\">\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"userForm.invalid || submitDisabled\" (click)=\"submitData()\">Submit</button>\n        </div>\n      </form>\n    </div>\n      <br>\n  </div>\n    ","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggedGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if(localStorage.getItem(\"User\")){\n        return true;\n    } else {\n        alert('You do not have the permission to view this page, redirecting to Login');\n        this.router.navigate(['login']);\n        return false;\n    }\n  }\n  \n}\n","<div class=\"container-fluid mt-5\">\n    <div id=\"login\"><br>\n      <h2>User Login</h2><br>\n    \n      <form [formGroup]='loginForm'>\n        <div *ngIf=\"datasaved || resendButton\" class=\"alert alert-success\">\n          {{ message }}<br>\n          <button *ngIf=\"resendButton\" class=\"btn btn-success mt-2\" routerLink=\"/resend\" routerLinkActive=\"active\" >Resend Activation Link</button>\n        </div>\n  \n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-sm-3\">Email ID: * </label>\n          <input type=\"email\" class=\"form-control col-sm-9\" placeholder=\"Email ID\" formControlName=\"email\" id=\"email\">\n          <span class=\"font-italic\" *ngIf = \"loginForm.controls['email'].touched && loginForm.controls['email'].hasError('required')\">Email address is required</span>\n          <span class=\"font-italic\" *ngIf = \"loginForm.controls['email'].hasError('email')\">Please enter valid email address</span>\n        </div>\n  \n        <div class=\"form-group row mb-3\">\n          <label for=\"pass\" class=\"col-sm-3\">Password: * </label>\n          <input type=\"password\" class=\"form-control col-sm-9\" placeholder=\"Password\" formControlName=\"password\" id=\"pass\">\n        </div>\n\n        <div class=\"form-group row\">\n          <re-captcha (resolved)=\"resolved($event)\" formControlName=\"recaptchaReactive\" siteKey=\"6Lc2sPUUAAAAADhSYFaD9tFsYoBz8p77uxPfiUNj\"></re-captcha>\n        </div>\n\n        <!-- <input type=\"hidden\" name=\"_csrf\" formControlName=\"_csrf\" value=\"{{csrfToken}}\"> -->\n        \n        <div class=\"row\">\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"(loginForm.invalid && !captchaPassed) || loginDisabled\" (click)=\"submitData()\">Login</button>\n            <a href=\"http://localhost:4000/auth/google/\"><button type=\"button\" class=\"btn btn-danger ml-3\" [disabled]=\"loginForm.valid\">Google+</button></a>\n          <a href=\"http://localhost:4000/auth/github/\"><button type=\"button\" class=\"btn btn-dark ml-3\" [disabled]=\"loginForm.valid\">Github</button></a>\n        </div>\n        <div class=\"row mt-3\">\n          <button type=\"button\" class=\"btn btn-warning\" routerLink=\"/forgotusername\" routerLinkActive=\"active\" >Forgot Username</button>\n          <button type=\"button\" class=\"btn btn-info ml-3\" routerLink=\"/forgotpassword\" routerLinkActive=\"active\">Forgot Password</button>\n\n          <button type=\"button\" class=\"btn btn-info ml-3\" (click)=\"filldata()\">Fill data</button>\n          \n      </div>\n      \n      </form>\n      <br>\n      <div class=\"row\">\n        <p>Don't have an account? <a routerLink=\"/registration\" routerLinkActive=\"active\">Sign up instead!</a></p>\n      </div>\n    </div>\n      <br>\n  </div>\n    ","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  captchaPassed = false;\n  resendButton = false;\n  loginDisabled = false;\n\n  datasaved: boolean = false;\n  message: string = '';\n  loginForm: FormGroup;\n\n  csrfToken: any;\n\n  constructor(private userservice: UserService, private formbuilder: FormBuilder, private router: Router) { }\n\n  ngOnInit(): void {\n    this.setFormState();\n    this.captchaPassed = false;\n    // this.userservice.get().toPromise().then(data => {\n    //   this.csrfToken = data.csrfToken;\n    //   console.log(this.csrfToken);\n    //   this.setFormState();\n    // });\n  }\n\n  setFormState():void {\n    this.loginForm = this.formbuilder.group({\n      email: [null, Validators.compose([Validators.required, Validators.email])],\n      password: [null, Validators.required],\n      recaptchaReactive: [null, Validators.required],\n      _csrf: [this.csrfToken, Validators.required],\n    });\n  }\n\n  submitData() {\n    let user = this.loginForm.value;\n    // console.log(user);\n\n    this.message = '';\n    this.login(user);\n  }\n\n  login(user: User){\n    this.userservice.loginUser(user).toPromise().then(\n      data =>{\n        // console.log(data);\n        // console.log(data.message);\n        // console.log(data.token);\n        this.datasaved = true;\n        this.message = data.message;\n        setTimeout(() => {\n          this.datasaved = false;\n        }, 3000);\n        // this.loginForm.reset();\n        if(data.token){\n          this.loginForm.reset();\n          localStorage.setItem(\"User\", JSON.stringify(data.token));\n          if (data.message === 'Auth successful... Redirecting to Checkout') {\n            this.router.navigate(['checkout']);\n          } else {\n            this.router.navigate(['dashboard']);\n          }\n          setTimeout(() => {\n            window.location.reload();  \n          }, 1);\n        }\n\n        this.resendButton = false;\n        if(data.expired) {\n          this.loginDisabled = true;\n          this.resendButton = true;\n          setTimeout(() => {\n            this.resendButton = false;\n          }, 10000);\n        } else {\n          this.loginDisabled = false;\n        }\n    });\n  }\n\n  //function to resolve the reCaptcha and retrieve a token\n  async resolved(captchaResponse: string) {\n    // console.log(`Resolved response token: ${captchaResponse}`);\n    await this.sendCaptchaTokenToBackend(captchaResponse); //declaring the token send function with a token parameter\n    // await this.sendTokenToBackend(`${captchaResponse}`); //declaring the token send function with a token parameter\n  }\n\n  //function to send the token to the node server\n  sendCaptchaTokenToBackend(tok){\n    //calling the service and passing the token to the service\n    this.userservice.sendCaptchaToken(tok).subscribe(\n      data => {\n        // console.log(data)\n        this.captchaPassed = data.success;\n        console.log('captcha passed: ' + this.captchaPassed)\n      },\n      err => {\n        console.log(err)\n      },\n      () => {}\n    );\n  }\n\n  filldata() {\n    this.loginForm.patchValue({\n      email: 'nikhil.mittal60@gmail.com',\n      password: '123123'\n    });\n    this.captchaPassed = true;\n  }\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-new-password',\n  templateUrl: './new-password.component.html',\n  styleUrls: ['./new-password.component.css']\n})\nexport class NewPasswordComponent implements OnInit {\n\n  show: boolean = false;\n  showForm: boolean = false;\n  resetDisabled = false;\n\n  datasaved: boolean = false;\n  message: string = '';\n  resetForm: FormGroup;\n\n  constructor(private userservice: UserService, private formbuilder: FormBuilder, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.datasaved = false;\n    this.showForm = false;\n    console.log(this.route.snapshot.params.token);\n    this.getResetPasswordProfile(this.route.snapshot.params.token);\n\n    this.setFormState();\n    this.show = false;\n  }\n\n  setFormState():void {\n    this.resetForm = this.formbuilder.group({\n      email: [null, Validators.required],\n      password: [null, Validators.compose([Validators.required, Validators.pattern(/^(?=.*[-@_])[\\w@-]{6,20}$/)])],\n      confirmPassword: [null, Validators.required]\n    }, {validator: this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(frm: FormGroup) {\n    return frm.controls['password'].value === frm.controls['confirmPassword'].value ? null : { 'mismatch': true};\n  }\n\n  getResetPasswordProfile(token) {\n    this.userservice.getResetPassProfile(token).subscribe(\n      data =>{\n      console.log(data);\n      this.datasaved = true;\n      this.message = data.message;\n      if (data.success) {\n        this.showForm = true;\n        this.message = 'Please enter a new password';\n        this.resetForm.patchValue({\n          email: data.user.email\n        });\n      } \n    });\n  }\n\n  postdata() {\n    let user = this.resetForm.value;\n    console.log(user);\n\n    this.message = '';\n    this.resetPass(user);\n  }\n\n  resetPass(user: any){\n    this.userservice.resetPassword(user).subscribe(\n      data =>{\n        console.log(data.message);\n        this.datasaved = true;\n        this.message = data.message;\n        // setTimeout(() => {\n        //   this.datasaved = false;\n        // }, 5000);\n        \n        if (data.success) {\n          this.resetDisabled = true;\n          this.resetForm.reset();\n          this.message = data.message + '......Redirecting to Login Page';\n          setTimeout(() => {\n            this.router.navigate(['login']);\n          }, 10000);\n        } else {\n          this.resetDisabled = false;\n        }\n    });\n  }\n\n  revealPass() {\n    this.show = !this.show;\n  }\n\n  \n\n\n}\n","<div class=\"container-fluid mt-2\">\n    <div id=\"reset\">\n      <h2>Reset Password</h2><br>\n        \n      <div *ngIf=\"datasaved && !showForm\" style=\"margin-bottom: 400px;\" class=\"alert alert-success\">{{ message }}</div>\n      <form [formGroup]='resetForm' *ngIf=\"showForm\">\n        <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }}</div>\n        \n        <div class=\"form-group row\">\n          <label for=\"pass\" class=\"col-sm-3\">Password: * </label>\n          <input type=\"password\" class=\"form-control col-sm-9\" placeholder=\"Password\" formControlName=\"password\" id=\"pass\">\n          <span class=\"font-italic\" *ngIf = \"resetForm.controls['password'].touched && resetForm.controls['password'].hasError('required')\">Password is required</span>\n          <span class=\"font-italic\" *ngIf = \"resetForm.controls['password'].hasError('pattern')\">Password must be alphanumeric, must have atleat one special character (@, _ and - are allowed) and must be 6 - 20 characters</span>\n        </div>\n\n        <div class=\"form-group row mb-3\">\n          <label for=\"confirmPass\" class=\"col-sm-3\">Confirm Password: * </label>\n          <div class=\"input-group col-sm-9 p-0 mt-2\">\n            <input [type]=\"show ? 'text' : 'password'\" class=\"form-control\" placeholder=\"Confirm Password\" formControlName=\"confirmPassword\" id=\"confirmPass\" />\n            <div class=\"input-group-append\">\n              <div class=\"input-group-addon\">\n                <button type=\"button\" (click)=\"revealPass()\" class=\"btn btn-success pass\">\n                  <i *ngIf=\"!show\" class=\"fa fa-eye\"></i>\n                  <i *ngIf=\"show\" class=\"fa fa-eye-slash\"></i>\n                </button></div>\n            </div>\n          </div>\n          <span class=\"font-italic\" *ngIf = \"resetForm.errors?.mismatch && resetForm.controls['confirmPassword'].touched && resetForm.controls['password'].dirty\">Passwords do not match</span>\n        </div>\n\n        <div class=\"row\">\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"resetForm.invalid || resetDisabled\" (click)=\"postdata()\">Reset Password</button>\n        </div>\n      </form>\n    </div>\n      <br>\n  </div>\n    ","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotLoggedGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if(localStorage.getItem(\"User\")){\n        alert('You do not have the permission to view this page, redirecting to Dashboard');\n        this.router.navigate(['dashboard']);\n        return false;\n      } else {\n        return true;\n      }\n  }\n  \n}\n","<div class=\"container-fluid mt-2\">\n    <div id=\"register\"><br><br>\n      <h2>User Registration</h2><br>\n    \n      <form [formGroup]='regForm'>\n        <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }}</div>\n  \n        <div class=\"form-group row\">\n          <label for=\"name\" class=\"col-sm-3\">Name: * </label>\n          <input type=\"text\" class=\"form-control col-sm-9\" placeholder=\"Name\" formControlName=\"name\" id=\"name\">\n          <span class=\"font-italic\" *ngIf = \"regForm.controls['name'].touched && regForm.controls['name'].hasError('required')\">Name is required</span>\n          <span class=\"font-italic\" *ngIf = \"regForm.controls['name'].hasError('pattern')\">Name must be alphabets (. and space are also allowed) and must be maximum 50 characters long</span>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"username\" class=\"col-sm-3\">Username: * </label>\n          <input type=\"text\" class=\"form-control col-sm-9\" placeholder=\"Username\" formControlName=\"username\" id=\"username\">\n          <span class=\"font-italic\" *ngIf = \"regForm.controls['username'].touched && regForm.controls['username'].hasError('required')\">Username is required</span>\n          <span class=\"font-italic\" *ngIf = \"regForm.controls['username'].hasError('pattern')\">Username must be alphanumeric and contain 5 - 12 characters</span>\n        </div>\n    \n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-sm-3\">Email ID: * </label>\n          <input type=\"email\" class=\"form-control col-sm-9\" placeholder=\"Email ID\" formControlName=\"email\" id=\"email\">\n          <span class=\"font-italic\" *ngIf = \"regForm.controls['email'].touched && regForm.controls['email'].hasError('required')\">Email address is required</span>\n          <span class=\"font-italic\" *ngIf = \"regForm.controls['email'].hasError('pattern')\">Please enter a valid email address, e.g. me@mydomain.com</span>\n        </div>\n  \n        <div class=\"form-group row\">\n          <label for=\"pass\" class=\"col-sm-3\">Password: * </label>\n          <input type=\"password\" class=\"form-control col-sm-9\" placeholder=\"Password\" formControlName=\"password\" id=\"pass\">\n          <span class=\"font-italic\" *ngIf = \"regForm.controls['password'].touched && regForm.controls['password'].hasError('required')\">Password is required</span>\n          <span class=\"font-italic\" *ngIf = \"regForm.controls['password'].hasError('pattern')\">Password must be alphanumeric, must have atleat one special character (@, _ and - are allowed) and must be 6 - 20 characters</span>\n        </div>\n\n        <div class=\"form-group row mb-3\">\n          <label for=\"confirmPass\" class=\"col-sm-3\">Confirm Password: * </label>\n          <div class=\"input-group col-sm-9 p-0 mt-2\">\n            <input [type]=\"show ? 'text' : 'password'\" class=\"form-control\" placeholder=\"Confirm Password\" formControlName=\"confirmPassword\" id=\"confirmPass\" />\n            <div class=\"input-group-append\">\n              <div class=\"input-group-addon\">\n                <button type=\"button\" (click)=\"revealPass()\" class=\"btn btn-success pass\">\n                  <i *ngIf=\"!show\" class=\"fa fa-eye\"></i>\n                  <i *ngIf=\"show\" class=\"fa fa-eye-slash\"></i>\n                </button></div>\n            </div>\n          </div>\n          <span class=\"font-italic\" *ngIf = \"regForm.errors?.mismatch && regForm.controls['confirmPassword'].touched && regForm.controls['password'].dirty\">Passwords do not match</span>\n        </div>\n\n        <div class=\"form-group row\">\n          <re-captcha (resolved)=\"resolved($event)\" formControlName=\"recaptchaReactive\" siteKey=\"6Lc2sPUUAAAAADhSYFaD9tFsYoBz8p77uxPfiUNj\"></re-captcha>\n        </div>\n        \n        <div class=\"row\">\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"false && (regForm.invalid || !captchaPassed) || registerDisabled\" (click)=\"postdata()\">Register</button>\n\n            <button type=\"button\" class=\"btn btn-info ml-3\" (click)=\"filldata()\">Fill data</button>\n        </div>\n      </form>\n    </div>\n      <br>\n  </div>\n    ","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  show: boolean = false;\n  captchaPassed = false;\n  registerDisabled = false;\n\n  datasaved: boolean = false;\n  message: string = '';\n  regForm: FormGroup;\n\n  constructor(private userservice: UserService, private formbuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.registerDisabled = false;\n    this.setFormState();\n    this.show = false;\n    this.captchaPassed = false;\n  }\n\n  setFormState():void {\n    this.regForm = this.formbuilder.group({\n      name: [null, Validators.compose([Validators.required, Validators.pattern(/^[a-z\\. ]{1,50}$/i)])],\n      username: [null, Validators.compose([Validators.required, Validators.pattern(/^[a-z\\d]{5,12}$/i)])],\n      email: [null, Validators.compose([Validators.required, Validators.email, Validators.pattern(/^([a-z\\d\\.-]{1,30})@([a-z\\d-]{1,20})\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/i)])],\n      password: [null, Validators.compose([Validators.required, Validators.pattern(/^(?=.*[-@_])[\\w@-]{6,20}$/)])],\n      confirmPassword: [null, Validators.required],\n      recaptchaReactive: [null, Validators.required]\n    }, {validator: this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(frm: FormGroup) {\n    return frm.controls['password'].value === frm.controls['confirmPassword'].value ? null : { 'mismatch': true};\n  }\n\n  postdata() {\n    let user = this.regForm.value;\n    // console.log(user);\n\n    this.message = '';\n    this.createNewUser(user);\n  }\n\n  createNewUser(user: User){\n    this.userservice.createUser(user).subscribe(\n      data =>{\n        console.log(data.message);\n        this.datasaved = true;\n        this.message = data.message;\n        setTimeout(() => {\n          this.datasaved = false;\n        }, 4000);\n        \n        if (data.success) {\n          this.registerDisabled = true;\n          this.regForm.reset();\n        } else {\n          this.registerDisabled = false;\n        }\n    });\n  }\n\n  revealPass() {\n    this.show = !this.show;\n  }\n\n  //function to resolve the reCaptcha and retrieve a token\n  async resolved(captchaResponse: string) {\n    // console.log(`Resolved response token: ${captchaResponse}`);\n    await this.sendCaptchaTokenToBackend(captchaResponse); //declaring the token send function with a token parameter\n    // await this.sendTokenToBackend(`${captchaResponse}`); //declaring the token send function with a token parameter\n  }\n\n  //function to send the token to the node server\n  sendCaptchaTokenToBackend(tok){\n    //calling the service and passing the token to the service\n    this.userservice.sendCaptchaToken(tok).subscribe(\n      data => {\n        // console.log(data)\n        this.captchaPassed = data.success;\n        console.log('captcha passed: ' + this.captchaPassed)\n      },\n      err => {\n        console.log(err)\n      },\n      () => {}\n    );\n  }\n\n\n  filldata() {\n    this.regForm.patchValue({\n      name: 'BoGGDJ WJDLO',\n      username: 'tokomoko',\n      email: 'abc@abc.co.in',\n      password: '123123',\n      confirmPassword: '123123',\n      recaptchaReactive: true\n    });\n    this.captchaPassed = true;\n  }\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\nimport { Router } from '@angular/router';\nimport { concatMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-resend-activation-link',\n  templateUrl: './resend-activation-link.component.html',\n  styleUrls: ['./resend-activation-link.component.css']\n})\nexport class ResendActivationLinkComponent implements OnInit {\n\n  credentialsCheck = false;\n  emailAfterCheck = '';\n  submitDisabled = false;\n\n  datasaved: boolean = false;\n  message: string = '';\n  resendForm: FormGroup;\n\n  constructor(private userservice: UserService, private formbuilder: FormBuilder, private router: Router) { }\n\n  ngOnInit(): void {\n    this.setFormState();\n    this.credentialsCheck = false;\n  }\n\n  setFormState():void {\n    this.resendForm = this.formbuilder.group({\n      email: [null, Validators.compose([Validators.required, Validators.email, Validators.pattern(/^([a-z\\d\\.-]{1,20})@([a-z\\d-]{1,20})\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/i)])],\n      password: [null, Validators.required]\n    });\n  }\n\n  submitData() {\n    let user = this.resendForm.value;\n    console.log(user);\n    \n    this.credentialsCheck = false;\n    this.message = '';\n    this.resend(user);\n\n    \n  }\n\n\n  resend(user: User){\n      this.userservice.resendActivationLink(user).subscribe(\n        data => {\n          console.log(data);\n          console.log(data.message);\n          console.log(data.success);\n          // console.log(data.token);\n          this.datasaved = true;\n          this.message = data.message;\n          setTimeout(() => {\n            this.datasaved = false;\n          }, 3000);\n  \n          if (data.success) {\n            this.credentialsCheck = true;\n            this.emailAfterCheck = data.email;\n          }    \n  \n          if (this.credentialsCheck) {\n            this.userservice.resendActivationLink2(this.emailAfterCheck).subscribe(\n              result => {\n                console.log(result);\n                \n                this.message = result.message;\n                this.resendForm.reset();\n                this.datasaved = true;\n                setTimeout(() => {\n                  this.datasaved = true;\n                }, 3000);\n                setTimeout(() => {\n                  this.datasaved = false;\n                }, 8000);\n\n                if (result.success) {\n                  this.submitDisabled = true;\n                } else {\n                  this.submitDisabled = false;\n                }\n              }\n            );\n          }\n      });\n    }\n\n  \n\n  // resend(user: User){\n  //   this.userservice.resendActivationLink(user).subscribe(\n  //     data => {\n  //       console.log(data);\n  //       console.log(data.message);\n  //       console.log(data.success);\n  //       // console.log(data.token);\n  //       this.datasaved = true;\n  //       this.message = data.message;\n  //       setTimeout(() => {\n  //         this.datasaved = false;\n  //       }, 3000);\n\n  //       if (data.success) {\n  //         this.credentialsCheck = true;\n  //         this.emailAfterCheck = data.email;\n  //       }    \n\n  //       if (this.credentialsCheck) {\n  //         this.userservice.resendActivationLink2(this.emailAfterCheck).subscribe(\n  //           result => {\n  //             console.log(result);\n  //             this.message = result.message;\n  //             this.resendForm.reset();\n  //             this.datasaved = true;\n  //             setTimeout(() => {\n  //               this.datasaved = true;\n  //             }, 3000);\n  //           }\n  //         );\n  //       }\n  //   });\n  // }\n\n  \n\n\n}\n","<div class=\"container-fluid mt-5\">\n    <div id=\"resend\">\n      <h2>Resend Activation Link</h2><br>\n    \n      <form [formGroup]='resendForm'>\n        <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }}</div>\n        <!-- <div *ngIf=\"credentialsCheck\" class=\"alert alert-primary\">{{ message }}</div> -->\n  \n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-sm-3\">Email ID: * </label>\n          <input type=\"email\" class=\"form-control col-sm-9\" placeholder=\"Email ID\" formControlName=\"email\" id=\"email\">\n          <span class=\"font-italic\" *ngIf = \"resendForm.controls['email'].touched && resendForm.controls['email'].hasError('required')\">Email address is required</span>\n          <span class=\"font-italic\" *ngIf = \"resendForm.controls['email'].hasError('pattern')\">Please enter a valid email address, e.g. me@mydomain.com</span>\n        </div>\n  \n        <div class=\"form-group row mb-3\">\n          <label for=\"pass\" class=\"col-sm-3\">Password: * </label>\n          <input type=\"password\" class=\"form-control col-sm-9\" placeholder=\"Password\" formControlName=\"password\" id=\"pass\">\n          <span class=\"font-italic\" *ngIf = \"resendForm.controls['password'].touched && resendForm.controls['password'].hasError('required')\">Password is required</span>\n        </div>\n        \n        <div class=\"row\">\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"resendForm.invalid || submitDisabled\" (click)=\"submitData()\">Submit</button>\n        </div>\n\n      </form>\n    </div>\n      <br>\n  </div>\n    ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-social-error',\n  templateUrl: './social-error.component.html',\n  styleUrls: ['./social-error.component.css']\n})\nexport class SocialErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid mt-5\">\n    <h1>Account Activation</h1>\n    <h3>Your account is not yet activated. Please check your e-mail for activation link</h3>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-social',\n  templateUrl: './social.component.html',\n  styleUrls: ['./social.component.css']\n})\nexport class SocialComponent implements OnInit {\n\n  name: string;\n  datasaved = false;\n\n  constructor(private route: ActivatedRoute, private userservice: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    console.log(this.route.snapshot.params.token);\n    if(this.route.snapshot.params.token){\n      localStorage.setItem(\"User\", JSON.stringify(this.route.snapshot.params.token));\n    }\n\n\n    this.datasaved = false;\n    this.getUser();  \n  }\n\n  getUser(){\n    this.userservice.getLoggedUser().subscribe(\n      data =>{\n        console.log(data);\n        console.log(data.success);\n        if (data.success === false) {\n          localStorage.removeItem(\"User\");\n          this.router.navigate(['login']);\n        } \n        if (data.success === true) {\n          this.name = data.user.name;\n          this.datasaved = true;\n        }\n        \n    });\n  }\n\n}\n","<div class=\"container-fluid mt-5\">\n    <h3 *ngIf=\"datasaved\">Welcome to your profile, {{ name }}</h3>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from './user';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  // userUrl = 'http://localhost:4000/auth/';\n  userUrl = '/api/auth/';\n\n  constructor(private http: HttpClient) { }\n\n  createUser(user: User): Observable<User>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.post<User>(this.userUrl + 'register/', user, options);\n  }\n\n  loginUser(user: User): Observable<any>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.post<any>(this.userUrl + 'login/', user, options);\n  }\n\n  resendActivationLink(user: User): Observable<any>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.post<any>(this.userUrl + 'resend/', user, options);\n  }\n\n  resendActivationLink2(email): Observable<any>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.put<any>(this.userUrl + 'resend/', {email: email}, options);\n  }\n\n  // getUserUrl = 'http://localhost:4000/profile/';\n  getUserUrl = '/api/profile/';\n\n  getLoggedUser(): Observable<any>{\n    // let httpheaders = new HttpHeaders({'Content-Type': 'Application/Json', \"authorization\": localStorage.getItem(\"User\")});\n    // let httpheaders = new HttpHeaders().set(\"authorization\", \"Bearer \" + localStorage.getItem(\"User\"));\n    // let options = {\n    //   headers: httpheaders,\n    // }\n    return this.http.get<any>(this.getUserUrl);\n  }\n\n  // backendUrl = 'http://localhost:4000/';\n  backendUrl = '/api/';\n  sendCaptchaToken(token) {\n    return this.http.post<any>(this.backendUrl + \"token_validate/\", {recaptcha: token})\n  }\n\n  activateAccount(token) {\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.put<any>(this.userUrl + 'activate/' + token, options);\n  }\n\n  resetUsername(email: string): Observable<any>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.get<any>(this.userUrl + 'resetusername/' + email, options);\n  }\n\n  sendPasswordLink(user: any): Observable<any>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.put<any>(this.userUrl + 'resetpassword/', user, options);\n  }\n\n  getResetPassProfile(token: any): Observable<any>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.get<any>(this.userUrl + 'resetpassword/' + token, options);\n  }\n\n  resetPassword(user: any): Observable<any>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.put<any>(this.userUrl + 'savenewpassword/', user, options);\n  }\n\n  renewLoginToken(email: any): Observable<any>{\n    let httpheader= new HttpHeaders().set('Content-Type', 'Application/Json');\n    let options = {\n      headers: httpheader\n    }\n    return this.http.get<any>(this.userUrl + 'renewToken/' + email, options);\n  }\n\n  get(): Observable<any>{\n    // const url = 'http://localhost:4000/auth/';\n    const url = '/api/auth/';\n    return this.http.get<any>(url);\n  }\n\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ManagementService } from '../admin/management.service';\nimport { CartStore } from '../services/cart.store';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  sess: any;\n  logoutPressed = false;\n  permission = false;\n\n  datasaved = false;\n  totalQtyCart: Number;\n\n  constructor(\n    private http: HttpClient, \n    private managementservice: ManagementService, \n    private cartstore: CartStore) { }\n\n  ngOnInit(): void {\n    this.permission = false;\n    this.userPermission();\n    setInterval(() => {\n      this.getCartTotalRecords();  \n    }, 3000);\n  }\n\n  ngAfterContentChecked(): void {\n    this.sess = localStorage.getItem(\"User\");\n    // this.getCartTotalRecords();\n  }\n\n  logout() {\n    this.logoutPressed = true;\n    // localStorage.removeItem(\"User\");\n    // this.sessionClear();\n  }\n\n  // userUrl = 'http://localhost:4000/auth/';\n  userUrl = '/api/auth/';\n  sessionClear(): void{\n    this.http.get(this.userUrl + 'logout/').subscribe(() => {\n    });\n  }\n\n  userPermission() {\n    this.managementservice.getPermission().toPromise().then(data => {\n      if(data.permission === 'admin' || data.permission === 'moderator') {\n        this.permission = true;\n      } else {\n        this.permission = false;\n      }\n    });\n  }\n\n  // getCartTotalRecords() {\n  //   const url = '/api/cart-total-records/';\n  //   this.http.get<any>(url).subscribe(data => {\n  //     // console.log(data);\n  //     this.datasaved = false;\n  //     this.totalQtyCart = 0;\n  //     if(data.success) {\n  //       this.datasaved = true;\n  //       this.totalQtyCart = data.totalRecords;\n  //     }\n  //     if (this.totalQtyCart === 0) {\n  //       this.datasaved = false;\n  //     }\n  //   });\n  // }\n\n  getCartTotalRecords() {\n    this.cartstore.cartTotalRecords$.subscribe(data => {\n      this.totalQtyCart = data;\n    });\n    if (this.totalQtyCart === 0) {\n      this.datasaved = false;\n    } else {\n      this.datasaved = true;\n    }\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary fixed-top\">\n    <a class=\"navbar-brand\" href=\"\">GAMERZONE</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\">\n          <a routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" class=\"nav-link\">Home <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item\">\n          <a routerLink=\"/pages/about\" routerLinkActive=\"active\" class=\"nav-link\">About Us</a>\n        </li>\n      </ul>\n\n      <ul class=\"navbar-nav mr-4\">\n        <li class=\"nav-item\" >\n          <a routerLink=\"/shoppingCart\" routerLinkActive=\"active\" class=\"nav-link\">\n            <i class=\"fas fa-shopping-cart\"></i> Shopping Cart\n            <span class=\"badge badge-pill badge-danger\" *ngIf=\"datasaved\">{{ totalQtyCart }}</span>\n          </a>\n        </li>\n        <li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbardrop\" data-toggle=\"dropdown\">\n            <i class=\"fas fa-user\"></i> User Management\n          </a>\n          <div class=\"dropdown-menu\">\n            <a class=\"dropdown-item\" routerLink=\"/login\" routerLinkActive=\"active\" *ngIf=\"!sess\">Login</a>\n            <a class=\"dropdown-item\" routerLink=\"/registration\" routerLinkActive=\"active\" *ngIf=\"!sess\">Register</a>\n            <a class=\"dropdown-item\" routerLink=\"/dashboard\" routerLinkActive=\"active\" *ngIf=\"sess\">Dashboard</a>\n            <a class=\"dropdown-item\" routerLink=\"/management\" routerLinkActive=\"active\" *ngIf=\"sess && permission\">Management</a>\n            <a class=\"dropdown-item\" style=\"cursor: pointer;\" (click)=\"logout()\" *ngIf=\"sess\">Logout</a>\n          </div>\n        </li>\n        <!-- <li class=\"nav-item\" *ngIf=\"!sess\">\n          <a routerLink=\"/login\" routerLinkActive=\"active\" class=\"nav-link\">Login</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"sess\">\n          <a routerLink=\"/dashboard\" routerLinkActive=\"active\" class=\"nav-link\">Dashboard</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"!sess\">\n          <a routerLink=\"/registration\" routerLinkActive=\"active\" class=\"nav-link\">Register</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"sess && permission\">\n          <a routerLink=\"/management\" routerLinkActive=\"active\" class=\"nav-link\">Management</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"sess\">\n          <a style=\"cursor: pointer;\" class=\"nav-link\" (click)=\"logout()\">Logout</a>\n        </li> -->\n      </ul>\n    </div>\n  </nav>\n  <app-check-session [childlogoutPressed]=\"logoutPressed\"></app-check-session>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n \nimport { StripeService, Elements, Element as StripeElement, ElementsOptions } from \"ngx-stripe\";\nimport { ProductsService } from '../products.service';\nimport { Router } from '@angular/router';\nimport { CartStore } from 'src/app/services/cart.store';\nimport { Observable } from 'rxjs';\nimport { async } from '@angular/core/testing';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n\n  elements: Elements;\n  card: StripeElement;\n\n  // products: [];\n  // totalPrice: Number;\n  products: Observable<[]>;\n  totalPrice: Observable<Number>;\n  \n  datasaved = false;\n  message = '';\n  paymentDisabled = false;\n\n  // optional parameters\n  elementsOptions: ElementsOptions = {\n    locale: 'auto'\n  };\n \n  stripeTest: FormGroup;\n \n  constructor(\n    private router: Router,\n    private productservice: ProductsService,\n    private fb: FormBuilder,\n    private stripeService: StripeService,\n    private cartstore: CartStore) {}\n \n  ngOnInit() {\n    this.paymentDisabled = false;\n    this.datasaved = false;\n    this.message = '';\n    this.getShoppingCart();\n    this.stripeTest = this.fb.group({\n      name: ['', [Validators.required]],\n      address: ['', [Validators.required]],\n      cardholdername: ['', [Validators.required]]\n    });\n    this.stripeService.elements(this.elementsOptions)\n      .subscribe(elements => {\n        this.elements = elements;\n        // Only mount the element the first time\n        if (!this.card) {\n          this.card = this.elements.create('card', {\n            style: {\n              base: {\n                iconColor: '#666EE8',\n                color: '#000000',\n                fontWeight: 600,\n                fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n                fontSize: '18px',\n                fontSmoothing: 'antialiased',\n                '::placeholder': {\n                  color: '#ffffff',\n                  fontWeight: 600,\n                },\n              }\n            }\n          });\n          this.card.mount('#card-element');\n        }\n      });\n  }\n \n  buy() {\n    const name = this.stripeTest.get('name').value;\n    this.stripeService\n      .createToken(this.card, { name })\n      .subscribe(result => {\n        if (result.token) {\n          // Use the token to create a charge or a customer\n          // https://stripe.com/docs/charges\n          // console.log(result.token);\n          let address = this.stripeTest.get('address').value;\n          let name = this.stripeTest.get('name').value;\n          this.productservice.payment(result.token.id, address, name).subscribe(data => {\n              // console.log(data);\n              this.datasaved = true;\n              this.message = data.message;\n              if (data.error === 'redirect') {\n                setTimeout(() => {\n                  this.router.navigate(['/']);  \n                }, 3000);\n              }\n              if (data.success) {\n                this.paymentDisabled = true;\n                this.stripeTest.reset();\n                setTimeout(() => {\n                  // this.router.navigate(['/']);  \n                  this.cartstore.shoppingCart();\n                  this.getShoppingCart();\n                }, 3000);\n              }\n\n              setTimeout(() => {\n                this.datasaved = false;\n              }, 3000);\n          });\n        } else if (result.error) {\n          // Error creating the token\n          // console.log(result.error.message);\n          this.datasaved = true;\n          this.message = result.error.message\n          setTimeout(() => {\n            this.datasaved = false;\n          }, 3000);\n        }\n      });\n  }\n\n  // getShoppingCart() {\n  //   this.productservice.shoppingCart().subscribe(data => {\n  //     // console.log(data);\n  //     if (data.success) {\n  //       this.products = data.products;\n  //       this.totalPrice = data.totalPrice;\n  //     } else {\n  //       this.router.navigate(['/']);\n  //     }\n  //   });\n  // }\n\n  getShoppingCart() {\n    // this.products = this.cartstore.cartProducts$;\n    // this.totalPrice = this.cartstore.cartTotalPrice$;\n    this.cartstore.cartEmpty$.subscribe(\n      empty => {\n        if (!empty) {\n          this.products = this.cartstore.cartProducts$;\n          this.totalPrice = this.cartstore.cartTotalPrice$;\n        } else {\n          this.router.navigate(['/']);\n        }\n      }\n    );\n\n  }\n\n}","<div class=\"container-fluid w-75 mt-5\">\n    <br><br>\n    <div *ngIf=\"datasaved\" class=\"alert alert-success\">{{ message }}<br></div>\n    <div class=\"p-3\" style=\"background-color: lightgrey;\">\n        <form novalidate (ngSubmit)=\"buy()\" [formGroup]=\"stripeTest\">\n            <h1 class=\"text-center\">Checkout</h1>\n            <hr>\n            <div class=\"form-group row px-3\">\n                <label for=\"name\" class=\"col-sm-3\">Name: </label>\n                <input type=\"text\" class=\"form-control col-sm-9\" placeholder=\"Name\" formControlName=\"name\" id=\"name\">\n                <span class=\"font-italic\" *ngIf = \"stripeTest.controls['name'].touched && stripeTest.controls['name'].hasError('required')\">Name is required</span>\n            </div>\n\n            <div class=\"form-group row px-3\">\n                <label for=\"address\" class=\"col-sm-3\">Address: </label>\n                <input type=\"text\" class=\"form-control col-sm-9\" placeholder=\"Address\" formControlName=\"address\" id=\"address\">\n                <span class=\"font-italic\" *ngIf = \"stripeTest.controls['address'].touched && stripeTest.controls['address'].hasError('required')\">Address is required</span>\n            </div>\n\n            <div class=\"form-group row px-3 mb-3\">\n                <label for=\"cardholdername\" class=\"col-sm-3\">Card Holder Name: </label>\n                <input type=\"text\" class=\"form-control col-sm-9\" placeholder=\"Card Holder Name\" formControlName=\"cardholdername\" id=\"cardholdername\">\n                <span class=\"font-italic\" *ngIf = \"stripeTest.controls['cardholdername'].touched && stripeTest.controls['cardholdername'].hasError('required')\">Card Holder Name is required</span>\n            </div>\n            <hr>\n        \n            <div id=\"card-element\" class=\"field px-3 mb-3\"></div>\n            <hr>\n\n            <button type=\"submit\" class=\"btn btn-warning mt-3\" [disabled]=\"stripeTest.invalid || paymentDisabled\">\n            Pay ${{ totalPrice | async }}\n            </button>\n        </form>\n    </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggedGuard implements CanActivate {\n  \n  constructor(private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if(localStorage.getItem(\"User\")){\n        return true;\n    } else {\n        this.router.navigate(['login']);\n        return false;\n    }\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from '../products.service';\nimport { ProductsStore } from 'src/app/services/products.store';\nimport { Observable } from 'rxjs';\nimport { CartStore } from 'src/app/services/cart.store';\n\n@Component({\n  selector: 'app-products-list',\n  templateUrl: './products-list.component.html',\n  styleUrls: ['./products-list.component.css']\n})\nexport class ProductsListComponent implements OnInit {\n\n  products: [];\n  allProducts$: Observable<[]>;\n  datasaved = false;\n  message = '';\n\n  constructor(\n    private productservice: ProductsService, \n    private productstore: ProductsStore,\n    private cartstore: CartStore) { }\n\n  ngOnInit(): void {\n    this.datasaved = false;\n    this.message = '';\n    this.allProducts$ = this.productstore.products$;\n  }\n\n  // getAllProducts() {\n  //   this.productservice.getProducts().subscribe(data => {\n  //     // console.log(data);\n  //     if (data.success) {\n  //       this.datasaved = true;\n  //       this.message = data.message;\n  //       this.products = data.products;\n  //     }\n  //   });\n  // }\n\n  addToCart(productId) {\n    // this.productservice.addItemToCart(productId).subscribe(data => {\n    //   // console.log(data);\n    // });\n    this.cartstore.addItemToCart(productId).subscribe(data => {\n      // console.log(data);\n      // console.log(data.cart.totalQty);\n      this.cartstore.shoppingCart();\n    });\n  }\n\n}\n","<div class=\"container-fluid pt-5 px-5\">\n    <br><br>\n    <div class=\"row\">\n        <div class=\"col-md-4 col-sm-6 mb-5\" *ngFor=\"let product of allProducts$ | async; let i = index\" >\n            <div class=\"card\">\n                <div class=\"card-header p-0\">\n                    <img src=\"http://localhost:4000/uploads/{{ product.image }}\" alt=\"{{ product.image }}\" class=\"w-100 img-fluid img-thumbnail\">      \n                </div>\n                <div class=\"card-body\">\n                    <h3>{{ product.title }}</h3>\n                    <p class=\"text-muted text-justify\">{{ product.short_descrip }}</p>\n                </div>\n                <div class=\"card-footer\">\n                    <h3>${{ product.price }}</h3>\n                    <button type=\"button\" class=\"btn\" (click)=\"addToCart(product._id)\">Add to Cart</button>\n                </div>\n            </div>\n        </div>\n        \n    </div>\n\n</div>\n<br>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductsListComponent } from './products-list/products-list.component';\nimport { ShoppingCartComponent } from './shopping-cart/shopping-cart.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport { LoggedGuard } from './logged.guard';\n\n\nconst routes: Routes = [\n  {path: 'products', component: ProductsListComponent },\n  {path: 'shoppingCart', component: ShoppingCartComponent },\n  {path: 'checkout', component: CheckoutComponent, canActivate: [LoggedGuard]},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProductsRoutingModule } from './products-routing.module';\nimport { ProductsListComponent } from './products-list/products-list.component';\nimport { ProductsService } from './products.service';\nimport { ShoppingCartComponent } from './shopping-cart/shopping-cart.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxStripeModule } from 'ngx-stripe';\nimport { LoggedGuard } from './logged.guard';\nimport { ProductsStore } from '../services/products.store';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CartStore } from '../services/cart.store';\n\n@NgModule({\n  declarations: [ProductsListComponent, ShoppingCartComponent, CheckoutComponent ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxStripeModule.forRoot('pk_test_WjoZqJPM8rCYZ8mNzst6ZaTr00r88kew2O'),\n    ProductsRoutingModule\n  ],\n  providers: [ProductsService, LoggedGuard, ProductsStore, CartStore]\n})\nexport class ProductsModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor(private http: HttpClient) { }\n\n  // getProducts(): Observable<any>{\n  //   const productUrl = '/api/products/';\n  //   return this.http.get<any>(productUrl);\n  // }\n\n  // addItemToCart(id): Observable<any>{\n  //   const url = '/api/add-to-cart/';\n  //   return this.http.get<any>(url + id);\n  // }\n\n  reduceByOne(id): Observable<any>{\n    const url = '/api/reduce/';\n    return this.http.get<any>(url + id);\n  }\n\n  removeProduct(id): Observable<any>{\n    const url = '/api/remove/';\n    return this.http.get<any>(url + id);\n  }\n\n  // shoppingCart(): Observable<any>{\n  //   const url = '/api/shopping-cart/';\n  //   return this.http.get<any>(url);\n  // }\n\n  checkout(): Observable<any>{\n    const url = '/api/checkout/';\n    return this.http.get<any>(url);\n  }\n\n  payment(id, address, name): Observable<any>{\n    const url = '/api/order/';\n    return this.http.post<any>(url, {stripeToken: id, address: address, name: name});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from '../products.service';\nimport { Router } from '@angular/router';\nimport { CartStore } from 'src/app/services/cart.store';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit {\n\n  // products: [];\n  // totalPrice: Number;\n  products: Observable<[]>;\n  totalPrice: Observable<Number>;\n  cartsaved = false;\n\n  constructor(\n    private productservice: ProductsService, \n    private router: Router,\n    private cartstore: CartStore) { }\n\n  ngOnInit(): void {\n    this.cartsaved = false;\n    this.getShoppingCart();\n  }\n\n  // getShoppingCart() {\n  //   this.productservice.shoppingCart().subscribe(data => {\n  //     // console.log(data);\n  //     if (data.success) {\n  //       this.products = data.products;\n  //       this.totalPrice = data.totalPrice;\n  //       this.cartsaved = true;\n  //       if (this.totalPrice === 0) {\n  //         this.cartsaved = false;\n  //       }\n  //     }\n  //   });\n  // }\n\n  getShoppingCart() {\n    this.products = this.cartstore.cartProducts$;\n    this.totalPrice = this.cartstore.cartTotalPrice$;\n    // this.cartstore.cartProducts$.subscribe(data => {\n    //   this.products = data;\n    // });\n\n    // this.cartstore.cartTotalPrice$.subscribe(data => {\n    //   this.totalPrice = data;\n    // });\n    // this.cartsaved = true;\n    // if (this.totalPrice === 0) {\n    //   this.cartsaved = false;\n    // }\n\n  }\n\n  checkout() {\n    this.productservice.checkout().subscribe(data => {\n      if (data.success) {\n        this.router.navigate(['/checkout']);\n      }\n    });\n  }\n\n  reduce(id) {\n    this.productservice.reduceByOne(id).subscribe(data => {\n      if (data.success) {\n        this.cartstore.shoppingCart();\n        this.getShoppingCart();\n      }\n    });\n  }\n\n  remove(id) {\n    this.productservice.removeProduct(id).subscribe(data => {\n      if (data.success) {\n        this.cartstore.shoppingCart();\n        this.getShoppingCart();\n      }\n    });\n  }\n\n  trackByProductId(id: string, product: any) {\n    return product.item._id;\n  }\n\n}\n","<div class=\"container-fluid pt-5 w-75\" *ngIf=\"(totalPrice | async) !== 0\">\n    <br><br>\n    <div class=\"row\">\n        <ul class=\"list-group w-100\">\n            <li class=\"list-group-item d-flex align-items-center\" *ngFor=\"let product of (products | async); let i = index; trackBy: trackByProductId\">\n                <strong>{{ product.item.title }}</strong>\n                <span class=\"badge badge-success mx-2\">${{ product.price }}</span>\n                <div class=\"btn-group\">\n                    <button type=\"button\" class=\"btn btn-sm btn-primary dropdown-toggle\" data-toggle=\"dropdown\">\n                        Action\n                    </button>\n                    <div class=\"dropdown-menu\">\n                        <a class=\"dropdown-item\" (click)=\"reduce(product.item._id)\">Reduce by 1</a>\n                        <a class=\"dropdown-item\" (click)=\"remove(product.item._id)\">Remove All</a>\n                    </div>\n                </div>\n                <span class=\"badge badge-primary badge-pill ml-auto\">{{ product.qty }}</span>\n            </li>\n        </ul>\n    </div>\n    <br><br>\n    <div class=\"row\">\n        <strong>Total: ${{ totalPrice | async }}</strong>\n    </div>\n    <hr>\n\n    <div class=\"row\">\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"checkout()\">CheckOut</button>\n    </div>\n</div>\n\n<div class=\"container-fluid pt-5 w-50\" *ngIf=\"(totalPrice | async) === 0\">\n    <br><br>\n    <div class=\"row\">\n        <h2>No Item in Cart</h2>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map, tap, shareReplay, delay, distinctUntilChanged, auditTime, debounceTime } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartStore {\n    private subjectTotalRecords = new BehaviorSubject<Number>(0);\n    cartTotalRecords$ : Observable<Number> = this.subjectTotalRecords.asObservable();\n\n    private subjectCartProducts = new BehaviorSubject<[]>([]);\n    cartProducts$ : Observable<[]> = this.subjectCartProducts.asObservable();\n\n    private subjectTotalPrice = new BehaviorSubject<Number>(0);\n    cartTotalPrice$ : Observable<Number> = this.subjectTotalPrice.asObservable();\n\n    private subjectCartEmpty = new BehaviorSubject<Boolean>(false);\n    cartEmpty$ : Observable<Boolean> = this.subjectCartEmpty.asObservable();\n\n    constructor( private http: HttpClient ) {\n        this.shoppingCart();\n    }\n\n    shoppingCart(){\n        const url = '/api/shopping-cart/';\n        const shoppingcart$ =  this.http.get<any>(url)\n        .pipe(\n            map(response => response),\n            catchError(err => {\n                const messsage = \"Could not load cart\";\n                console.log(messsage, err);\n                this.subjectTotalRecords.next(0);\n                this.subjectCartProducts.next([]);\n                this.subjectTotalPrice.next(0);\n                this.subjectCartEmpty.next(true);\n                return throwError(err);\n            }),\n            tap(response => {\n                if (response[\"success\"]) {\n                    this.subjectTotalRecords.next(response[\"totalRecords\"]);\n                    this.subjectCartProducts.next(response[\"products\"]);\n                    this.subjectTotalPrice.next(response[\"totalPrice\"]);\n                    this.subjectCartEmpty.next(false);\n                } else {\n                    this.subjectTotalRecords.next(0);\n                    this.subjectCartProducts.next([]);\n                    this.subjectTotalPrice.next(0);\n                    this.subjectCartEmpty.next(true);\n                }\n                \n            }),\n            shareReplay()\n        );\n        shoppingcart$.subscribe();\n    }\n\n    addItemToCart(id): Observable<any>{\n        const url = '/api/add-to-cart/';\n        return this.http.get<any>(url + id)\n        .pipe(\n            map(response => response),\n            tap(response => this.subjectTotalRecords.next(response.cart.totalQty)),\n            shareReplay()\n        );\n    }\n\n\n    \n}","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map, tap, shareReplay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsStore {\n    private subject = new BehaviorSubject<[]>([]);\n\n    products$ : Observable<[]> = this.subject.asObservable();\n\n    constructor(\n        private http: HttpClient\n    ) {\n        this.getAllProducts();\n    }\n\n    private getAllProducts() {\n        const productUrl = '/api/products/';\n        const loadProducts$ = this.http.get<[]>(productUrl)\n            .pipe(\n                map(response => response[\"products\"]),\n                catchError(err => {\n                    const messsage = \"Could not load products\";\n                    console.log(messsage, err);\n                    return throwError(err);\n                }),\n                tap(products => this.subject.next(products)),\n                shareReplay()\n            );\n        loadProducts$.subscribe(); \n    }\n\n    // loadAllProducts(): Observable<[]> {\n    //     // return this.products$.pipe(\n    //     //     map(products => products)\n    //     // );\n    //     return this.subject.asObservable();\n    // }\n\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.css']\n})\nexport class AboutUsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <br><br><br>\n    <img src=\"../../../assets/Images/aboutus.jpg\" alt=\"About Us\" class=\"w-100 img-fluid\">\n</div>\n<br>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AboutUsComponent } from './about-us/about-us.component';\n\n\nconst routes: Routes = [\n  {path: 'pages/:id', component: AboutUsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StaticPagesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StaticPagesRoutingModule } from './static-pages-routing.module';\nimport { AboutUsComponent } from './about-us/about-us.component';\n\n\n@NgModule({\n  declarations: [AboutUsComponent],\n  imports: [\n    CommonModule,\n    StaticPagesRoutingModule\n  ]\n})\nexport class StaticPagesModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}